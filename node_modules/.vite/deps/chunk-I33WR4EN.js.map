{
  "version": 3,
  "sources": ["../../d3-path/src/path.js", "../../d3-shape/src/constant.js", "../../d3-shape/src/math.js", "../../d3-shape/src/arc.js", "../../d3-shape/src/curve/linear.js", "../../d3-shape/src/point.js", "../../d3-shape/src/line.js", "../../d3-shape/src/area.js", "../../d3-shape/src/descending.js", "../../d3-shape/src/identity.js", "../../d3-shape/src/pie.js", "../../d3-shape/src/curve/radial.js", "../../d3-shape/src/array.js", "../../d3-shape/src/symbol/circle.js", "../../d3-shape/src/symbol/diamond.js", "../../d3-shape/src/symbol/star.js", "../../d3-shape/src/symbol/triangle.js", "../../d3-shape/src/symbol/wye.js", "../../d3-shape/src/symbol.js", "../../d3-shape/src/noop.js", "../../d3-shape/src/curve/basis.js", "../../d3-shape/src/curve/basisClosed.js", "../../d3-shape/src/curve/basisOpen.js", "../../d3-shape/src/curve/bundle.js", "../../d3-shape/src/curve/cardinal.js", "../../d3-shape/src/curve/cardinalClosed.js", "../../d3-shape/src/curve/cardinalOpen.js", "../../d3-shape/src/curve/catmullRom.js", "../../d3-shape/src/curve/catmullRomClosed.js", "../../d3-shape/src/curve/catmullRomOpen.js", "../../d3-shape/src/curve/linearClosed.js", "../../d3-shape/src/curve/monotone.js", "../../d3-shape/src/curve/natural.js", "../../d3-shape/src/curve/step.js", "../../d3-shape/src/offset/none.js", "../../d3-shape/src/order/none.js", "../../d3-shape/src/stack.js", "../../d3-shape/src/offset/diverging.js", "../../@devexpress/dx-chart-core/src/constants.ts", "../../@devexpress/dx-chart-core/src/utils/scale.ts", "../../@devexpress/dx-chart-core/src/plugins/scale/computeds.ts", "../../@devexpress/dx-chart-core/src/plugins/layout-manager/computeds.ts", "../../@devexpress/dx-chart-core/src/plugins/axis/computeds.ts", "../../@devexpress/dx-chart-core/src/plugins/series/computeds.ts", "../../@devexpress/dx-chart-core/src/plugins/stack/computeds.ts", "../../@devexpress/dx-chart-core/src/plugins/animation/computeds.ts", "../../@devexpress/dx-chart-core/src/utils/hover-state.ts", "../../@devexpress/dx-chart-core/src/utils/common.ts", "../../@devexpress/dx-chart-core/src/plugins/tooltip/computeds.ts", "../../@devexpress/dx-chart-core/src/plugins/zoom-and-pan/computeds.ts", "../../@devexpress/dx-chart-core/src/plugins/controller-component/computeds.ts", "../../@devexpress/dx-chart-core/src/utils/series.ts", "../../@devexpress/dx-chart-core/src/utils/legend.ts", "../../@devexpress/dx-chart-core/src/utils/event-tracker.ts", "../../@devexpress/dx-chart-core/src/utils/animation.ts", "../../@devexpress/dx-react-chart/src/plugins/basic-data.tsx", "../../@devexpress/dx-react-chart/src/plugins/chart-core.tsx", "../../@devexpress/dx-react-chart/src/plugins/axes-layout.tsx", "../../@devexpress/dx-react-chart/src/plugins/space-filling-rects.tsx", "../../@devexpress/dx-react-chart/src/plugins/controller-component.tsx", "../../@devexpress/dx-react-chart/src/templates/clip-path.tsx", "../../@devexpress/dx-react-chart/src/utils/updatable-sizer.tsx", "../../@devexpress/dx-react-chart/src/plugins/pane-layout.tsx", "../../@devexpress/dx-react-chart/src/plugins/layout-manager.tsx", "../../@devexpress/dx-react-chart/src/plugins/component-layout.tsx", "../../@devexpress/dx-react-chart/src/plugins/palette.tsx", "../../@devexpress/dx-react-chart/src/templates/layout.tsx", "../../@devexpress/dx-react-chart/src/templates/label.tsx", "../../@devexpress/dx-react-chart/src/chart.tsx", "../../@devexpress/dx-react-chart/src/templates/legend/marker.tsx", "../../@devexpress/dx-react-chart/src/plugins/legend.tsx", "../../@devexpress/dx-react-chart/src/plugins/title.tsx", "../../@devexpress/dx-react-chart/src/utils/series-helper.tsx", "../../@devexpress/dx-react-chart/src/utils/patch-props.tsx", "../../@devexpress/dx-react-chart/src/plugins/scale.tsx", "../../@devexpress/dx-react-chart/src/plugins/stack.tsx", "../../@devexpress/dx-react-chart/src/plugins/animation.tsx", "../../@devexpress/dx-react-chart/src/utils/with-states.tsx", "../../@devexpress/dx-react-chart/src/templates/pattern.tsx", "../../@devexpress/dx-react-chart/src/utils/with-pattern.tsx", "../../@devexpress/dx-react-chart/src/utils/with-animation.tsx", "../../@devexpress/dx-react-chart/src/templates/series/area.tsx", "../../@devexpress/dx-react-chart/src/plugins/area-series.tsx", "../../@devexpress/dx-react-chart/src/templates/series/point-collection.tsx", "../../@devexpress/dx-react-chart/src/templates/series/bar.tsx", "../../@devexpress/dx-react-chart/src/plugins/bar-series.tsx", "../../@devexpress/dx-react-chart/src/templates/series/path.tsx", "../../@devexpress/dx-react-chart/src/templates/series/line.tsx", "../../@devexpress/dx-react-chart/src/plugins/line-series.tsx", "../../@devexpress/dx-react-chart/src/templates/series/slice.tsx", "../../@devexpress/dx-react-chart/src/plugins/pie-series.tsx", "../../@devexpress/dx-react-chart/src/templates/series/point.tsx", "../../@devexpress/dx-react-chart/src/plugins/scatter-series.tsx", "../../@devexpress/dx-react-chart/src/templates/series/spline.tsx", "../../@devexpress/dx-react-chart/src/plugins/spline-series.tsx", "../../@devexpress/dx-react-chart/src/templates/axis/root.tsx", "../../@devexpress/dx-react-chart/src/templates/axis/label.tsx", "../../@devexpress/dx-react-chart/src/templates/axis/line.tsx", "../../@devexpress/dx-react-chart/src/plugins/axis.tsx", "../../@devexpress/dx-react-chart/src/plugins/tooltip.tsx", "../../@devexpress/dx-react-chart/src/templates/drag-box.tsx", "../../@devexpress/dx-react-chart/src/plugins/zoom-and-pan.tsx", "../../@devexpress/dx-react-chart/src/plugins/event-tracker.tsx", "../../@devexpress/dx-react-chart/src/plugins/hover-state.tsx", "../../@devexpress/dx-react-chart/src/plugins/selection-state.tsx"],
  "sourcesContent": ["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? Weâ€™re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n", "export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n", "export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n", "import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 â‰¥ r0, da1 â‰¥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sectorâ€™s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and itâ€™s a circular sector?\n      // Or perhaps itâ€™s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sectorâ€™s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n", "function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n", "export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n", "import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n", "import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n", "export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n", "export default function(d) {\n  return d;\n}\n", "import constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n", "import curveLinear from \"./linear.js\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n", "export var slice = Array.prototype.slice;\n", "import {pi, tau} from \"../math.js\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n", "var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n", "import {pi, tau} from \"../math.js\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n", "var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n", "var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n", "import {path} from \"d3-path\";\nimport circle from \"./symbol/circle.js\";\nimport cross from \"./symbol/cross.js\";\nimport diamond from \"./symbol/diamond.js\";\nimport star from \"./symbol/star.js\";\nimport square from \"./symbol/square.js\";\nimport triangle from \"./symbol/triangle.js\";\nimport wye from \"./symbol/wye.js\";\nimport constant from \"./constant.js\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n", "export default function() {}\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n", "import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n", "import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n", "import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import noop from \"../noop.js\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n", "function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic BÃ©zier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n", "function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n", "function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n", "export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n", "export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n", "import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n", "export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n", "/** @internal */\nexport const HORIZONTAL = 'horizontal';\n/** @internal */\nexport const VERTICAL = 'vertical';\n/** @internal */\nexport const TOP = 'top';\n/** @internal */\nexport const BOTTOM = 'bottom';\n/** @internal */\nexport const LEFT = 'left';\n/** @internal */\nexport const RIGHT = 'right';\n/** @internal */\nexport const MIDDLE = 'middle';\n/** @internal */\nexport const END = 'end';\n/** @internal */\nexport const START = 'start';\n/** @internal */\nexport const LINEAR = 'linear';\n/** @internal */\nexport const BAND = 'band';\n/** @internal */\nexport const ARGUMENT_DOMAIN = 'argument-domain';\n/** @internal */\nexport const VALUE_DOMAIN = 'value-domain';\n/** @internal */\nexport const HOVERED = 'hovered';\n/** @internal */\nexport const SELECTED = 'selected';\n/** @internal */\nexport const DIFFERENCE = 3;\n", "import {\n  scaleLinear as d3ScaleLinear, scaleBand as d3ScaleBand,\n} from 'd3-scale';\nimport {\n  ARGUMENT_DOMAIN, VALUE_DOMAIN,\n} from '../constants';\nimport {\n  ScaleObject, FactoryFn, DomainInfo, NumberArray, DomainBounds, DomainItems,\n} from '../types';\n\n/** @internal */\nexport const scaleLinear: FactoryFn = d3ScaleLinear as any;\n\nexport const scaleBand: FactoryFn = () => (\n  d3ScaleBand().paddingInner(0.3).paddingOuter(0.15) as any\n);\n\n/** @internal */\nexport const isHorizontal = (name: string, rotated: boolean) => (\n  name === ARGUMENT_DOMAIN === !rotated\n);\n\n// tslint:disable-next-line: ban-types\nconst makeScaleHelper = <T extends Function>(linear: T, band: T) => {\n  const func: any = (scale: ScaleObject, ...args: any[]) => {\n    const choosen = 'bandwidth' in scale ? band : linear;\n    return choosen(scale, ...args);\n  };\n  return func as T;\n};\n\nconst getLinearScaleWidth = (_: ScaleObject) => 0;\n\nconst getBandScaleWidth = (scale: ScaleObject) => scale.bandwidth!();\n\n/** @internal */\nexport const getWidth = makeScaleHelper(getLinearScaleWidth, getBandScaleWidth);\n\n/** @internal */\nexport const getValueDomainName = (name?: string) => name || VALUE_DOMAIN;\n\nconst floatsEqual = (a: number, b: number) => Math.abs(a - b) < Number.EPSILON;\n\n/** @internal */\nexport const rangesEqual = (r1: Readonly<NumberArray>, r2: Readonly<NumberArray>) =>\n  floatsEqual(r1[0], r2[0]) && floatsEqual(r1[1], r2[1]);\n\nconst wrapLinearScale = (scale: ScaleObject) => scale;\n\nconst wrapBandScale = (scale: ScaleObject): ScaleObject => {\n  const ret: any = (value: any) => scale(value) + scale.bandwidth!() / 2;\n  Object.assign(ret, scale);\n  return ret;\n};\n\nconst wrapScale = makeScaleHelper(wrapLinearScale, wrapBandScale);\n\n/** @internal */\nexport const makeScale = ({ factory, domain }: DomainInfo, range: NumberArray) => {\n  const scale = (factory || scaleLinear)().domain(domain).range(range);\n  return wrapScale(scale);\n};\n\n// It is implicitly supposed that Chart can accept any d3 scale. It is wrong.\n// The followings notes show that. d3 scales are not seamlessly interchangeable themselves\n// (i.e. band scale has no \"invert\", continuous scale has no \"bandwidth\").\n// We have to use \"adapters\" to mitigate the differences.\n// Hence Chart can actually accept any object that matches \"adapter\" interface.\n// TODO: We should update reference accordingly. There might be breaking changes though.\n\nconst scaleLinearBounds = (scale: ScaleObject, bounds: DomainBounds): NumberArray => (\n  bounds.map(scale) as NumberArray\n);\n\n// There is an issue - when range is \"inverted\" values are scaled incorrectly.\n//   scaleBand().domain(['a', 'b', 'c']).range([0, 60])('b') === 20\n//   scaleBand().domain(['a', 'b', 'c']).range([60, 0])('b') === 20 (should be 40)\nconst scaleBandBounds = (scale: ScaleObject, bounds: DomainBounds): NumberArray => {\n  const cleanScale = scale.copy().paddingInner!(0).paddingOuter!(0);\n  const fullRange = scale.range();\n  const sign = Math.sign(fullRange[1] - fullRange[0]);\n  return sign >= 0\n    ? [cleanScale(bounds[0]), cleanScale(bounds[1]) + cleanScale.bandwidth!()]\n    : [cleanScale(bounds[0]) + cleanScale.bandwidth!(), cleanScale(bounds[1])];\n};\n\nconst moveLinearScaleBounds = (\n  scale: ScaleObject, bounds: DomainBounds, delta: number,\n): DomainBounds => {\n  const fullRange = scale.range();\n  const sign = Math.sign(fullRange[1] - fullRange[0]);\n  const range = scaleLinearBounds(scale, bounds);\n  let r0 = range[0] + delta;\n  let r1 = range[1] + delta;\n  // Check if new range is outside of the left border.\n  if (Math.sign(r0 - fullRange[0]) !== sign) {\n    r0 = fullRange[0];\n    r1 = r0 + range[1] - range[0];\n  }\n  // Check if new range is outside of the right border.\n  if (Math.sign(fullRange[1] - r1) !== sign) {\n    r1 = fullRange[1];\n    r0 = r1 - range[1] + range[0];\n  }\n  const newBounds: DomainBounds = [scale.invert!(r0), scale.invert!(r1)];\n  return rangesEqual(bounds, newBounds) ? bounds : newBounds;\n};\n\n// This is pointer \"delta\" processing specific for \"band\" scale.\n// If pointer delta is significantly smaller than band size (0.3) then movement should be skipped\n// and current delta should be added to a next one (from a new \"move\" event).\n// Now there is no code that accumulates deltas.\n// In order to allow band scrolling at least somehow the following is applied - if pointer delta\n// is at least greater than 30 pixel then minimal movement is performed.\n// TODO: Make proper delta accumulation!\nconst adjustBandScaleMoveStep = (delta: number, step: number) => {\n  const ratio = Math.abs(delta / step);\n  const sign = Math.sign(delta / step);\n  if (ratio >= 0.5) {\n    return sign * Math.round(ratio);\n  }\n  if (ratio >= 0.3) {\n    return sign;\n  }\n  if (Math.abs(delta) > 30) {\n    return sign;\n  }\n  return 0;\n};\n\n// Band case is processed separately to preserve categories count in the bounds range.\n// If common inversion mechanism is used start and end bounds cannot be inverted independently\n// because of rounding issues which may add or remove categories to the new bounds.\nconst moveBandScaleBounds = (\n  scale: ScaleObject, bounds: DomainBounds, delta: number,\n): DomainBounds => {\n  const domain = scale.domain();\n  const fullRange = scale.range();\n  const step = (fullRange[1] - fullRange[0]) / domain.length;\n  const rangeStep = adjustBandScaleMoveStep(delta, step);\n  if (rangeStep === 0) {\n    return bounds;\n  }\n  const range = scaleBounds(scale, bounds);\n  const range0 = Math.round((range[0] - fullRange[0]) / step);\n  const range1 = range0 + Math.round((range[1] - range[0]) / step) - 1;\n  let new0 = range0 + rangeStep;\n  let new1 = range1 + rangeStep;\n  if (new0 < 0) {\n    new0 = 0;\n    new1 = new0 + range1 - range0;\n  }\n  if (new1 > domain.length - 1) {\n    new1 = domain.length - 1;\n    new0 = new1 - range1 + range0;\n  }\n  if (new0 === range0 || new1 === range1) {\n    return bounds;\n  }\n  return [domain[new0], domain[new1]];\n};\n\n// Defines how much linear scale can be zoomed it.\n// I.e. if original scale domain has size of 1, then fully zoomed scale domain has size\n// of 1 / LINEAR_SCALE_ZOOMING_THRESHOLD.\nconst LINEAR_SCALE_ZOOMING_THRESHOLD = 1000;\n\nconst growLinearScaleBounds = (\n  scale: ScaleObject, bounds: DomainBounds, delta: number, anchor: number,\n): DomainBounds => {\n  const fullRange = scale.range();\n  const minRangeThreshold = (fullRange[1] - fullRange[0]) / LINEAR_SCALE_ZOOMING_THRESHOLD;\n  const sign = Math.sign(fullRange[1] - fullRange[0]);\n  const range = scaleBounds(scale, bounds);\n  // If zooming in and initial range is already too small then do nothing.\n  if (delta > 0 && Math.abs(range[1] - range[0]) <= Math.abs(minRangeThreshold)) {\n    return bounds;\n  }\n  // If zooming out and initial range is already too large then do nothing.\n  if (delta < 0 && Math.abs(range[1] - range[0]) >= Math.abs(fullRange[1] - fullRange[0])) {\n    return bounds;\n  }\n  const t = Math.abs((anchor - range[0]) / (range[1] - range[0]));\n  let r0 = range[0] + sign * delta * 2 * t;\n  let r1 = range[1] - sign * delta * 2 * (1 - t);\n  // If new range is outside of the left border then clamp it.\n  if (Math.sign(r0 - fullRange[0]) !== sign) {\n    r0 = fullRange[0];\n  }\n  // If new range is outside of the right border then clamp it.\n  if (Math.sign(fullRange[1] - r1) !== sign) {\n    r1 = fullRange[1];\n  }\n  // If new range is too small then make it no less than minimal available.\n  if (Math.sign(r1 - r0) !== sign || Math.abs(r1 - r0) < Math.abs(minRangeThreshold)) {\n    if (Math.abs(r0 - range[0]) < Math.abs(minRangeThreshold / 2)) {\n      // Dock it to the start.\n      r0 = range[0];\n      r1 = r0 + minRangeThreshold;\n    } else if (Math.abs(r1 - range[1]) < Math.abs(minRangeThreshold / 2)) {\n      // Dock it to the end.\n      r1 = range[1];\n      r0 = r1 - minRangeThreshold;\n    } else {\n      // Dock it to the anchor.\n      r0 = anchor - minRangeThreshold / 2;\n      r1 = anchor + minRangeThreshold / 2;\n    }\n  }\n  const newBounds: DomainBounds = [scale.invert!(r0), scale.invert!(r1)];\n  return rangesEqual(bounds, newBounds) ? bounds : newBounds;\n};\n\nconst growBandScaleBounds = (\n  scale: ScaleObject, bounds: DomainBounds, delta: number, anchor: number,\n): DomainBounds => {\n  const domain = scale.domain();\n  const fullRange = scale.range();\n  const step = (fullRange[1] - fullRange[0]) / domain.length;\n  const range = scaleBounds(scale, bounds);\n  const range0 = Math.round((range[0] - fullRange[0]) / step);\n  const range1 = range0 + Math.round((range[1] - range[0]) / step) - 1;\n  // Let it be always 1 for now.\n  const rangeStep = Math.sign(delta);\n  if (\n    (rangeStep === 0) ||\n    (rangeStep > 0 && range0 === range1) ||\n    (rangeStep < 0 && range0 === 0 && range1 === domain.length - 1)\n  ) {\n    return bounds;\n  }\n  const t = Math.abs((anchor - range[0]) / (range[1] - range[0]));\n  let new0 = range0 + Math.round(rangeStep * 2 * t);\n  let new1 = range1 - Math.round(rangeStep * 2 * (1 - t));\n  if (new0 < 0) {\n    new0 = 0;\n  }\n  if (new1 > domain.length - 1) {\n    new1 = domain.length - 1;\n  }\n  if (new0 > new1) {\n    if (t <= 0.5) {\n      new1 = new0;\n    } else {\n      new0 = new1;\n    }\n  }\n  if (new0 === range0 && new1 === range1) {\n    return bounds;\n  }\n  return [domain[new0], domain[new1]];\n};\n\nconst invertLinearScaleBounds = (scale: ScaleObject, range: NumberArray): DomainBounds => {\n  const fullRange = scale.range();\n  const match = Math.sign(fullRange[1] - fullRange[0]) === Math.sign(range[1] - range[0]);\n  return [\n    scale.invert!(range[match ? 0 : 1]),\n    scale.invert!(range[match ? 1 : 0]),\n  ];\n};\n\nconst matchPointToBand = (domain: DomainItems, range: NumberArray, p: number) => {\n  const i = Math.floor(domain.length * (p - range[0]) / (range[1] - range[0]));\n  return domain[Math.min(i, domain.length - 1)];\n};\n\nconst invertBandScaleBounds = (scale: ScaleObject, range: NumberArray): DomainBounds => {\n  const domain = scale.domain();\n  const fullRange = scale.range();\n  return [\n    matchPointToBand(domain, fullRange, range[0]),\n    matchPointToBand(domain, fullRange, range[1]),\n  ];\n};\n\n// Though these functions are used only in *Viewport* plugin (and so should be placed right there),\n// they reside here so that internal scale specifics (*getWidth*)\n// are encapsulated in this utility file.\n/** @internal */\nexport const scaleBounds = makeScaleHelper(scaleLinearBounds, scaleBandBounds);\n/** @internal */\nexport const moveBounds = makeScaleHelper(moveLinearScaleBounds, moveBandScaleBounds);\n// \"scaleBounds\" would be a better name but \"scale\" is already occupied.\n/** @internal */\nexport const growBounds = makeScaleHelper(growLinearScaleBounds, growBandScaleBounds);\n/** @internal */\nexport const invertBoundsRange = makeScaleHelper(invertLinearScaleBounds, invertBandScaleBounds);\n", "import { extent } from 'd3-array';\nimport {\n  getValueDomainName, scaleLinear, scaleBand, rangesEqual, makeScale,\n} from '../../utils/scale';\nimport { ARGUMENT_DOMAIN, VALUE_DOMAIN } from '../../constants';\nimport {\n  Series, PointList, DomainItems, DomainInfoCache, BuildScalesFn, DomainInfo, DomainOptions,\n  AddDomainFn, MergeDomainsFn, GetItemFn, GetDomainItemsFn,\n  FactoryFn, ExtendDomainsFn, NumberArray,\n} from '../../types';\n\nconst makeDomain = ({ factory, modifyDomain }: DomainOptions): DomainInfo => ({\n  domain: [],\n  factory,\n  isDiscrete: !!(factory && isDiscrete(factory)),\n  modifyDomain,\n});\n\n/** @internal */\nexport const defaultDomains: DomainInfoCache = {\n  [ARGUMENT_DOMAIN]: makeDomain({}),\n  [VALUE_DOMAIN]: makeDomain({}),\n};\n/** @internal */\nexport const addDomain: AddDomainFn = (domains, name, options) => ({\n  ...domains,\n  [name]: makeDomain(options),\n});\n\nconst mergeContinuousDomains: MergeDomainsFn = (domain, items) => {\n  const newDomain = extent([...domain, ...items]);\n  return rangesEqual(newDomain as any, domain as any) ? domain : newDomain;\n};\n\nconst mergeDiscreteDomains: MergeDomainsFn = (domain, items) => {\n  const newDomain = Array.from(new Set([...domain, ...items]));\n  return newDomain.length === domain.length ? domain : newDomain;\n};\n\nconst getArgument: GetItemFn = point => point.argument;\nconst getValue: GetItemFn = point => point.value;\n\nconst guessFactory = (points: PointList, getItem: GetItemFn) => (\n  points.length && typeof getItem(points[0]) === 'string' ? scaleBand : scaleLinear\n);\n\nconst isDiscrete = (factory: FactoryFn) => 'bandwidth' in factory();\n\nconst updateDomainFactory = (domain: DomainInfo, series: Series, getItem: GetItemFn) => {\n  if (domain.factory) {\n    return domain;\n  }\n  const factory = guessFactory(series.points, getItem);\n  return {\n    ...domain,\n    factory,\n    isDiscrete: isDiscrete(factory),\n  };\n};\n\n/** @internal */\nexport const updateDomainItems = (domain: DomainInfo, items: DomainItems): DomainInfo => {\n  const merge = domain.isDiscrete ? mergeDiscreteDomains : mergeContinuousDomains;\n  const merged = merge(domain.domain, items);\n  return merged === domain.domain ? domain : {\n    ...domain,\n    domain: domain.modifyDomain ? domain.modifyDomain(merged) : merged,\n  };\n};\n\nconst getArgumentDomainItems: GetDomainItemsFn = series => series.points.map(getArgument);\n\nconst getValueDomainItems: GetDomainItemsFn = (series) => {\n  const items = series.points.map(getValue);\n  return series.getPointTransformer.isStartedFromZero ? [0, ...items] : items;\n};\n\nconst updateDomain = (\n  domain: DomainInfo, series: Series, getItem: GetItemFn, getDomainItems: GetDomainItemsFn,\n) => updateDomainItems(updateDomainFactory(domain, series, getItem), getDomainItems(series));\n\n/** @internal */\nexport const extendDomains: ExtendDomainsFn = (domains, series) => {\n  const argumentDomain = updateDomain(\n    domains[ARGUMENT_DOMAIN], series, getArgument, getArgumentDomainItems);\n  const valueDomainName = getValueDomainName(series.scaleName);\n  const valueDomain = updateDomain(\n    domains[valueDomainName], series, getValue, getValueDomainItems);\n  const changes = {};\n  if (argumentDomain !== domains[ARGUMENT_DOMAIN]) {\n    changes[ARGUMENT_DOMAIN] = argumentDomain;\n  }\n  if (valueDomain !== domains[valueDomainName]) {\n    changes[valueDomainName] = valueDomain;\n  }\n  return Object.keys(changes).length ? { ...domains, ...changes } : domains;\n};\n\n/** @internal */\nexport const buildScales: BuildScalesFn = (domains, ranges) => {\n  const scales = {};\n  Object.keys(domains).forEach((name) => {\n    scales[name] = makeScale(\n      domains[name],\n      ranges[name === ARGUMENT_DOMAIN ? ARGUMENT_DOMAIN : VALUE_DOMAIN] as NumberArray,\n    );\n  });\n  return scales;\n};\n", "import { Size } from '@devexpress/dx-react-core';\nimport {\n  ARGUMENT_DOMAIN, VALUE_DOMAIN,\n} from '../../constants';\nimport {\n  BBoxes, BBoxesChange, RangesCache, NumberArray,\n} from '../../types';\n\nconst isEqual = (\n  { width: firstWidth, height: firstHeight }: Size,\n  { width: secondWidth, height: secondHeight }: Size,\n) => firstWidth === secondWidth && firstHeight === secondHeight;\n\n/** @internal */\nexport const bBoxes = (prevBBoxes: BBoxes, { bBox, placeholder }: BBoxesChange) => {\n  if (isEqual(prevBBoxes[placeholder] || {}, bBox)) return prevBBoxes;\n  return { ...prevBBoxes, [placeholder]: bBox };\n};\n\n/** @internal */\nexport const getRanges = (paneSize: Size, rotated: boolean): RangesCache => {\n  const horRange: NumberArray = [0, paneSize.width];\n  const verRange: NumberArray = [paneSize.height, 0];\n  return {\n    [ARGUMENT_DOMAIN]: rotated ? verRange : horRange,\n    [VALUE_DOMAIN]: rotated ? horRange : verRange,\n  };\n};\n", "import { isHorizontal } from '../../utils/scale';\nimport {\n  LEFT, RIGHT, TOP, BOTTOM, MIDDLE, END, START,\n} from '../../constants';\nimport {\n  ScaleObject, GetFormatFn, ProcessTickFn, TickFormatFn, NumberArray, GetTickCoordinatesFn,\n  TickCoordinatesGetterFn, Tick, Grid,\n} from '../../types';\n\nconst getTicks = (scale: ScaleObject, count: number) => (\n  scale.ticks ? scale.ticks(count) : scale.domain()\n);\n\nconst createTicks = <T>(\n  scale: ScaleObject, count: number, callback: ProcessTickFn<T>,\n): ReadonlyArray<T> => (\n  getTicks(scale, count)\n    .map((tick, index) => callback(scale(tick), String(index), tick))\n);\n\nconst getFormat = (scale: ScaleObject, count: number, tickFormat?: TickFormatFn): GetFormatFn => {\n  if (scale.tickFormat) {\n    return tickFormat ? tickFormat(scale, count) : scale.tickFormat(count);\n  }\n  return tick => tick;\n};\n\nconst rotatedPositions = {\n  [LEFT]: BOTTOM,\n  [RIGHT]: TOP,\n  [BOTTOM]: LEFT,\n  [TOP]: RIGHT,\n};\n\nconst positionFlags = {\n  [LEFT]: false,\n  [RIGHT]: false,\n  [BOTTOM]: true,\n  [TOP]: true,\n};\n\n/** @internal */\nexport const getRotatedPosition = (position: string) => rotatedPositions[position];\n\n/** @internal */\nexport const isValidPosition = (position: string, scaleName: string, rotated: boolean) =>\n  positionFlags[position] === isHorizontal(scaleName, rotated);\n\nconst createHorizontalOptions = (position: string, tickSize: number, indentFromAxis: number) => {\n  // Make *position* orientation agnostic - should be START or END.\n  const isStart = position === BOTTOM;\n  return {\n    y1: 0,\n    y2: isStart ? +tickSize : -tickSize,\n    yText: isStart ? +indentFromAxis : -indentFromAxis,\n    dy: isStart ? '1em' : '0em',\n    textAnchor: MIDDLE,\n  };\n};\n\nconst createVerticalOptions = (position: string, tickSize: number, indentFromAxis: number) => {\n  // Make *position* orientation agnostic - should be START or END.\n  const isStart = position === LEFT;\n  return {\n    x1: 0,\n    x2: isStart ? -tickSize : +tickSize,\n    xText: isStart ? -indentFromAxis : +indentFromAxis,\n    dy: '0.3em',\n    textAnchor: isStart ? END : START,\n  };\n};\n\n// Constant is selected to preserve original behavior described in\n// https://github.com/d3/d3-scale#continuous_ticks.\nconst DEFAULT_TICK_COUNT = 10;\nconst getTickCount = (scaleRange: NumberArray, paneSize: number) => {\n  const rangeToPaneRatio = Math.abs(scaleRange[0] - scaleRange[1]) / paneSize;\n  return Math.round(DEFAULT_TICK_COUNT * (isFinite(rangeToPaneRatio) ? rangeToPaneRatio : 1));\n};\n\nconst createTickFilter = (isHor: boolean, size: number) => (\n  isHor\n    ? (tick: any) => tick.x1 >= 0 && tick.x1 <= size\n    : (tick: any) => tick.y1 >= 0 && tick.y1 <= size\n);\n\n/** @internal */\nexport const tickCoordinatesGetter: TickCoordinatesGetterFn<Tick> = ({\n  isHor, scale, tickCount, tickFormat, position, tickSize, indentFromAxis,\n}) => {\n  const formatTick = getFormat(scale!, tickCount!, tickFormat);\n  const options = (isHor ? createHorizontalOptions : createVerticalOptions)(\n    position!, tickSize!, indentFromAxis!,\n  );\n  return (coordinates, key, tick) => ({\n    key,\n    x1: coordinates,\n    x2: coordinates,\n    y1: coordinates,\n    y2: coordinates,\n    xText: coordinates,\n    yText: coordinates,\n    text: formatTick(tick),\n    ...options,\n  });\n};\n\n/** @internal */\nexport const gridCoordinatesGetter: TickCoordinatesGetterFn<Grid> = ({ isHor }) => {\n  const options = isHor ? { y1: 0 } : { x1: 0 };\n  return (coordinates, key) => ({\n    key,\n    x1: coordinates,\n    y1: coordinates,\n    ...options,\n  });\n};\n\n/** @internal */\nexport const getTickCoordinates: GetTickCoordinatesFn<Tick | Grid> = ({\n  scaleName, scale, paneSize, rotated, callback, ...restProps\n}) => {\n  const isHor = isHorizontal(scaleName, rotated);\n  const tickCount = getTickCount(scale.range(), paneSize[1 - Number(isHor)]);\n  const ticks = createTicks(scale, tickCount, callback({ isHor, scale, tickCount, ...restProps }));\n  const visibleTicks = ticks.filter(createTickFilter(isHor, paneSize[1 - Number(isHor)]));\n  return {\n    ticks: visibleTicks,\n    sides: [Number(isHor), Number(!isHor)],\n  };\n};\n", "import {\n  symbol,\n  symbolCircle,\n  line,\n  curveMonotoneX,\n  curveMonotoneY,\n  area,\n  arc,\n  pie,\n} from 'd3-shape';\nimport {\n  SeriesList, Series, PointList, Point, DataItems, AddSeriesFn, ScalesCache, ScaleSeriesPointsFn,\n  GetPointTransformerFn, Colors, Rect,\n  BarSeries, ScatterSeries, PieSeries,\n  PointComponentProps, PathFn, PathStartCoordinates, PathEndCoordinates, Scales,\n} from '../../types';\nimport { Size } from '@devexpress/dx-react-core';\nimport { ARGUMENT_DOMAIN } from '../../constants';\nimport { getValueDomainName, getWidth, rangesEqual } from '../../utils/scale';\n\nconst getArg = ({ arg }: PointComponentProps) => arg;\nconst getVal = ({ val }: PointComponentProps) => val;\nconst getStartVal = ({ startVal }: PointComponentProps) => startVal!;\n\n/** @internal */\nexport const dArea: PathFn = area<PointComponentProps>()\n  .x(getArg)\n  .y1(getVal)\n  .y0(getStartVal) as any;\n\n/** @internal */\nexport const dRotateArea: PathFn = area<PointComponentProps>()\n  .x1(getStartVal)\n  .x0(getVal)\n  .y(getArg) as any;\n\n/** @internal */\nexport const dLine: PathFn = line<PointComponentProps>()\n  .x(getArg)\n  .y(getVal) as any;\n\n/** @internal */\nexport const dRotateLine = line<PointComponentProps>()\n  .x(getVal)\n  .y(getArg) as any;\n\n/** @internal */\nexport const dSpline: PathFn = line<PointComponentProps>()\n  .x(getArg)\n  .y(getVal)\n  .curve(curveMonotoneX) as any;\n\n/** @internal */\nexport const dRotateSpline: PathFn = line<PointComponentProps>()\n  .x(getVal)\n  .y(getArg)\n  .curve(curveMonotoneY) as any;\n\n/** @internal */\nexport const dBar = (\n  arg: number, val: number, startVal: number, width: number, rotated: boolean,\n) => {\n  const height = Math.abs(val - startVal!);\n  const minVal = Math.min(val, startVal!);\n  return {\n    x: rotated ? minVal : arg - width / 2,\n    y: rotated ? arg - width / 2 : minVal,\n    width: rotated ? height : width || 2,\n    height: rotated ? width || 2 : height,\n  };\n};\n\n/** @internal */\nexport const getPiePointTransformer: GetPointTransformerFn = ({\n  argumentScale, valueScale, points,\n}) => {\n  const x = Math.max(...argumentScale.range()) / 2;\n  const y = Math.max(...valueScale.range()) / 2;\n  const maxRadius = Math.min(x, y);\n  const pieData = pie<Point>().sort(null).value(d => d.value)(points as Point[]);\n  return (point) => {\n    const { startAngle, endAngle } = pieData[point.index];\n    return {\n      ...point,\n      arg: x,\n      val: y,\n      startAngle,\n      endAngle,\n      maxRadius,\n    };\n  };\n};\n\n/** @internal */\nexport const getLinePointTransformer: GetPointTransformerFn = ({\n  argumentScale, valueScale,\n}) => point => ({\n  ...point,\n  arg: argumentScale(point.argument),\n  val: valueScale(point.value),\n} as any);\n\n// Though transformations for line and scatter are the same,\n// separate function instance is required as it contains additional static fields.\n/** @internal */\nexport const getScatterPointTransformer: GetPointTransformerFn = (\n  ...args\n) => getLinePointTransformer(...args);\n\n/** @internal */\nexport const getAreaPointTransformer: GetPointTransformerFn = (series) => {\n  const transform = getLinePointTransformer(series);\n  const startVal = series.valueScale(0);\n  return (point) => {\n    const ret = transform(point);\n    return {\n      ...ret,\n      startVal,\n    };\n  };\n};\n// Used for domain calculation and stacking.\ngetAreaPointTransformer.isStartedFromZero = true;\n\n/** @internal */\nexport const getBarPointTransformer: GetPointTransformerFn = ({\n  argumentScale, valueScale,\n}) => {\n  const startVal = valueScale(0);\n  return point => ({\n    ...point,\n    arg: argumentScale(point.argument),\n    val: valueScale(point.value),\n    startVal,\n    maxBarWidth: getWidth(argumentScale),\n  } as any);\n};\n// Used for domain calculation and stacking.\ngetBarPointTransformer.isStartedFromZero = true;\n// Used for Bar grouping.\ngetBarPointTransformer.isBroad = true;\n\ngetPiePointTransformer.getPointColor = (palette, index) => palette[index % palette.length];\n\n/** @internal */\nexport const findSeriesByName = (\n  name: symbol, series: SeriesList,\n): Series => series.find(seriesItem => seriesItem.symbolName === name) as Series;\n\n/** @internal */\nexport const dSymbol = (\n  { size }: ScatterSeries.PointOptions,\n) => symbol().size(size ** 2).type(symbolCircle)()!;\n\n/** @internal */\nexport const dPie = (\n  maxRadius: number, innerRadius: number, outerRadius: number, startAngle: number, endAngle: number,\n) => arc()({\n  startAngle,\n  endAngle,\n  innerRadius: innerRadius * maxRadius,\n  outerRadius: outerRadius * maxRadius,\n})!;\n\nconst getRect = (\n  cArg: number, cVal: number, dArg: number, dVal: number, rotated: boolean,\n): Rect => {\n  const minArg = cArg - dArg;\n  const minVal = cVal - dVal;\n  const maxArg = cArg + dArg;\n  const maxVal = cVal + dVal;\n  return rotated ? [minVal, minArg, maxVal, maxArg] : [minArg, minVal, maxArg, maxVal];\n};\n\ngetBarPointTransformer.getTargetElement = (point) => {\n  const {\n    arg, val, startVal, barWidth, maxBarWidth, rotated,\n  } = point as BarSeries.PointProps;\n  const halfWidth = barWidth * maxBarWidth / 2;\n  const halfHeight = Math.abs(startVal! - val) / 2;\n  const centerVal = (val + startVal!) / 2;\n  return getRect(arg, centerVal, halfWidth, halfHeight, rotated);\n};\n\ngetPiePointTransformer.getTargetElement = (point) => {\n  const {\n    arg: x, val: y, innerRadius, outerRadius, maxRadius, startAngle, endAngle,\n  } = point as PieSeries.PointProps;\n  const center = arc().centroid({\n    startAngle,\n    endAngle,\n    innerRadius: innerRadius * maxRadius,\n    outerRadius: outerRadius * maxRadius,\n  });\n  const cx = center[0] + x;\n  const cy = center[1] + y;\n  return getRect(cx, cy, 0.5, 0.5, false);\n};\n\ngetAreaPointTransformer.getTargetElement = ({ arg, val, rotated }) => (\n  getRect(arg, val, 1, 1, rotated)\n);\n\ngetLinePointTransformer.getTargetElement = getAreaPointTransformer.getTargetElement;\n\ngetScatterPointTransformer.getTargetElement = (obj) => {\n  const { arg, val, point, rotated } = obj as ScatterSeries.PointProps;\n  const t = point.size / 2;\n  return getRect(arg, val, t, t, rotated);\n};\n\nconst getUniqueName = (list: SeriesList, name: string) => {\n  const names = new Set(list.map(item => item.name));\n  let ret = name;\n  while (names.has(ret)) {\n    // @ts-ignore\n    ret = ret.replace(/\\d*$/, str => (str ? +str + 1 : 0));\n  }\n  return ret;\n};\n\n// TODO: Memoization is much needed here.\n// Though \"series\" list never persists, single \"series\" item most often does.\nconst createPoints = (\n  {\n    argumentField, valueField, getPointTransformer,\n  }: Series,\n  data: DataItems, props: any, palette: Colors,\n): PointList => {\n  const points: Point[] = [];\n  data.forEach((dataItem, index) => {\n    const argument = dataItem[argumentField];\n    const value = dataItem[valueField];\n    if (argument !== undefined && value !== undefined) {\n      points.push({\n        argument,\n        value,\n        index,\n        ...props,\n        color: getPointTransformer.getPointColor\n          ? getPointTransformer.getPointColor(palette, index) : props.color,\n      });\n    }\n  });\n  return points;\n};\n\n/** @internal */\nexport const addSeries: AddSeriesFn = (\n  series, data, palette, props, restProps,\n) => {\n  // It is used to generate unique series dependent attribute names for patterns.\n  // *symbolName* cannot be used as it cannot be part of DOM attribute name.\n  const index = series.length;\n  const seriesColor = props.color || palette[index % palette.length];\n  return [...series, {\n    ...props,\n    index,\n    name: getUniqueName(series, props.name),\n    points: createPoints(props, data, { ...restProps, color: seriesColor }, palette),\n    color: seriesColor,\n  }];\n};\n\n// TODO: Memoization is much needed here by the same reason as in \"createPoints\".\n// Make \"scales\" persistent first.\nconst scalePoints = (series: Series, scales: ScalesCache, rotated: boolean) => {\n  const transform = series.getPointTransformer({\n    ...series,\n    argumentScale: scales[ARGUMENT_DOMAIN],\n    valueScale: scales[getValueDomainName(series.scaleName)],\n  });\n  const ret: Series = {\n    ...series,\n    rotated,\n    points: series.points.map(point => ({\n      ...transform(point),\n      rotated,\n    })),\n  };\n  return ret;\n};\n\n/** @internal */\nexport const scaleSeriesPoints: ScaleSeriesPointsFn = (\n  series, scales, rotated,\n) => series.map(seriesItem => scalePoints(seriesItem, scales, rotated));\n\n/** @internal */\nexport const getVisibility = (\n  pane: Size, centerX: number, centerY: number, width: number, height: number,\n) => {\n  return (centerX - width / 2 < 0 && centerX + width / 2 < 0)\n  || (centerX - width / 2 > pane.width && centerX + width / 2 > pane.width)\n  || (centerY - height / 2 < 0 && centerY + height / 2 < 0)\n  || (centerY - height / 2 > pane.height && centerY + height / 2 > pane.height) ?\n  'hidden' : 'visible';\n};\n\n/** @internal */\nexport const adjustBarSize = (\n  bar: { width: number, height: number, x: number, y: number }, { width, height }: Size,\n) => {\n  const x = Math.max(0, bar.x);\n  const y = Math.max(0, bar.y);\n  return {\n    x,\n    y,\n    width: Math.min(width, bar.x + bar.width) - x,\n    height: Math.min(height, bar.y + bar.height) - y,\n  };\n};\n\n/** @internal */\nexport const isValuesChanged = (previous: any, current: any): boolean => {\n  return Object.entries(previous).some(el => el[1] !== current[el[0]]);\n};\n\n/** @internal */\nexport const isCoordinatesChanged = (\n  { coordinates: prevCoordinates }: PathStartCoordinates, { coordinates }: PathEndCoordinates,\n) => {\n  if (prevCoordinates.length !== coordinates.length) {\n    return true;\n  }\n  return prevCoordinates.some((el, index) => {\n    return el.arg !== coordinates[index].arg || el.val !== coordinates[index].val;\n  });\n};\n\n/** @internal */\nexport const isScalesChanged = (previous: Scales, current: Scales): boolean => {\n  return !rangesEqual(previous.argScale.range(), current.argScale.range()) ||\n  !rangesEqual(previous.valScale.range(), current.valScale.range());\n};\n", "import { stack } from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport {\n  SeriesList, Series, Point, GetPointTransformerFn, DataItems, DomainInfoCache,\n  StackList, GetPointTransformerFnRaw, BarSeries, StackedPoint, StackMap, GetStackedSeriesFn,\n  SeriesPositions, StacksKeys, StackedDataItems, OffsetFn, OrderFn,\n  StackedData, GetStackedDomainsFn,\n} from '../../types';\nimport { extendDomains, updateDomainItems } from '../scale/computeds';\nimport { getValueDomainName } from '../../utils/scale';\n\n// \"Stack\" plugin relies on \"data\" and \"series\" getters and\n// knowledge about \"getPointTransformer\" and \"path\" functions behavior.\nconst buildSeriesToStackMap = (stacks: StackList): StackMap => {\n  const result = {};\n  stacks.forEach(({ series }, i) => {\n    series.forEach((name) => {\n      result[name] = i;\n    });\n  });\n  return result;\n};\n\nconst getStackedPointTransformer = (getPointTransformer: GetPointTransformerFn) => {\n  const wrapper: GetPointTransformerFnRaw = (series) => {\n    const transform = getPointTransformer(series);\n    const { valueScale } = series;\n    return (point: Point) => {\n      const ret = transform(point);\n      return {\n        ...ret,\n        startVal: valueScale((point as StackedPoint).value0),\n      };\n    };\n  };\n  // Preserve static fields of original transformer.\n  Object.assign(wrapper, getPointTransformer);\n  return wrapper as GetPointTransformerFn;\n};\n\nconst collectStacks = (\n  seriesList: SeriesList, seriesToStackMap: StackMap,\n  stacksKeys: StacksKeys, seriesPositions: SeriesPositions,\n) => {\n  seriesList.forEach(({ name, valueField }) => {\n    const stackId = seriesToStackMap[name];\n    if (stackId === undefined) {\n      return;\n    }\n\n    if (!stacksKeys[stackId]) {\n      stacksKeys[stackId] = [];\n    }\n    seriesPositions[name] = stacksKeys[stackId].length;\n    stacksKeys[stackId].push(valueField);\n  });\n  // Stack cannot consist of single series.\n  Object.keys(stacksKeys).forEach((stackId) => {\n    if (stacksKeys[stackId].length === 1) {\n      delete stacksKeys[stackId];\n    }\n  });\n};\n\nconst getStackedData = (\n  stacksKeys: StacksKeys, dataItems: DataItems, offset: OffsetFn, order: OrderFn,\n): StackedData => {\n  const result = {};\n  Object.keys(stacksKeys).forEach((stackId) => {\n    result[stackId] = stack().keys(stacksKeys[stackId])\n      .order(order as any)\n      .offset(offset as any)(dataItems as any);\n  });\n  return result;\n};\n\nconst buildStackedSeries = (series: Series, dataItems: StackedDataItems): Series => {\n  const points = series.points.map((point) => {\n    const [value0, value] = dataItems[point.index];\n    return { ...point, value, value0 };\n  });\n  const stackedSeries = {\n    ...series,\n    points,\n    isStacked: true,\n  };\n  if (series.getPointTransformer.isStartedFromZero) {\n    stackedSeries.getPointTransformer = getStackedPointTransformer(series.getPointTransformer);\n  }\n  return stackedSeries;\n};\n\nconst applyStacking = (\n  seriesList: SeriesList, dataItems: DataItems, seriesToStackMap: StackMap,\n  offset: OffsetFn, order: OrderFn,\n): SeriesList => {\n  const stacksKeys: StacksKeys = {};\n  const seriesPositions: SeriesPositions = {};\n  collectStacks(seriesList, seriesToStackMap, stacksKeys, seriesPositions);\n  if (Object.keys(stacksKeys).length === 0) {\n    return seriesList;\n  }\n  const stackedData = getStackedData(stacksKeys, dataItems, offset, order);\n  return seriesList.map((seriesItem) => {\n    const stackId = seriesToStackMap[seriesItem.name];\n    const stackData = stackedData[stackId];\n    if (!stackData) {\n      return seriesItem;\n    }\n    const position = seriesPositions[seriesItem.name];\n    return buildStackedSeries(seriesItem, stackData[position]);\n  });\n};\n\nconst getGroupName = (series: Series, i: number, seriesToStackMap: StackMap) => {\n  const stackId = seriesToStackMap[series.name];\n  return stackId >= 0 ? String(stackId) : `group-${i}`;\n};\n\nconst getGroupedPointTransformer = (\n  getPointTransformer: GetPointTransformerFn, groupCount: number, groupOffset: number,\n) => {\n  const wrapper: GetPointTransformerFnRaw = (series) => {\n    const transform = getPointTransformer(series);\n    const widthCoeff = 1 / groupCount;\n    return (point) => {\n      const original = transform(point) as BarSeries.PointProps;\n      const arg = (\n        original.arg - original.maxBarWidth * (0.5 - 0.5 * widthCoeff - groupOffset * widthCoeff)\n      );\n      const result: BarSeries.PointProps = {\n        ...original,\n        arg,\n        maxBarWidth: original.maxBarWidth / groupCount,\n      };\n      return result;\n    };\n  };\n  // Preserve static fields of original transformer.\n  Object.assign(wrapper, getPointTransformer);\n  return wrapper as GetPointTransformerFn;\n};\n\nconst applyGrouping = (seriesList: SeriesList, seriesToStackMap: StackMap): SeriesList => {\n  const groups = new Set<string>();\n  seriesList.forEach((seriesItem, i) => {\n    if (seriesItem.getPointTransformer.isBroad) {\n      groups.add(getGroupName(seriesItem, i, seriesToStackMap));\n    }\n  });\n  // There cannot be single group.\n  if (groups.size < 2) {\n    return seriesList;\n  }\n  const scale = scaleBand().domain(Array.from(groups)).range([0, groups.size]);\n  return seriesList.map((seriesItem, i) => {\n    if (!seriesItem.getPointTransformer.isBroad) {\n      return seriesItem;\n    }\n    const getPointTransformer = getGroupedPointTransformer(\n      seriesItem.getPointTransformer,\n      groups.size,\n      scale(getGroupName(seriesItem, i, seriesToStackMap))!,\n    );\n    return {\n      ...seriesItem,\n      getPointTransformer,\n    };\n  });\n};\n\n/** @internal */\nexport const getStackedSeries: GetStackedSeriesFn = (\n  seriesList, dataItems, { stacks, offset, order },\n) => {\n  const map = buildSeriesToStackMap(stacks);\n  const stackedSeriesList = applyStacking(seriesList, dataItems, map, offset, order);\n  const groupedSeriesList = applyGrouping(stackedSeriesList, map);\n  return groupedSeriesList;\n};\n\nconst resetDomainItems = (domains: DomainInfoCache): DomainInfoCache => {\n  const result = {};\n  Object.keys(domains).forEach((key) => {\n    result[key] = { ...domains[key], domain: [] };\n  });\n  return result;\n};\n\nconst extendDomainsWithAdditionalItems = (domains: DomainInfoCache, series: Series) => {\n  const items = series.points.map(point => (point as StackedPoint).value0);\n  const key = getValueDomainName(series.scaleName);\n  const domain = updateDomainItems(domains[key], items);\n  return domain !== domains[key] ? { ...domains, [key]: domain } : domains;\n};\n\n// Stacking changes data - so computed domains have to be discarded\n// and recalculated from the new stacked data.\n/** @internal */\nexport const getStackedDomains: GetStackedDomainsFn = (domains, seriesList) => {\n  const stackedSeries = seriesList.filter(series => (series as any).isStacked);\n  if (!stackedSeries.length) {\n    return domains;\n  }\n  // Recalculate domains in a common way.\n  const rebuiltDomains = seriesList.reduce(extendDomains, resetDomainItems(domains));\n  // Take additional \"value0\" fields into account.\n  return stackedSeries.reduce(extendDomainsWithAdditionalItems, rebuiltDomains);\n};\n", "import {\n  Scales, PointComponentProps, PieSeries, PathComponentProps, GetDelayFn,\n} from '../../types';\n\n/** @internal */\nexport const easeOutCubic = (t: number) => (t - 1) * (t - 1) * (t - 1) + 1;\n\n/** @internal */\nexport const getDelay: GetDelayFn = (index, isStart) => isStart ? index * 30 : 0;\n\n/** @internal */\nexport const getStartVal = (scales: Scales) => {\n  return scales.valScale.copy().clamp!(true)(0);\n};\n\n/** @internal */\nexport const getPathStart = (scales: Scales, { coordinates }: PathComponentProps) => {\n  const start = getStartVal(scales);\n  return { coordinates: coordinates.map(coord =>\n    ({ arg: coord.arg, val: start, startVal: start })) };\n};\n\n/** @internal */\nexport const getPointStart = (scales: Scales, { arg }: PointComponentProps) => {\n  const start = getStartVal(scales);\n  return { arg, val: start, startVal: start };\n};\n\n/** @internal */\nexport const getPieStart = (scales: Scales, { startAngle, endAngle }: PieSeries.PointProps) =>\n({ innerRadius: 0, outerRadius: 0, startAngle, endAngle });\n", "import { SeriesRef, TargetList, NotifyPointerMoveFn, ProcessedTarget } from '../types';\n\n// Comparing by reference is not an option as Tracker always sends new objects.\n// Tracker cannot persist references as it actually operates with simple scalars\n// and constructs objects to provide info in a slightly more suitable way.\nconst compareTargets = (target1: SeriesRef, target2: SeriesRef) => (\n  target1.series === target2.series && target1.point === target2.point\n);\n\n// If *currentTarget* is among *targets* then it has priority but only while its distance\n// is not significantly greater (DISTANCE_PRIORITY_RATIO) than that of the best candidate.\nconst selectTarget = (targets: TargetList, currentTarget: SeriesRef): ProcessedTarget => {\n  const candidate = targets[0];\n  if (!currentTarget) {\n    return candidate;\n  }\n  if (!candidate) {\n    return null;\n  }\n  return compareTargets(candidate, currentTarget) ? undefined : candidate;\n};\n\n/** @internal */\nexport const processPointerMove = (\n  targets: TargetList, currentTarget: SeriesRef, notify?: NotifyPointerMoveFn,\n) => {\n  const nextTarget = selectTarget(targets, currentTarget);\n  if (nextTarget === undefined) {\n    return undefined;\n  }\n  if (notify) {\n    notify(nextTarget);\n  }\n  return nextTarget;\n};\n", "import { NumberArray, Location } from '../types';\n// This function is to be called from context where DOM is available -\n// so *window* can be accessed safely.\n/** @internal */\nexport const getOffset = (element: Element): NumberArray => {\n  const { left, top } = element.getBoundingClientRect();\n  // Safer way to get window.\n  const { defaultView } = element.ownerDocument!;\n  const { pageXOffset, pageYOffset } = defaultView!;\n  return [left + pageXOffset, top + pageYOffset];\n};\n\n/** @internal */\nexport const getEventCoords = (e: any, offset: NumberArray): Location => {\n  const { pageX, pageY } = e.touches ? e.touches[0] : e;\n  return [pageX - offset[0], pageY - offset[1]];\n};\n", "import { processPointerMove } from '../../utils/hover-state';\nimport { getOffset } from '../../utils/common';\nimport {\n  SeriesList, SeriesRef, TransformedPoint, TargetList, NotifyPointerMoveFn,\n  TooltipParameters, TooltipReference, Rect,\n} from '../../types';\n\n/** @internal */\nexport const getParameters = (series: SeriesList, target: SeriesRef): TooltipParameters => {\n  const currentSeries = series.find(({ name }) => target.series === name)!;\n  const item = currentSeries.points.find(point => point.index === target.point) as TransformedPoint;\n  return {\n    element: currentSeries.getPointTransformer.getTargetElement(item),\n    text: `${item.value}`,\n  };\n};\n\n/** @internal */\nexport const createReference = (\n  rect: Rect, rootRef: React.RefObject<Element>,\n): TooltipReference => ({\n  // These two fields together with *width* and *height* are left with stub data for\n  // simplicity reasons - they seem to be unused by *Popper*.\n  clientWidth: 0,\n  clientHeight: 0,\n  getBoundingClientRect() {\n    // This function is expected to be called (by the *Popper*) when DOM is ready -\n    // so *rootRef.current* can be accessed.\n    const offset = getOffset(rootRef.current!);\n    // *getBoundingClientRect* of a real html element is affected by window scrolling.\n    // *popper.js* subscribes \"html -> getBoundingClientRect -> (left, top)\" from\n    // \"reference -> getBoundingClientRect\" - so here it is added.\n    const htmlRect = rootRef.current!.ownerDocument!.documentElement.getBoundingClientRect();\n    const left = rect[0] + offset[0] + htmlRect.left;\n    const right = rect[2] + offset[0] + htmlRect.left;\n    const top = rect[1] + offset[1] + htmlRect.top;\n    const bottom = rect[3] + offset[1] + htmlRect.top;\n    return {\n      left,\n      top,\n      right,\n      bottom,\n      width: right - left,\n      height: bottom - top,\n    };\n  },\n});\n\n/** @internal */\nexport const processHandleTooltip = (\n  targets: TargetList, currentTarget: SeriesRef, onTargetItemChange?: NotifyPointerMoveFn,\n) => {\n  const filterTargets = targets.filter(target => target.point !== undefined);\n  return processPointerMove(filterTargets, currentTarget, onTargetItemChange);\n};\n", "import {\n  ARGUMENT_DOMAIN, VALUE_DOMAIN,\n} from '../../constants';\nimport {\n  getValueDomainName, makeScale, scaleBounds, rangesEqual,\n  moveBounds, growBounds, invertBoundsRange,\n} from '../../utils/scale';\nimport {\n  NumberArray,\n  Viewport,\n  ScalesCache,\n  DomainInfoCache,\n  RangesCache,\n  DomainInfo,\n  DomainBounds,\n  OnViewportChangeFn,\n  ScaleObject,\n  EventHandlers,\n  Location,\n  Interaction,\n} from '../../types';\nimport { Size } from '@devexpress/dx-react-core';\n\nconst getArgumentBounds = (viewport?: Viewport): DomainBounds | null => (\n  viewport && viewport.argumentStart !== undefined && viewport.argumentEnd !== undefined\n    ? [viewport.argumentStart, viewport.argumentEnd] : null\n);\n\nconst getValueBounds = (viewport?: Viewport): DomainBounds | null => (\n  viewport && viewport.valueStart !== undefined && viewport.valueEnd !== undefined\n    ? [viewport.valueStart, viewport.valueEnd] : null\n);\n\nconst getValueScaleName = (viewport?: Viewport) => (\n  getValueDomainName(viewport && viewport.scaleName)\n);\n\nconst getDefaultBounds = (scale: ScaleObject): DomainBounds => {\n  const domain = scale.domain();\n  return [domain[0], domain[domain.length - 1]];\n};\n\nconst proportionallyExtendRange = (range: NumberArray, subRange: NumberArray): NumberArray => {\n  const p = (subRange[0] - subRange[1]) / (range[0] - range[1]);\n  const q = subRange[0] - p * range[0];\n  return [\n    (range[0] - q) / p,\n    (range[1] - q) / p,\n  ];\n};\n\nconst adjustRange = (domain: DomainInfo, bounds: DomainBounds, range: NumberArray) => {\n  const scale = makeScale(domain, range);\n  const subRange = scaleBounds(scale, bounds);\n  return rangesEqual(subRange, range) ? range : proportionallyExtendRange(range, subRange);\n};\n\nconst update = (\n  ranges: RangesCache, changes: any, key: string, domain: DomainInfo, bounds: DomainBounds,\n) => {\n  const newRange = adjustRange(domain, bounds, ranges[key]);\n  if (newRange !== ranges[key]) {\n    changes[key] = newRange;\n  }\n};\n\n/** @internal */\nexport const adjustLayout = (\n  domains: DomainInfoCache, ranges: RangesCache, viewport?: Viewport,\n) => {\n  const changes = {};\n  const argumentBounds = getArgumentBounds(viewport);\n  if (argumentBounds) {\n    update(ranges, changes, ARGUMENT_DOMAIN, domains[ARGUMENT_DOMAIN], argumentBounds);\n  }\n  const valueBounds = getValueBounds(viewport);\n  if (valueBounds) {\n    update(ranges, changes, VALUE_DOMAIN, domains[getValueScaleName(viewport)], valueBounds);\n  }\n  return Object.keys(changes).length ? { ...ranges, ...changes } : ranges;\n};\n\nconst boundsForScale = (\n  name: string, scales: ScalesCache, currentBounds: DomainBounds | null,\n  interaction: Interaction, type: Interaction, delta: number, anchor: number, range?: NumberArray,\n): DomainBounds | null => {\n  if (!checkInteraction(interaction, type)) {\n    return null;\n  }\n  const scale = scales[name];\n  const bounds = currentBounds || getDefaultBounds(scale);\n  let newBounds: DomainBounds;\n  if (type === 'pan') {\n    newBounds = moveBounds(scale, bounds, delta);\n  } else if (type === 'zoom') {\n    newBounds = range ? invertBoundsRange(scale, range) : growBounds(scale, bounds, delta, anchor);\n  }\n  return newBounds! !== bounds ? newBounds! : null;\n};\n\n/** @internal */\nexport const getViewport = (\n  scales: ScalesCache,\n  rotated: boolean,\n  [argInteraction, valInteraction]: Readonly<[Interaction, Interaction]>, type: Interaction,\n  deltas: Readonly<[number, number]> | null,\n  anchors: Readonly<number[]> | null,\n  ranges: Readonly<[NumberArray, NumberArray]> | null,\n  viewport?: Viewport, onViewportChange?: OnViewportChangeFn,\n) => {\n  const argIndex = Number(rotated);\n  const valIndex = 1 - argIndex;\n  const changes: any = {};\n  const argumentBounds = boundsForScale(\n    ARGUMENT_DOMAIN, scales, getArgumentBounds(viewport),\n    argInteraction, type,\n    deltas ? deltas[argIndex] : 0, anchors ? anchors[argIndex] : 0,\n    ranges ? ranges[argIndex] : undefined,\n  );\n  const valueBounds = boundsForScale(\n    getValueScaleName(viewport), scales, getValueBounds(viewport),\n    valInteraction, type,\n    deltas ? deltas[valIndex] : 0, anchors ? anchors[valIndex] : 0,\n    ranges ? ranges[valIndex] : undefined,\n  );\n  if (argumentBounds) {\n    changes.argumentStart = argumentBounds[0];\n    changes.argumentEnd = argumentBounds[1];\n  }\n  if (valueBounds) {\n    changes.valueStart = valueBounds[0];\n    changes.valueEnd = valueBounds[1];\n  }\n  if (Object.keys(changes).length) {\n    const newViewport = { ...viewport, ...changes };\n    if (onViewportChange) {\n      onViewportChange(newViewport);\n    }\n    return { viewport: newViewport };\n  }\n  return null;\n};\n\n/** @internal */\nexport const getDeltaForTouches = (touches: Touch[]) => {\n  const deltaX = touches[0].pageX - touches[1].pageX;\n  const deltaY = touches[0].pageY - touches[1].pageY;\n  const delta = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const center: NumberArray = [\n    (touches[0].pageX + touches[1].pageX) / 2,\n    (touches[0].pageY + touches[1].pageY) / 2,\n  ];\n  return { delta, center };\n};\n\n/** @internal */\nexport const isKeyPressed = (event: MouseEvent, key: string) => event[`${key}Key`];\n\n/** @internal */\nexport const getWheelDelta = ({ wheelDelta, deltaY }: { wheelDelta?: number, deltaY?: number }) => {\n  return wheelDelta !== undefined ? wheelDelta : deltaY! * -30; // deltaY for FF\n};\n\n/** @internal */\nexport const isMultiTouch = (e: any) => e.touches && e.touches.length === 2;\n\n/** @internal */\nexport const attachEvents = (node: any, handlers: EventHandlers) => {\n  Object.keys(handlers).forEach((el) => {\n    node.addEventListener(el, handlers[el], { passive: false });\n  });\n};\n\n/** @internal */\nexport const detachEvents = (node: any, handlers: EventHandlers) => {\n  Object.keys(handlers).forEach((el) => {\n    node.removeEventListener(el, handlers[el]);\n  });\n};\n\n/** @internal */\nexport const getRect = (\n  rotated: boolean,\n  interactionWithArguments: Interaction,\n  interactionWithValues: Interaction,\n  initial: Location,\n  current: Location,\n  pane: Size,\n) => {\n  const isZoomArgument = checkInteraction(interactionWithArguments, 'zoom');\n  const isZoomValue = checkInteraction(interactionWithValues, 'zoom');\n  const isXFixed = rotated ? isZoomValue : isZoomArgument;\n  const isYFixed = rotated ? isZoomArgument : isZoomValue;\n  const x = isXFixed ? Math.min(initial[0], current[0]) : 0;\n  const width = isXFixed ? Math.abs(initial[0] - current[0]) : pane.width;\n  const y = isYFixed ? Math.min(initial[1], current[1]) : 0;\n  const height = isYFixed ? Math.abs(initial[1] - current[1]) : pane.height;\n  return {\n    x, y, width, height,\n  };\n};\n\nconst checkInteraction = (interaction: Interaction, type: Interaction) =>\ninteraction === 'both' || interaction === type;\n\n/** @internal */\nexport const setCursorType = (node: any, type?: string) => {\n  const defaultType = 'pointer';\n  node.style.cursor = type ? type : defaultType;\n};\n", "import { DIFFERENCE } from '../../constants';\n\n/** @internal */\nexport const isReadyToRenderSeries = (\n  { pane, ...restLayouts }, { current },\n  isPreviousDataEmpty: boolean, axesExist: boolean,\n) => {\n  if (!pane.width && !pane.height) {\n    return false;\n  }\n  const bbox = { width: current.clientWidth, height: current.clientHeight };\n  let width = pane.width;\n  let height = pane.height;\n  Object.entries(restLayouts).forEach((el) => {\n    const orientation = el[0].split('-')[0];\n    if (orientation === 'top' || orientation === 'bottom') {\n      height += el[1].height;\n    } else {\n      width += el[1].width;\n    }\n  });\n  return Math.abs(bbox.width - width) < DIFFERENCE &&\n    Math.abs(bbox.height - height) < DIFFERENCE\n    && isPreviousDataEmptyOrNoAxes(isPreviousDataEmpty, axesExist);\n};\n\nconst isPreviousDataEmptyOrNoAxes = (\n  isPreviousDataEmpty: boolean, axesExist: boolean,\n) => !isPreviousDataEmpty || !axesExist;\n", "import { area } from 'd3-shape';\nimport {\n  dArea, dRotateArea, dLine, dRotateLine, dSpline, dRotateSpline,\n} from '../plugins/series/computeds';\nimport {\n  SeriesList, TransformedPoint, PointList, TargetList, PointDistance, Location,\n  CreateHitTesterFn, MakePathFn, IsPointInPathFn,\n  HitTestPointFn, Filter,\n  BarSeries, ScatterSeries, PieSeries,\n  PathFn,\n} from '../types';\n\nconst getSegmentLength = (dx: number, dy: number) => Math.sqrt(dx * dx + dy * dy);\n\n// *distance* is a normalized distance to point.\n// It belongs to [0, Infinity):\n//  = 0 - at point center\n//  = 1 - at point border\n//  > 1 - outside point\n\n// This function is called from event handlers (when DOM is available) -\n// *window.document* can be accessed safely.\nconst createContext = () => document.createElement('canvas').getContext('2d')!;\n\n// For a start using browser canvas will suffice.\n// However a better and more clean solution should be found.\n// Can't d3 perform hit testing?\nconst createCanvasAbusingHitTester = (\n  makePath: MakePathFn, points: PointList, rotated: boolean,\n): IsPointInPathFn => {\n  const ctx = createContext();\n  const path = makePath(rotated);\n  path.context(ctx);\n  path(points as any);\n  return ([x, y]) => ctx.isPointInPath(x, y);\n};\n\nconst LINE_POINT_SIZE = 20;\nconst LINE_TOLERANCE = 10;\n\nconst getDistance = (\n  [px, py]: Location, { arg, val }: TransformedPoint, rotated: boolean,\n) => {\n  const x = rotated ? val : arg;\n  const y = rotated ? arg : val;\n  return getSegmentLength(px - x, py - y);\n};\n\nconst createContinuousSeriesHitTesterCreator =\n  (makePath: MakePathFn): CreateHitTesterFn => (points, rotated) => {\n    const fallbackHitTest = createCanvasAbusingHitTester(makePath, points, rotated);\n    return (target) => {\n      let minDistance = Number.MAX_VALUE;\n      let minIndex: number = 0;\n      const list: PointDistance[] = [];\n      points.forEach((point, i) => {\n        const distance = getDistance(target, point as TransformedPoint, rotated);\n        if (distance <= LINE_POINT_SIZE) {\n          list.push({ distance, index: point.index });\n        }\n        if (distance < minDistance) {\n          minDistance = distance;\n          minIndex = i;\n        }\n      });\n      // This is special case for continuous series - if no point is actually hit\n      // then the closest point to the pointer position is picked.\n      if (!list.length && fallbackHitTest(target)) {\n        list.push({ index: points[minIndex].index, distance: minDistance });\n      }\n      return list.length ? { points: list } : null;\n    };\n  };\n\nconst createPointsEnumeratingHitTesterCreator =\n  (hitTestPoint: HitTestPointFn): CreateHitTesterFn => (points, rotated) => (target) => {\n    const list: PointDistance[] = [];\n    points.forEach((point) => {\n      const status = hitTestPoint(target, point as TransformedPoint, rotated);\n      if (status) {\n        list.push({ index: point.index, distance: status.distance });\n      }\n    });\n    return list.length ? { points: list } : null;\n  };\n\n/** @internal */\nexport const createAreaHitTester = createContinuousSeriesHitTesterCreator((rotated) => {\n  const path: PathFn = area() as any;\n  const hitArea = rotated ? dRotateArea : dArea;\n  if (rotated) {\n    path.x1!(hitArea.x1!());\n    path.x0!(hitArea.x0!());\n    path.y(hitArea.y());\n  } else {\n    path.x(hitArea.x());\n    path.y1!(hitArea.y1!());\n    path.y0!(hitArea.y0!());\n  }\n  return path;\n});\n\n/** @internal */\nexport const createLineHitTester = createContinuousSeriesHitTesterCreator((rotated) => {\n  const path: PathFn = area() as any;\n  const hitLine = rotated ? dRotateLine : dLine;\n  if (rotated) {\n    const getX = hitLine.x();\n    path.y(hitLine.y());\n    path.x0!(point => getX(point) + LINE_TOLERANCE);\n    path.x1!(point => getX(point) - LINE_TOLERANCE);\n  } else {\n    const getY = hitLine.y();\n    path.x(hitLine.x());\n    path.y1!(point => getY(point) - LINE_TOLERANCE);\n    path.y0!(point => getY(point) + LINE_TOLERANCE);\n  }\n  return path;\n});\n\n/** @internal */\nexport const createSplineHitTester = createContinuousSeriesHitTesterCreator((rotated) => {\n  const path: PathFn = area() as any;\n  const hitSpline = rotated ? dRotateSpline : dSpline;\n  if (rotated) {\n    const getX = hitSpline.x();\n    path.y(hitSpline.y());\n    path.x1!(point => getX(point) - LINE_TOLERANCE);\n    path.x0!(point => getX(point) + LINE_TOLERANCE);\n  } else {\n    const getY = hitSpline.y();\n    path.x(hitSpline.x());\n    path.y1!(point => getY(point) - LINE_TOLERANCE);\n    path.y0!(point => getY(point) + LINE_TOLERANCE);\n  }\n  path.curve!(hitSpline.curve!());\n  return path;\n});\n\nconst hitTestRect = (dx: number, dy: number, halfX: number, halfY: number) => (\n  Math.abs(dx) <= halfX && Math.abs(dy) <= halfY ? {\n    distance: getSegmentLength(dx, dy),\n  } : null\n);\n\n// Some kind of binary search can be used here as bars can be ordered along argument axis.\n/** @internal */\nexport const createBarHitTester = createPointsEnumeratingHitTesterCreator(\n  ([px, py], point, rotated) => {\n    const {\n      arg, val, startVal, barWidth, maxBarWidth,\n    } = point as BarSeries.PointProps;\n    const halfWidth = maxBarWidth * barWidth / 2;\n    const halfHeight = Math.abs(val - startVal!) / 2;\n    const centerVal = (val + startVal!) / 2;\n    const xCenter = rotated ? centerVal : arg;\n    const yCenter = rotated ? arg : centerVal;\n    return hitTestRect(\n      px - xCenter,\n      py - yCenter,\n      rotated ? halfHeight : halfWidth,\n      rotated ? halfWidth : halfHeight,\n    );\n  },\n);\n\n/** @internal */\nexport const createScatterHitTester = createPointsEnumeratingHitTesterCreator(\n  ([px, py], obj, rotated) => {\n    const { point } = obj as ScatterSeries.PointProps;\n    const distance = getDistance([px, py], obj, rotated);\n    return distance <= point.size / 2 ? { distance } : null;\n  },\n);\n\nconst mapAngleTod3 = (angle: number) => {\n  const ret = angle + Math.PI / 2;\n  return ret >= 0 ? ret : ret + Math.PI * 2;\n};\n\n// Some kind of binary search can be used here as pies can be ordered along angle axis.\n/** @internal */\nexport const createPieHitTester = createPointsEnumeratingHitTesterCreator(\n  ([px, py], point) => {\n    const {\n      arg: x, val: y, innerRadius, outerRadius, startAngle, maxRadius, endAngle,\n    } = point as PieSeries.PointProps;\n    const inner = innerRadius * maxRadius;\n    const outer = outerRadius * maxRadius;\n    const rCenter = (inner + outer) / 2;\n    const angleCenter = (startAngle + endAngle) / 2;\n    const halfRadius = (outer - inner) / 2;\n    const halfAngle = Math.abs(startAngle - endAngle) / 2;\n    const dx = px - x;\n    const dy = py - y;\n    const r = getSegmentLength(dx, dy);\n    const angle = mapAngleTod3(Math.atan2(dy, dx));\n    // This is not a correct distance calculation but for now it will suffice.\n    // For Pie series it would not be actually used.\n    return hitTestRect(r - rCenter, angle - angleCenter, halfRadius, halfAngle);\n  },\n);\n\nconst buildFilter = (targets: TargetList): Filter => {\n  const result = {};\n  targets.forEach(({ series, point }) => {\n    (result[series] = result[series] || new Set()).add(point);\n  });\n  return result;\n};\n\n/** @internal */\nexport const changeSeriesState = (seriesList: SeriesList, targets: TargetList, state: string) => {\n  if (targets.length === 0) {\n    return seriesList;\n  }\n  const filter = buildFilter(targets);\n  let matches = 0;\n  const result = seriesList.map((seriesItem) => {\n    const set = filter[seriesItem.name];\n    if (!set) {\n      return seriesItem;\n    }\n    matches += 1;\n    const props: { state: string, points?: TransformedPoint[] } = { state };\n    if (set.size) {\n      props.points = (seriesItem.points as TransformedPoint[]).map(\n        point => (set.has(point.index) ? { ...point, state } : point),\n      );\n    }\n    return { ...seriesItem, ...props };\n  });\n  // This is to prevent false rerenders.\n  return matches > 0 ? result : seriesList;\n};\n", "import { SeriesList, LegendItemList } from '../types';\n\nconst getDefaultLegendItems = (series: SeriesList): LegendItemList => series.map(\n  ({ name: text, color }) => ({ text, color }),\n);\n\nconst getPieLegendItems = (series: SeriesList): LegendItemList => series[0]\n  .points.map(({ argument: text, color }) => ({ text, color }));\n\n// The function supports special case when there is single Pie series.\n// There is no common way to tell if series is PieSeries -\n// checking `radius` props will suffice for now.\nconst isSinglePieSeriesCase = (series: SeriesList) => (\n  series.length === 1 && 'innerRadius' in series[0] && 'outerRadius' in series[0]\n);\n\n/** @internal */\nexport const getLegendItems = (series: SeriesList) => (\n  (isSinglePieSeriesCase(series) ? getPieLegendItems : getDefaultLegendItems)(series)\n);\n", "import { hasWindow } from '@devexpress/dx-core';\nimport { getEventCoords, getOffset } from './common';\nimport {\n  TrackerTarget, HandlerFnList, SeriesList, HitTesters,\n  EventHandlerFn, TargetData, EventHandlers, HandlersObject,\n} from '../types';\n\nconst DISTANCE_THRESHOLD = 20;\n\nconst compareHitTargets = (t1: TrackerTarget, t2: TrackerTarget) => {\n  const distanceDelta = t1.distance - t2.distance;\n  if (Math.abs(distanceDelta) <= DISTANCE_THRESHOLD) {\n    const orderDelta = t2.order - t1.order;\n    return orderDelta !== 0 ? orderDelta : distanceDelta;\n  }\n  return distanceDelta;\n};\n\nconst buildEventHandler = (seriesList: SeriesList, handlers: HandlerFnList): EventHandlerFn => {\n  let hitTesters: HitTesters | null = null;\n\n  const createHitTesters = () => {\n    const obj: HitTesters = {};\n    seriesList.forEach((seriesItem) => {\n      obj[seriesItem.symbolName as unknown as string] = seriesItem\n      .createHitTester(seriesItem.points, seriesItem.rotated);\n    });\n    return obj;\n  };\n\n  return (e) => {\n    const location = getEventCoords(e, getOffset(e.currentTarget));\n    hitTesters = hitTesters || createHitTesters();\n    const targets: TrackerTarget[] = [];\n    seriesList.forEach(({ name: series, index: order, symbolName }) => {\n      const status = hitTesters![symbolName as unknown as string](location);\n      if (status) {\n        targets.push(...status.points.map(\n          point => ({\n            series, order, point: point.index, distance: point.distance,\n          }),\n        ));\n      }\n    });\n    targets.sort(compareHitTargets);\n    const arg: TargetData = { location, targets, event: e.nativeEvent };\n    handlers.forEach(handler => handler(arg));\n  };\n};\n\nconst buildLeaveEventHandler = (handlers: HandlerFnList): EventHandlerFn => (e) => {\n  const location = getEventCoords(e, getOffset(e.currentTarget));\n  const arg: TargetData = { location, targets: [] };\n  handlers.forEach(handler => handler(arg));\n};\n\n// The result is of Map<string, Function> type.\n// Keys are DOM event names (https://developer.mozilla.org/en-US/docs/Web/Events).\n/** @internal */\nexport const buildEventHandlers = (\n  seriesList: SeriesList, { clickHandlers, pointerMoveHandlers }: HandlersObject,\n) => {\n  const handlers: EventHandlers = {};\n  if (!hasWindow()) return handlers;\n  if (clickHandlers.length) {\n    handlers.click = buildEventHandler(seriesList, clickHandlers);\n  }\n  if (pointerMoveHandlers.length) {\n    const moveHandler = buildEventHandler(seriesList, pointerMoveHandlers);\n    const leaveHandler = buildLeaveEventHandler(pointerMoveHandlers);\n    if ('ontouchstart' in window) {\n      handlers.touchstart = moveHandler;\n    } else {\n      handlers.mousemove = moveHandler;\n      handlers.mouseleave = leaveHandler;\n    }\n  }\n  return handlers;\n};\n", "import {\n  EasingFn, SetAttributeFn, AnimationFn, GetNewPositionsFn,\n  RangePointCoordinates, PointCoordinates, PointComponentProps,\n  PieCoordinates, PathStartCoordinates, PathEndCoordinates,\n} from '../types';\n\n/** @internal */\nconst getProgress = ({ elapsed, total }: {elapsed: number, total: number}) =>\nMath.min(elapsed / total, 1);\n\n/** @internal */\nconst runAnimation = (\n  setAttributes: SetAttributeFn,\n  getNewPositions: GetNewPositionsFn,\n  easing: EasingFn, duration: number, delay: number,\n) => new Promise((resolve) => {\n  setTimeout(() => {\n    const time = {\n      start: Date.now(),\n      total: duration,\n      elapsed: 0,\n    };\n    const step = () => {\n      time.elapsed = Date.now() - time.start;\n      const progress = getProgress(time);\n      setAttributes(getNewPositions(easing(progress)));\n\n      if (progress < 1) requestAnimationFrame(step);\n    };\n    resolve(requestAnimationFrame(step));\n  }, delay);\n});\n\n/** @internal */\nexport const buildAnimation = (easing: EasingFn, duration: number): AnimationFn => (\n  startCoords, endCoords, processAnimation, setAttributes, delay = 0,\n) => {\n  let animationID;\n\n  const stop = () => {\n    if (animationID) {\n      cancelAnimationFrame(animationID);\n      animationID = undefined;\n    }\n  };\n\n  const run = (start, end, delayValue) => {\n    animationID = runAnimation(\n      setAttributes, processAnimation(start, end),\n      easing, duration, delayValue,\n    ).then((res) => {\n      animationID = res;\n    });\n  };\n\n  run(startCoords, endCoords, delay);\n\n  return {\n    update: (updatedStartCoords, updatedEndCoords, updatedDelay = 0) => {\n      stop();\n      run(updatedStartCoords, updatedEndCoords, updatedDelay);\n    },\n    stop,\n  };\n};\n\nconst lerp = (a: number, b: number, t: number) => a + t * (b - a);\n\n/** @internal */\nexport const processPointAnimation = (\n  startCoords: PointCoordinates, endCoords: PointComponentProps,\n) => {\n  return (progress: number) => {\n    return {\n      arg: lerp(startCoords.arg, endCoords.arg, progress),\n      val: lerp(startCoords.val, endCoords.val, progress),\n    };\n  };\n};\n\n/** @internal */\nexport const processBarAnimation = (\n  startCoords: RangePointCoordinates, endCoords: PointComponentProps,\n) => {\n  return (progress: number) => {\n    return {\n      arg: lerp(startCoords.arg, endCoords.arg, progress),\n      val: lerp(startCoords.val, endCoords.val, progress),\n      startVal: lerp(startCoords.startVal, endCoords.startVal, progress),\n    };\n  };\n};\n\n/** @internal */\nexport const processLineAnimation = (\n  { coordinates }: PathStartCoordinates,\n  { coordinates: endCoordinates }: PathEndCoordinates,\n) => {\n  return (progress: number) => {\n    return {\n      coordinates: endCoordinates.map((coord, index) => {\n        const startCurCoord = coordinates[index];\n        return {\n          ...coord,\n          arg: lerp(startCurCoord.arg, coord.arg, progress),\n          val: lerp(startCurCoord.val, coord.val, progress),\n        };\n      }),\n    };\n  };\n};\n\n/** @internal */\nexport const processAreaAnimation = (\n  { coordinates }: PathStartCoordinates,\n  { coordinates: endCoordinates }: PathEndCoordinates,\n) => {\n  return (progress: number) => {\n    return {\n      coordinates: endCoordinates.map((coord, index) => {\n        const startCurCoord = coordinates[index];\n        return {\n          ...coord,\n          arg: lerp(startCurCoord.arg, coord.arg, progress),\n          val: lerp(startCurCoord.val, coord.val, progress),\n          startVal: lerp(startCurCoord.startVal, coord.startVal, progress),\n        };\n      }),\n    };\n  };\n};\n\n/** @internal */\nexport const processPieAnimation = (start: PieCoordinates, end: PieCoordinates) => {\n  return (progress: number) => {\n    return {\n      innerRadius: lerp(start.innerRadius, end.innerRadius, progress),\n      outerRadius: lerp(start.outerRadius, end.outerRadius, progress),\n      startAngle: lerp(start.startAngle, end.startAngle, progress),\n      endAngle: lerp(start.endAngle, end.endAngle, progress),\n    };\n  };\n};\n", "import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { defaultDomains } from '@devexpress/dx-chart-core';\nimport { BasicDataProps } from '../types';\n\nconst series = [];\n\nexport const BasicData: React.FunctionComponent<BasicDataProps> = ({ data, rotated }) => (\n  <Plugin name=\"Basis\">\n    <Getter name=\"data\" value={data} />\n    <Getter name=\"domains\" value={defaultDomains} />\n    <Getter name=\"series\" value={series} />\n    <Getter name=\"rotated\" value={rotated} />\n  </Plugin>\n);\n", "import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport { buildScales, scaleSeriesPoints } from '@devexpress/dx-chart-core';\n\nconst getScales = ({ domains, ranges }: Getters) => buildScales(domains, ranges);\n\nconst getSeries = ({\n  series, scales, rotated,\n}: Getters) => scaleSeriesPoints(series, scales, rotated);\n\nexport class ChartCore extends React.PureComponent {\n  render() {\n    return (\n      <Plugin>\n        <Getter name=\"scales\" computed={getScales} />\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n", "import * as React from 'react';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { Plugin, Template, TemplatePlaceholder, Getter } from '@devexpress/dx-react-core';\n\nexport class AxesLayout extends React.PureComponent {\n  ref = React.createRef<HTMLDivElement>();\n  render() {\n    return (\n      <Plugin>\n        <Getter name=\"centerDivRef\" value={this.ref} />\n        <Template name=\"canvas\">\n          <div\n            id=\"center-center\"\n            ref={this.ref}\n            style={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}\n          >\n            <div id={`${TOP}-axis-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n              <TemplatePlaceholder name={`${TOP}-${LEFT}-axis`} />\n              <TemplatePlaceholder name={`${TOP}-axis`} />\n              <TemplatePlaceholder name={`${TOP}-${RIGHT}-axis`} />\n            </div>\n            <div\n              id=\"center-axis-container\"\n              style={{ display: 'flex', flexDirection: 'row', flexGrow: 1 }}\n            >\n              <TemplatePlaceholder name={`${LEFT}-axis`} />\n              <TemplatePlaceholder />\n              <TemplatePlaceholder name={`${RIGHT}-axis`} />\n            </div>\n            <div id={`${BOTTOM}-axis-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n              <TemplatePlaceholder name={`${BOTTOM}-${LEFT}-axis`} />\n              <TemplatePlaceholder name={`${BOTTOM}-axis`} />\n              <TemplatePlaceholder name={`${BOTTOM}-${RIGHT}-axis`} />\n            </div>\n          </div>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n", "import * as React from 'react';\nimport { Plugin, Template, TemplateConnector } from '@devexpress/dx-react-core';\nimport { SpaceFillingRectsProps, BBoxes } from '../types';\n\nexport class SpaceFillingRects extends React.PureComponent<SpaceFillingRectsProps> {\n  render() {\n    const { placeholders } = this.props;\n    return (\n      <Plugin name=\"SpaceFillingRects\">\n        {placeholders.map(name => (\n          <Template name={name} key={name}>\n            <TemplateConnector>\n              {({ layouts }) => {\n                const key = name.slice(name.indexOf('-') + 1);\n                const width = Object.keys(layouts as BBoxes).reduce((prev, cur) => {\n                  if (cur.includes(key)) {\n                    return prev + layouts[cur].width;\n                  }\n                  return prev;\n                }, 0);\n                return <div id={name} style={{ width }} />;\n              }}\n            </TemplateConnector>\n          </Template>\n        ))}\n      </Plugin>\n    );\n  }\n}\n", "import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport { isReadyToRenderSeries } from '@devexpress/dx-chart-core';\n\nexport class ControllerComponent extends React.PureComponent {\n  isPreviousDataEmpty: boolean = true;\n\n  readyToRenderSeriesComputed = ({\n    layouts, centerDivRef, data, axesExist,\n  }: Getters) => {\n    const isPreviousDataEmpty = this.isPreviousDataEmpty;\n    this.isPreviousDataEmpty = !data.length;\n    return isReadyToRenderSeries(layouts, centerDivRef, isPreviousDataEmpty, !!axesExist);\n  }\n\n  render () {\n    return (\n    <Plugin name=\"ControllerComponent\">\n      <Getter name=\"readyToRenderSeries\" computed={this.readyToRenderSeriesComputed} />\n    </Plugin>\n    );\n  }\n}\n", "import * as React from 'react';\nimport { ClipPathProps } from '../types';\n\nconst EXTRA_PIXELS = 2;\n\nexport class ClipPath extends React.PureComponent<ClipPathProps> {\n  render() {\n    const {\n      id, width, height,\n    } = this.props;\n    return (\n      <defs>\n        <clipPath id={id}>\n          <rect\n            x={-EXTRA_PIXELS / 2}\n            y={-EXTRA_PIXELS / 2}\n            width={width + EXTRA_PIXELS}\n            height={height + EXTRA_PIXELS}\n          />\n        </clipPath>\n      </defs>\n    );\n  }\n}\n", "import * as React from 'react';\nimport { Sizer, SizerProps } from '@devexpress/dx-react-core';\n\n// It is located in a separate file only for testing purpose -\n// it should actually be placed next to PaneLayout.\nexport class UpdatableSizer extends React.PureComponent<SizerProps> {\n  ref = React.createRef<Sizer>();\n\n  componentDidUpdate() {\n    this.props.onSizeChange(this.ref.current!.getSize());\n  }\n\n  render() {\n    return <Sizer ref={this.ref} {...this.props} />;\n  }\n}\n", "import * as React from 'react';\nimport {\n  Plugin,\n  Getter,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { ClipPath } from '../templates/clip-path';\n\n// Original *Sizer* cannot be used because it ignores (as it should do) *forceUpdate* request.\n// *UpdatableSizer* implements *componentDidUpdate* and forces internal *Sizer* size calculation.\n// It allows to run chart size recalculation by calling *forceUpdate* on chart instance.\nimport { UpdatableSizer } from '../utils/updatable-sizer';\n\nconst DIV_STYLE: React.CSSProperties = {\n  flex: 1, zIndex: 1, position: 'relative', width: '100%',\n};\n\nconst SVG_STYLE: React.CSSProperties = {\n  position: 'absolute', left: 0, top: 0, overflow: 'visible',\n};\n\nconst SizerContainer = ({ children, forwardedRef }) => (\n  <div ref={forwardedRef} style={DIV_STYLE}>{children}</div>\n);\n\nlet numDefs = 0;\nconst getUniqueId = () => {\n  numDefs += 1;\n  return numDefs;\n};\nexport class PaneLayout extends React.PureComponent {\n  ref = React.createRef<SVGSVGElement>();\n  clipPathId = `clip_path_${getUniqueId()}`;\n\n  render() {\n    return (\n      <Plugin name=\"PaneLayout\">\n        <Getter name=\"rootRef\" value={this.ref} />\n        <Getter name=\"clipPathId\" value={this.clipPathId} />\n        <Template name=\"canvas\">\n        {params => (\n          <TemplateConnector>\n            {({ layouts }, { changeBBox }) => {\n              const { width, height } = layouts.pane;\n              return (\n                <UpdatableSizer\n                  containerComponent={SizerContainer}\n                  onSizeChange={size => changeBBox({ placeholder: 'pane', bBox: size })}\n                >\n                  <svg\n                    ref={this.ref}\n                    {...params}\n                    width={width}\n                    height={height}\n                    style={SVG_STYLE}\n                  >\n                    <ClipPath id={this.clipPathId} width={width} height={height} />\n                    <TemplatePlaceholder name=\"series\" />\n                  </svg>\n                </UpdatableSizer>\n              );\n            }}\n          </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n", "import * as React from 'react';\nimport {\n  Plugin,\n  Getter,\n  Action,\n  Template,\n  TemplatePlaceholder,\n  createStateHelper,\n  Getters,\n  ActionFn,\n} from '@devexpress/dx-react-core';\nimport { bBoxes, getRanges } from '@devexpress/dx-chart-core';\nimport { LayoutManagerProps, LayoutManagerState, BBoxesChange } from '../types';\n\nconst doGetRanges = ({ layouts, rotated }: Getters) => getRanges(layouts.pane, rotated);\n\nexport class LayoutManager extends React.PureComponent<LayoutManagerProps, LayoutManagerState> {\n  static defaultProps: Partial<LayoutManagerProps> = {\n    width: 0,\n  };\n  changeBBox: ActionFn<BBoxesChange>;\n\n  constructor(props: LayoutManagerProps) {\n    super(props);\n\n    this.state = { bBoxes: { pane: { width: 0, height: 0 } } };\n\n    const stateHelper = createStateHelper(this);\n    this.changeBBox = stateHelper.applyFieldReducer.bind(\n      stateHelper,\n      'bBoxes',\n      bBoxes,\n    );\n  }\n\n  render() {\n    const {\n      width, height, rootComponent: Root, ...restProps\n    } = this.props;\n    const { bBoxes: stateBBoxes } = this.state;\n\n    return (\n      <Plugin>\n        <Getter name=\"layouts\" value={stateBBoxes} />\n        <Getter name=\"ranges\" computed={doGetRanges} />\n        <Action name=\"changeBBox\" action={this.changeBBox} />\n\n        <Template name=\"root\">\n          <Root\n            width={width!}\n            height={height}\n            {...restProps}\n          >\n            <TemplatePlaceholder name=\"canvas\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n", "import * as React from 'react';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\n\nexport const ComponentLayout: React.FunctionComponent = () => (\n  <Plugin name=\"ComponentLayout\">\n    <Template name=\"canvas\">\n      <div id={`${TOP}-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n        <TemplatePlaceholder name={`${TOP}-${LEFT}`} />\n        <TemplatePlaceholder name={TOP} />\n        <TemplatePlaceholder name={`${TOP}-${RIGHT}`} />\n      </div>\n      <div id=\"center-container\" style={{ display: 'flex', flexDirection: 'row', flexGrow: 1 }}>\n        <TemplatePlaceholder name={LEFT} />\n        <TemplatePlaceholder />\n        <TemplatePlaceholder name={RIGHT} />\n      </div>\n      <div id={`${BOTTOM}-container`} style={{ display: 'flex', flexDirection: 'row' }}>\n        <TemplatePlaceholder name={`${BOTTOM}-${LEFT}`} />\n        <TemplatePlaceholder name={BOTTOM} />\n        <TemplatePlaceholder name={`${BOTTOM}-${RIGHT}`} />\n      </div>\n    </Template>\n  </Plugin>\n);\n", "import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { PaletteProps } from '../types';\n\nclass PaletteBase extends React.PureComponent<PaletteProps> {\n  render() {\n    const { scheme } = this.props;\n    return (\n      <Plugin name=\"Palette\">\n        <Getter name=\"palette\" value={scheme} />\n      </Plugin>\n    );\n  }\n}\n\nexport const Palette: React.ComponentType<PaletteProps> = PaletteBase;\n", "import * as React from 'react';\nimport { RootLayoutProps } from '../types';\n\nexport class Root extends React.PureComponent<RootLayoutProps> {\n  render() {\n    const {\n      children, width, height, style, ...restProps\n    } = this.props;\n\n    return (\n      <div\n        style={{\n          ...style,\n          height: `${height}px`,\n          ...width ? { width: `${width}px` } : null,\n        }}\n        {...restProps}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n", "import * as React from 'react';\nimport { Chart } from '../types';\n\nexport class Label extends React.PureComponent<Chart.LabelProps> {\n  render() {\n    return (\n      <text {...this.props} />\n    );\n  }\n}\n", "import * as React from 'react';\nimport { PluginHost, withComponents, PluginComponents } from '@devexpress/dx-react-core';\nimport {\n  TOP, BOTTOM, LEFT, RIGHT,\n} from '@devexpress/dx-chart-core';\nimport { ChartProps } from './types';\n\nimport { BasicData } from './plugins/basic-data';\nimport { ChartCore } from './plugins/chart-core';\nimport { AxesLayout } from './plugins/axes-layout';\nimport { SpaceFillingRects } from './plugins/space-filling-rects';\nimport { ControllerComponent } from './plugins/controller-component';\nimport { PaneLayout } from './plugins/pane-layout';\nimport { LayoutManager } from './plugins/layout-manager';\nimport { ComponentLayout } from './plugins/component-layout';\nimport { Palette } from './plugins/palette';\nimport { Root } from './templates/layout';\nimport { Label } from './templates/label';\n\nconst scheme = [];\nconst placeholders = [\n  `${TOP}-${LEFT}`,\n  `${TOP}-${RIGHT}`,\n  `${BOTTOM}-${LEFT}`,\n  `${BOTTOM}-${RIGHT}`,\n  `${TOP}-${LEFT}-axis`,\n  `${TOP}-${RIGHT}-axis`,\n  `${BOTTOM}-${LEFT}-axis`,\n  `${BOTTOM}-${RIGHT}-axis`,\n];\n\nclass RawChart extends React.PureComponent<ChartProps> {\n  static defaultProps: Partial<ChartProps> = {\n    height: 500,\n    rotated: false,\n  };\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n  };\n\n  render() {\n    const {\n      data,\n      width,\n      height,\n      children,\n      rotated,\n      rootComponent,\n      ...restProps\n    } = this.props;\n    return ((\n      <PluginHost>\n        <BasicData data={data} rotated={rotated!} />\n        <Palette scheme={scheme} />\n        <LayoutManager\n          width={width}\n          height={height!}\n          rootComponent={rootComponent}\n          {...restProps}\n        />\n        <PaneLayout />\n        <AxesLayout />\n        <ComponentLayout />\n        <SpaceFillingRects placeholders={placeholders} />\n        {children}\n        <ControllerComponent />\n        <ChartCore />\n      </PluginHost>\n    ));\n  }\n}\n\nexport const Chart: React.ComponentType<ChartProps> = withComponents({ Root })(RawChart);\n(Chart as any).Label = Label;\n", "import * as React from 'react';\nimport { Legend } from '../../types';\n\nexport class Marker extends React.PureComponent<Legend.MarkerProps> {\n  render() {\n    const { color, ...restProps } = this.props;\n    return (\n      <svg fill={color} width=\"10\" height=\"10\" {...restProps}>\n        <circle r={5} cx={5} cy={5} {...restProps} />\n      </svg>\n    );\n  }\n}\n", "import * as React from 'react';\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n  withComponents,\n  Getters,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { getLegendItems } from '@devexpress/dx-chart-core';\nimport { Marker } from '../templates/legend/marker';\nimport { LegendProps } from '../types';\n\nclass RawLegend extends React.PureComponent<LegendProps> {\n  static defaultProps: Partial<LegendProps> = {\n    position: 'right',\n    getItems: ({ series }: Getters) => getLegendItems(series),\n  };\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    itemComponent: 'Item',\n    markerComponent: 'Marker',\n    labelComponent: 'Label',\n  };\n\n  render() {\n    const {\n      markerComponent: MarkerComponent,\n      labelComponent: Label,\n      rootComponent: Root,\n      itemComponent: Item,\n      position,\n      getItems,\n    } = this.props;\n    const placeholder = position!;\n    return (\n      <Plugin name=\"Legend\">\n        <Template name={placeholder}>\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {getters => (\n              <Root name={`legend-${placeholder}`}>\n                {getItems!(getters).map(({ text, color }) => (\n                  <Item key={text}>\n                    <MarkerComponent name={text} color={color} />\n                    <Label text={text} />\n                  </Item>\n                ))}\n              </Root>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const Legend: React.ComponentType<LegendProps> = withComponents({ Marker })(RawLegend);\n", "import * as React from 'react';\n\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { TitleProps } from '../types';\n\nclass TitleBase extends React.PureComponent<TitleProps> {\n  static components: PluginComponents = {\n    textComponent: 'Text',\n  };\n  static defaultProps: Partial<TitleProps> = {\n    position: 'top',\n  };\n\n  render() {\n    const {\n      textComponent: Text,\n      text,\n      position,\n    } = this.props;\n    const placeholder = position!;\n    return (\n      <Plugin name=\"Title\">\n        <Template name={placeholder}>\n          <TemplatePlaceholder />\n          <Text text={text} />\n        </Template>\n      </Plugin>\n    );\n  }\n}\nexport const Title: React.ComponentType<TitleProps> = TitleBase;\n", "import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplatePlaceholder,\n  TemplateConnector,\n  withComponents,\n  Getters,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  findSeriesByName, addSeries, extendDomains, getValueDomainName, ARGUMENT_DOMAIN,\n} from '@devexpress/dx-chart-core';\nimport {\n  ExtraSeriesParameters, SeriesProps, PathComponentProps, Scales,\n} from '../types';\n\n/** @internal */\nexport const declareSeries = <T extends SeriesProps>(\n  pluginName: string,\n  { components, getPointTransformer, createHitTester }: ExtraSeriesParameters,\n): React.ComponentType<T> => {\n  class Component extends React.PureComponent<T> {\n    static components: PluginComponents;\n    static defaultProps: Partial<SeriesProps> = {\n      name: 'defaultSeriesName',\n    };\n\n    render() {\n      const {\n        name,\n        argumentField,\n        valueField,\n        scaleName,\n        seriesComponent,\n        pointComponent,\n        color,\n        ...restProps\n      } = this.props;\n      const symbolName = Symbol(name);\n      const seriesItem = {\n        getPointTransformer,\n        createHitTester,\n        ...this.props,\n        symbolName,\n      };\n      const getSeries = ({\n        series,\n        data,\n        palette,\n      }: Getters) => addSeries(series, data, palette, seriesItem, restProps);\n      const getDomains = ({\n        series,\n        domains,\n      }: Getters) => extendDomains(domains, findSeriesByName(symbolName, series));\n      return (\n        <Plugin name={pluginName}>\n          <Getter name=\"series\" computed={getSeries} />\n          <Getter name=\"domains\" computed={getDomains} />\n          <Template name=\"series\">\n            <TemplatePlaceholder />\n            <TemplateConnector>\n              {({\n                series, scales, animation, rotated, layouts, clipPathId, readyToRenderSeries,\n              }) => {\n                const { pane } = layouts;\n                const currentSeries = findSeriesByName(symbolName, series);\n                const currentScales: Scales = {\n                  argScale: scales[ARGUMENT_DOMAIN],\n                  valScale: scales[getValueDomainName(currentSeries!.scaleName)],\n                };\n                const Path: React.ComponentType<PathComponentProps> =\n                  currentSeries.seriesComponent as any;\n                return (\n                  <Path\n                    index={currentSeries.index}\n                    pointComponent={currentSeries.pointComponent}\n                    coordinates={currentSeries.points as any}\n                    rotated={rotated}\n                    state={currentSeries.state}\n                    color={currentSeries.color}\n                    scales={currentScales}\n                    pane={pane}\n                    clipPathId={clipPathId}\n                    animation={animation}\n                    readyToRenderSeries={readyToRenderSeries}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          </Template>\n        </Plugin>\n      );\n    }\n  }\n  Component.components = {};\n  if (components.Path) {\n    Component.components.seriesComponent = 'Path';\n  }\n  if (components.Point) {\n    Component.components.pointComponent = 'Point';\n  }\n  return withComponents(components)(Component);\n};\n", "import * as React from 'react';\nimport { ITargetComponent } from '@devexpress/dx-react-core';\nimport { CommonComponentProps } from '@devexpress/dx-chart-core';\nimport { RawAxisProps, ScaleProps } from '../types';\n\n/** @internal */\nexport const withPatchedProps = (\n  patch: <T extends CommonComponentProps | RawAxisProps | ScaleProps>(props: T) => T,\n) => <K extends CommonComponentProps | RawAxisProps | ScaleProps>(\n  Target: React.ComponentType<K>,\n): React.ComponentType<K> => {\n  class Component extends React.PureComponent<K> {\n    static components = (Target as any as ITargetComponent).components;\n\n    render() {\n      const props = patch(this.props as K);\n      return <Target {...props} />;\n    }\n  }\n  return Component;\n};\n", "import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport { ARGUMENT_DOMAIN, getValueDomainName, addDomain } from '@devexpress/dx-chart-core';\nimport { withPatchedProps } from '../utils';\nimport { ScaleProps, ArgumentScaleProps, ValueScaleProps } from '../types';\n\n/** @internal */\nexport class Scale extends React.PureComponent<ScaleProps> {\n  render() {\n    const { name, factory, modifyDomain } = this.props;\n    const args = { factory, modifyDomain };\n    const getDomains = ({ domains }: Getters) => addDomain(domains, name!, args);\n    return (\n      <Plugin name=\"Scale\">\n        <Getter name=\"domains\" computed={getDomains} />\n      </Plugin>\n    );\n  }\n}\n\nexport const ArgumentScale: React.ComponentType<ArgumentScaleProps> = withPatchedProps(props => ({\n  ...props,\n  name: ARGUMENT_DOMAIN,\n}))(Scale);\n\nexport const ValueScale: React.ComponentType<ValueScaleProps> = withPatchedProps(props => ({\n  ...props,\n  name: getValueDomainName((props as ScaleProps).name),\n}))(Scale);\n", "import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport { getStackedSeries, getStackedDomains } from '@devexpress/dx-chart-core';\nimport { StackProps, StacksOptions, OffsetFn, OrderFn } from '../types';\nimport {\n  stackOrderNone,\n  stackOffsetDiverging,\n} from 'd3-shape';\n\nconst getDomains = ({ domains, series }: Getters) => getStackedDomains(domains, series);\n\nclass StackBase extends React.PureComponent<StackProps> {\n  static defaultProps: Partial<StackProps> = {\n    stacks: [],\n    offset: stackOffsetDiverging as OffsetFn,\n    order: stackOrderNone as OrderFn,\n  };\n\n  render() {\n    const { stacks, offset, order } = this.props;\n    const params: StacksOptions = {\n      stacks: stacks!,\n      offset: offset!,\n      order: order!,\n    };\n    const getSeries = ({ series, data }: Getters) => getStackedSeries(series, data, params);\n    return (\n      <Plugin name=\"Stack\">\n        <Getter name=\"series\" computed={getSeries} />\n        <Getter name=\"domains\" computed={getDomains} />\n      </Plugin>\n    );\n  }\n}\n\nexport const Stack: React.ComponentType<StackProps> = StackBase;\n", "import * as React from 'react';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { buildAnimation, easeOutCubic } from '@devexpress/dx-chart-core';\nimport { AnimationProps } from '../types';\n\nclass AnimationBase extends React.PureComponent<AnimationProps> {\n  static defaultProps: Partial<AnimationProps> = {\n    easing: easeOutCubic,\n    duration: 1000,\n  };\n  render() {\n    const { easing, duration } = this.props;\n    const buildAnimationGetter = () => buildAnimation(easing!, duration!);\n    return (\n      <Plugin name=\"Animation\">\n        <Getter name=\"animation\" computed={buildAnimationGetter} />\n      </Plugin>\n    );\n  }\n}\n\nexport const Animation: React.ComponentType<AnimationProps> = AnimationBase;\n", "import * as React from 'react';\nimport { CommonComponentProps } from '@devexpress/dx-chart-core';\n\nexport const withStates = (\n  states: { readonly [key: string]: (props: any) => any; },\n) => <K extends CommonComponentProps>(\n  Component: React.ComponentType<K>,\n): React.ComponentType<K> => {\n  class ComponentWithStates extends React.PureComponent<K> {\n    render() {\n      const { state, ...restProps } = this.props;\n      const stateFunc = state && states[state!];\n      const result = stateFunc ? stateFunc(restProps) : restProps;\n      return React.isValidElement(result) ? result : <Component {...result} />;\n    }\n  }\n  return ComponentWithStates;\n};\n", "import * as React from 'react';\nimport { PatternProps } from '../types';\n\nexport class Pattern extends React.PureComponent<PatternProps> {\n  static defaultProps: Partial<PatternProps> = {\n    size: 6,\n    opacity: 0.75,\n  };\n\n  render() {\n    const {\n      id, size, color, opacity,\n    } = this.props;\n    return (\n      <defs>\n        <pattern\n          id={id}\n          width={size}\n          height={size}\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <rect x={0} y={0} width={size} height={size} fill={color} opacity={opacity} />\n          <path\n            // tslint:disable-next-line: max-line-length\n            d={`M ${size! / 2} ${-size! / 2} L ${-size! / 2} ${size! / 2} M 0 ${size!} L ${size!} 0 M ${size! * 1.5} ${size! / 2} L ${size! / 2} ${size! * 1.5}`}\n            strokeWidth={2}\n            stroke={color}\n          />\n        </pattern>\n      </defs>\n    );\n  }\n}\n", "import * as React from 'react';\nimport { Pattern } from '../templates/pattern';\n\n// Function is returned (not PureComponent descendant) because\n// result is invoked as function (not as React component).\nexport const withPattern = <T extends {}>(\n  getPatternId: (props: T) => string, props: T,\n) => (Target: React.ComponentType<any>) => (targetProps: any) => {\n  const { color, ...restProps } = targetProps;\n  const patternId = getPatternId(targetProps);\n  return (\n    <React.Fragment>\n      <Target\n        color={`url(#${patternId})`}\n        {...restProps}\n      />\n      <Pattern\n        id={patternId}\n        color={color}\n        {...props}\n      />\n    </React.Fragment>\n  );\n};\n", "import * as React from 'react';\nimport { Animation, isScalesChanged } from '@devexpress/dx-chart-core';\nimport { GetDelayFn, Scales, AnimatedComponent } from '../types';\n\nexport const withAnimation = <T extends AnimatedComponent>(\n    processAnimation: (start: T, end: T) => (progress: number) => any, getProps: (props: T) => any,\n    getStartCoordinates: (scales: Scales, props: T) => any,\n    isValuesChanged: (previous: T, current: T) => boolean,\n    getDelay?: GetDelayFn,\n) => (Component: React.ComponentType<T>): React.ComponentType<T> => {\n  class ComponentWithAnimation extends React.PureComponent<T, T> {\n    animate: Animation | undefined;\n    constructor(props) {\n      super(props);\n\n      this.setAttribute = this.setAttribute.bind(this);\n    }\n\n    setAttribute(state) {\n      this.setState(state);\n    }\n\n    componentDidMount() {\n      const {\n        animation, scales, index, readyToRenderSeries,\n      } = this.props;\n      if (!readyToRenderSeries) {\n        return;\n      }\n      const props = getProps(this.props);\n      this.processComponent(animation, { scales: {} }, scales, props, {}, index);\n    }\n\n    componentDidUpdate(prevProps) {\n      const {\n        scales, index, animation, readyToRenderSeries,\n      } = this.props;\n      if (!readyToRenderSeries) {\n        return;\n      }\n      this.processComponent(\n        animation, prevProps, scales, getProps(this.props),\n        getProps(prevProps), index,\n      );\n    }\n\n    processComponent(animation, { scales: prevScales }, scales, props, prevProps, index) {\n      if (!animation) {\n        this.setAttribute(props);\n      } else if (this.animate) {\n        if (isScalesChanged(prevScales, scales)) {\n          this.setAttribute(props);\n        } else if (isValuesChanged(prevProps, props)) {\n          const delay = getDelay ? getDelay(index, false) : 0;\n          this.animate.update(prevProps, props, delay);\n        }\n      } else {\n        this.animate = animation(\n          getStartCoordinates(scales, props), props,\n          processAnimation, this.setAttribute, getDelay && getDelay(index, true),\n        );\n      }\n    }\n\n    componentWillUnmount() {\n      return this.animate && this.animate.stop();\n    }\n\n    render() {\n      const { readyToRenderSeries, ...restProps } = this.props;\n      if (!this.state) {\n        return null;\n      }\n      return (\n        <Component {...restProps} {...this.state} />\n      );\n    }\n  }\n  return ComponentWithAnimation;\n};\n", "import * as React from 'react';\nimport {\n  HOVERED, SELECTED, dArea, dRotateArea,\n  processAreaAnimation, getPathStart,\n  isCoordinatesChanged,\n} from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\nimport { withAnimation } from '../../utils/with-animation';\nimport { AreaSeries } from '../../types';\n\nclass RawArea extends React.PureComponent<AreaSeries.SeriesProps> {\n  render() {\n    const {\n      path,\n      coordinates, animation,\n      index, state, pointComponent,\n      color, clipPathId, pane,\n      scales, rotated,\n      ...restProps\n    } = this.props;\n    const dPath = path === undefined ? (rotated ? dRotateArea : dArea) : path;\n    return (\n      <path\n        clipPath={`url(#${clipPathId})`}\n        d={dPath!(coordinates)}\n        fill={color}\n        opacity={0.5}\n        {...restProps}\n      />\n    );\n  }\n}\n\n// It should actually be `withPattern<AreaSeries.PointProps>` but `opacity` is not decleared there.\n// It is not clear if `opacity` should be explicitly enumerated or stay as part of `restProps`.\n\nexport const Area: React.ComponentType<AreaSeries.SeriesProps> = withAnimation<any>(\n  processAreaAnimation,\n  ({ coordinates }) => ({ coordinates }),\n  getPathStart,\n  isCoordinatesChanged,\n)(withStates({\n  [HOVERED]: withPattern<any>(\n    ({ index, color }) => `series-${index}-color-${color}-hover`, { opacity: 0.75 },\n  )(RawArea),\n  [SELECTED]: withPattern<any>(\n    ({ index, color }) => `series-${index}-color-${color}-selection`, { opacity: 0.5 },\n  )(RawArea),\n})(RawArea));\n", "import * as React from 'react';\nimport {\n  getAreaPointTransformer as getPointTransformer, createAreaHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Area as Path } from '../templates/series/area';\nimport { AreaSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const AreaSeries: React.ComponentType<AreaSeriesProps> = declareSeries<AreaSeriesProps>('AreaSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path },\n});\n", "import * as React from 'react';\nimport { PathComponentProps } from '../../types';\n\n/** @internal */\nexport class PointCollection extends React.PureComponent<PathComponentProps> {\n  render() {\n    const {\n      pointComponent,\n      coordinates,\n      index,\n      state,\n      clipPathId,\n      ...restProps // restProps are used because of animation and scale\n    } = this.props;\n    const Point = pointComponent!;\n    return (coordinates.map(point => (\n      <Point\n        key={String(point.index)}\n        seriesIndex={index}\n        {...restProps}\n        {...point}\n      />\n    )));\n  }\n}\n", "import * as React from 'react';\nimport {\n  processBarAnimation, HOVERED, SELECTED, dBar, getVisibility, adjustBarSize,\n  isValuesChanged, getPointStart,\n} from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\nimport { withAnimation } from '../../utils/with-animation';\nimport { BarSeries } from '../../types';\n\nclass RawBar extends React.PureComponent<BarSeries.PointProps> {\n  render() {\n    const {\n      arg, val, startVal, barWidth, maxBarWidth, animation,\n      argument, value, seriesIndex, index, state, rotated,\n      color, pane,\n      scales,\n      ...restProps\n    } = this.props;\n    const width = barWidth * maxBarWidth;\n    const bar = dBar(arg, val, startVal, width, rotated);\n    const visibility = getVisibility(\n      pane, bar.x + bar.width / 2, bar.y + bar.height, bar.width, bar.height,\n    );\n    const adjustedBar = visibility === 'visible' ? adjustBarSize(bar, pane) : bar;\n    return (\n      <rect\n        {...adjustedBar}\n        fill={color}\n        visibility={visibility}\n        {...restProps}\n      />\n    );\n  }\n}\n\n// It should actually be `withPattern<BarSeries.PointProps>` but `opacity` is not decleared there.\n// It is not clear if `opacity` should be explicitly enumerated or stay as part of `restProps`.\n\nexport const Bar: React.ComponentType<BarSeries.PointProps> = withAnimation<any>(\n    processBarAnimation,\n    ({ arg, val, startVal }) => ({ arg, val, startVal }),\n    getPointStart,\n    isValuesChanged,\n    )(withStates({\n      [HOVERED]: withPattern<any>(\n    ({ seriesIndex, index, color }) =>\n      `series-${seriesIndex}-point-${index}-color-${color}-hover`, { opacity: 0.75 },\n    )(RawBar),\n      [SELECTED]: withPattern<any>(\n    ({ seriesIndex, index, color }) =>\n      `series-${seriesIndex}-point-${index}-color-${color}-selection`, { opacity: 0.5 },\n    )(RawBar),\n    })(RawBar));\n", "import * as React from 'react';\nimport {\n  getBarPointTransformer as getPointTransformer,\n  createBarHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { PointCollection as Path } from '../templates/series/point-collection';\nimport { Bar as Point } from '../templates/series/bar';\nimport { BarSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const BarSeries: React.ComponentType<BarSeriesProps> = declareSeries<BarSeriesProps>('BarSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path, Point },\n});\n\nBarSeries.defaultProps = {\n  barWidth: 0.9,\n};\n", "import * as React from 'react';\nimport {\n  processLineAnimation, HOVERED, SELECTED, isCoordinatesChanged, getPathStart,\n} from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withAnimation } from '../../utils/with-animation';\nimport { PathComponentPathProps } from '../../types';\n\nclass RawPath extends React.PureComponent<PathComponentPathProps> {\n  render() {\n    const {\n      path, animation,\n      coordinates, rotated,\n      index, state, pointComponent,\n      color, clipPathId,\n      scales, pane,\n      ...restProps\n    } = this.props;\n    return (\n      <path\n        clipPath={`url(#${clipPathId})`}\n        d={path!(coordinates)}\n        fill=\"none\"\n        strokeWidth={2}\n        stroke={color}\n        {...restProps}\n      />\n    );\n  }\n}\n\nexport const Path = withAnimation<any>(\n  processLineAnimation,\n  ({ coordinates }) => ({ coordinates }),\n  getPathStart,\n  isCoordinatesChanged,\n)(withStates({\n  [HOVERED]: props => ({ strokeWidth: 4, ...props }),\n  [SELECTED]: props => ({ strokeWidth: 4, ...props }),\n})(RawPath));\n", "import * as React from 'react';\nimport { dLine, dRotateLine } from '@devexpress/dx-chart-core';\nimport { Path } from './path';\nimport { LineSeries } from '../../types';\n\nexport class Line extends React.PureComponent<LineSeries.SeriesProps> {\n  render() {\n    const { rotated, path } = this.props;\n    const dPath = path === undefined ? (rotated ? dRotateLine : dLine) : path;\n    return <Path {...this.props} path={dPath} />;\n  }\n}\n", "import * as React from 'react';\nimport {\n  getLinePointTransformer as getPointTransformer,\n  createLineHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Line as Path } from '../templates/series/line';\nimport { AreaSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const LineSeries: React.ComponentType<AreaSeriesProps> = declareSeries<AreaSeriesProps>('LineSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path },\n});\n", "import * as React from 'react';\nimport {\n  dPie, HOVERED, SELECTED, processPieAnimation, isValuesChanged, getDelay,\n  getPieStart,\n} from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withPattern } from '../../utils/with-pattern';\nimport { withAnimation } from '../../utils/with-animation';\nimport { PieSeries } from '../../types';\n\nclass RawSlice extends React.PureComponent<PieSeries.PointProps> {\n  render() {\n    const {\n      arg, val, rotated,\n      argument, value, seriesIndex, index, state, maxRadius,\n      innerRadius, outerRadius, startAngle, endAngle,\n      color, animation, pane,\n      scales,\n      ...restProps\n    } = this.props;\n    return (\n      <g transform={`translate(${arg} ${val})`}>\n        <path\n          d={dPie(maxRadius, innerRadius, outerRadius,\n            startAngle, endAngle)}\n          fill={color}\n          stroke=\"none\"\n          {...restProps}\n        />\n      </g>\n    );\n  }\n}\n\n// It should actually be `withPattern<PieSeries.PointProps>` but `opacity` is not decleared there.\n// It is not clear if `opacity` should be explicitly enumerated or stay as part of `restProps`.\n\nexport const Slice: React.ComponentType<PieSeries.PointProps> = withAnimation<any>(\n  processPieAnimation,\n  ({ innerRadius, outerRadius, startAngle, endAngle }) =>\n  ({ innerRadius, outerRadius, startAngle, endAngle }),\n  getPieStart,\n  isValuesChanged,\n  getDelay,\n)(withStates({\n  [HOVERED]: withPattern<any>(\n    ({ seriesIndex, index, color }) =>\n    `series-${seriesIndex}-point-${index}-color-${color}-hover`, { opacity: 0.75 },\n  )(RawSlice),\n  [SELECTED]: withPattern<any>(\n    ({ seriesIndex, index, color }) =>\n    `series-${seriesIndex}-point-${index}-color-${color}-selection`, { opacity: 0.5 },\n  )(RawSlice),\n})(RawSlice));\n", "import * as React from 'react';\nimport {\n  getPiePointTransformer as getPointTransformer,\n  createPieHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { PointCollection as Path } from '../templates/series/point-collection';\nimport { Slice as Point } from '../templates/series/slice';\nimport { PieSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const PieSeries: React.ComponentType<PieSeriesProps> = declareSeries<PieSeriesProps>('PieSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path, Point },\n});\n\nPieSeries.defaultProps = {\n  innerRadius: 0,\n  outerRadius: 1,\n};\n", "import * as React from 'react';\nimport {\n  processPointAnimation, dSymbol, HOVERED, SELECTED, getVisibility,\n  isValuesChanged, getPointStart,\n} from '@devexpress/dx-chart-core';\nimport { withStates } from '../../utils/with-states';\nimport { withAnimation } from '../../utils/with-animation';\nimport { ScatterSeries } from '../../types';\n\nclass RawPoint extends React.PureComponent<ScatterSeries.PointProps> {\n  render() {\n    const {\n      arg, val, rotated, animation,\n      argument, value, seriesIndex, index, state,\n      point: pointOptions,\n      color, pane,\n      scales,\n      ...restProps\n    } = this.props;\n    const x = rotated ? val : arg;\n    const y = rotated ? arg : val;\n    const visibility = getVisibility(pane, x!, y!, 0, 0);\n    return (\n      <path\n        transform={`translate(${x} ${y})`}\n        d={dSymbol(pointOptions)}\n        fill={color}\n        visibility={visibility}\n        stroke=\"none\"\n        {...restProps}\n      />\n    );\n  }\n}\n\n// The expression is used to have 12 from 7 in default scenario\n// and to adjust hovered or selected size when custom *point.size* is defined.\nconst getAdjustedOptions = ({ size }) => ({ size: Math.round(size * 1.7) });\n\nexport const Point: React.ComponentType<ScatterSeries.PointProps> = withAnimation<any>(\n  processPointAnimation,\n  ({ arg, val }) => ({ arg, val }),\n  getPointStart,\n  isValuesChanged,\n)(withStates({\n  [HOVERED]: ({ color, point, ...restProps }) => ({\n    stroke: color,\n    strokeWidth: 4,\n    fill: 'none',\n    point: getAdjustedOptions(point),\n    ...restProps,\n  }),\n  [SELECTED]: ({ color, point, ...restProps }) => ({\n    stroke: color,\n    strokeWidth: 4,\n    fill: 'none',\n    point: getAdjustedOptions(point),\n    ...restProps,\n  }),\n})(RawPoint));\n", "import * as React from 'react';\nimport {\n  getScatterPointTransformer as getPointTransformer,\n  createScatterHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { PointCollection as Path } from '../templates/series/point-collection';\nimport { Point } from '../templates/series/point';\nimport { ScatterSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const ScatterSeries: React.ComponentType<ScatterSeriesProps> = declareSeries<ScatterSeriesProps>('ScatterSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path, Point },\n});\n\nScatterSeries.defaultProps = {\n  point: { size: 7 },\n};\n", "import * as React from 'react';\nimport { dSpline, dRotateSpline } from '@devexpress/dx-chart-core';\nimport { Path } from './path';\nimport { SplineSeries } from '../../types';\n\nexport class Spline extends React.PureComponent<SplineSeries.SeriesProps> {\n  render() {\n    const { rotated, path } = this.props;\n    const dPath = path === undefined ? (rotated ? dRotateSpline : dSpline) : path;\n    return <Path {...this.props} path={dPath} />;\n  }\n}\n", "import * as React from 'react';\nimport {\n  getLinePointTransformer as getPointTransformer,\n  createSplineHitTester as createHitTester,\n} from '@devexpress/dx-chart-core';\nimport { declareSeries } from '../utils';\nimport { Spline as Path } from '../templates/series/spline';\nimport { AreaSeriesProps } from '../types';\n\n// tslint:disable-next-line: max-line-length\nexport const SplineSeries: React.ComponentType<AreaSeriesProps> = declareSeries<AreaSeriesProps>('SplineSeries', {\n  getPointTransformer,\n  createHitTester,\n  components: { Path },\n});\n", "import * as React from 'react';\nimport { Axis } from '../../types';\n\nconst getOffset = (position: number) => (position >= 0 ? 0 : -position);\nconst getSize = (position: number, delta: number) => (position >= 0 ? position + delta : -position);\n\nexport class Root extends React.PureComponent<Axis.RootProps, Axis.RootState> {\n  ref = React.createRef<SVGGElement>();\n\n  constructor(props: Axis.RootProps) {\n    super(props);\n    this.state = {\n      x: 0, y: 0,\n    };\n    this.adjust = this.adjust.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(this.adjust);\n  }\n\n  componentDidUpdate() {\n    // *setState* is called unconditionally because PureComponent is expected to break the cycle.\n    this.setState(this.adjust);\n  }\n\n  // Since calculated state does not depend on current state non-callback version of *setState*\n  // might have been expected - it can't be done.\n  // Parent component (Axis) accesses its DOM content in *onSizeChange* handler. When\n  // this component is mounted parent is not yet - it crashes on DOM access.\n  // *setState* callback is invoked later then *componentDidMount* - by that time parent component\n  // is already mounted and can access its DOM.\n  // Because of it callback version of *setState* has to be used here.\n  // Can we rely on the fact that by the time of callback parent is mounted?\n  // For now we stick with it, but need to find a more solid solution.\n  adjust(_: Axis.RootState, { dx, dy, onSizeChange }: Axis.RootProps): Axis.RootState {\n    const bbox = this.ref.current!.getBBox();\n    const width = dx ? bbox.width : getSize(bbox.x, bbox.width);\n    const height = dy ? bbox.height : getSize(bbox.y, bbox.height);\n    const x = dx ? 0 : getOffset(bbox.x);\n    const y = dy ? 0 : getOffset(bbox.y);\n    onSizeChange({ width, height });\n    return { x, y };\n  }\n\n  render() {\n    const { children, onSizeChange, dx, dy, ...restProps } = this.props;\n    const { x, y } = this.state;\n    return (\n      <g\n        ref={this.ref}\n        transform={`translate(${x} ${y})`}\n        {...restProps}\n      >\n        {children}\n      </g>\n    );\n  }\n}\n", "import * as React from 'react';\nimport { Axis } from '../../types';\n\nexport class Label extends React.PureComponent<Axis.LabelProps> {\n  render() {\n    const {\n      text, ...restProps\n    } = this.props;\n\n    return (\n      <text\n        {...restProps}\n      >\n        {text}\n      </text>\n    );\n  }\n}\n", "import * as React from 'react';\nimport { Axis } from '../../types';\n\nexport class Line extends React.PureComponent<Axis.LineProps> {\n  render() {\n    const {\n      x1, x2, y1, y2, ...restProps\n    } = this.props;\n    return (\n      <path\n        d={`M ${x1} ${y1} L ${x2} ${y2}`}\n        {...restProps}\n      />\n    );\n  }\n}\n", "import * as React from 'react';\nimport {\n  Plugin,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n  withComponents,\n  PluginComponents,\n  onSizeChangeFn,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport {\n  ARGUMENT_DOMAIN, getValueDomainName,\n  getRotatedPosition, isValidPosition,\n  LEFT, BOTTOM, getTickCoordinates, gridCoordinatesGetter, tickCoordinatesGetter,\n  Tick, Grid,\n} from '@devexpress/dx-chart-core';\nimport { RawAxisProps } from '../types';\nimport { Root } from '../templates/axis/root';\nimport { Label } from '../templates/axis/label';\nimport { Line } from '../templates/axis/line';\n\nimport { withPatchedProps } from '../utils';\n\nconst SVG_STYLE: React.CSSProperties = {\n  position: 'absolute', left: 0, top: 0, overflow: 'visible',\n};\n\nclass RawAxis extends React.PureComponent<RawAxisProps> {\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    tickComponent: 'Tick',\n    labelComponent: 'Label',\n    lineComponent: 'Line',\n    gridComponent: 'Grid',\n  };\n  static defaultProps: Partial<RawAxisProps> = {\n    tickSize: 5,\n    indentFromAxis: 10,\n  };\n\n  rootRef = React.createRef<HTMLDivElement>();\n  adjustedWidth = 0;\n  adjustedHeight = 0;\n\n  renderAxis(position: string) {\n    const {\n      scaleName,\n      tickSize,\n      tickFormat,\n      indentFromAxis,\n      showTicks,\n      showLine,\n      showLabels,\n      rootComponent: RootComponent,\n      tickComponent: TickComponent,\n      labelComponent: LabelComponent,\n      lineComponent: LineComponent,\n    } = this.props;\n    const placeholder = `${position}-axis`;\n    const layoutName = `${placeholder}-${scaleName}`;\n    return (\n      <Template name={placeholder}>\n        <TemplatePlaceholder />\n        <TemplateConnector>\n          {({ scales, layouts, rotated }, { changeBBox }) => {\n            if (!isValidPosition(position!, scaleName!, rotated)) {\n              return null;\n            }\n            const scale = scales[scaleName!];\n            if (!scale) {\n              return null;\n            }\n            const { width, height } = layouts[layoutName] || { width: 0, height: 0 };\n            const paneSize = layouts.pane;\n\n            const { sides: [dx, dy], ticks } = getTickCoordinates({\n              callback: tickCoordinatesGetter,\n              scaleName: scaleName!,\n              position: position!,\n              tickSize: tickSize!,\n              tickFormat,\n              indentFromAxis: indentFromAxis!,\n              scale,\n              paneSize: [paneSize.width, paneSize.height],\n              rotated,\n            });\n\n            const handleSizeChange: onSizeChangeFn = (size) => {\n              // The callback is called when DOM is available -\n              // *rootRef.current* can be surely accessed.\n              const rect = this.rootRef.current!.getBoundingClientRect();\n              const rectSize = [dx ? rect.width : size.width, dy ? rect.height : size.height];\n\n              if (rectSize[0] === this.adjustedWidth && rectSize[1] === this.adjustedHeight) {\n                return;\n              }\n              // *setState* is not used because it would cause excessive Plugin rerenders.\n              // Template rerender is provided by *changeBBox* invocation.\n              this.adjustedWidth = rectSize[0];\n              this.adjustedHeight = rectSize[1];\n              changeBBox({ placeholder: layoutName, bBox: size });\n            };\n\n            return (\n              <div\n                style={{\n                  position: 'relative',\n                  width: (dy * width) || undefined,\n                  height: (dx * height) || undefined,\n                  flexGrow: dx || undefined,\n                }}\n                ref={this.rootRef}\n              >\n                <svg\n                  width={this.adjustedWidth}\n                  height={this.adjustedHeight}\n                  style={SVG_STYLE}\n                >\n                  <RootComponent\n                    dx={dx}\n                    dy={dy}\n                    onSizeChange={handleSizeChange}\n                  >\n                    {showTicks && (ticks as Tick[]).map(({\n                      x1, x2, y1, y2, key,\n                    }) => (\n                      <TickComponent\n                        key={key}\n                        x1={x1}\n                        x2={x2}\n                        y1={y1}\n                        y2={y2}\n                      />\n                    ))}\n                    {showLine && (\n                      <LineComponent\n                        x1={0}\n                        x2={dx * paneSize.width}\n                        y1={0}\n                        y2={dy * paneSize.height}\n                      />\n                    )}\n                    {showLabels && (ticks as Tick[]).map(({\n                      text,\n                      xText,\n                      yText,\n                      dy: delta,\n                      textAnchor,\n                      key,\n                    }) => (\n                      <LabelComponent\n                        key={key}\n                        text={text}\n                        x={xText}\n                        y={yText}\n                        dy={delta}\n                        textAnchor={textAnchor}\n                      />\n                    ))}\n                  </RootComponent>\n                </svg>\n              </div>\n            );\n          }}\n        </TemplateConnector>\n      </Template>\n    );\n  }\n\n  renderGrid() {\n    const {\n      scaleName,\n      showGrid,\n      gridComponent: GridComponent,\n    } = this.props;\n    return (\n      <Template name=\"series\">\n        <TemplatePlaceholder />\n        <TemplateConnector>\n          {({ scales, layouts, rotated }) => {\n            const scale = scales[scaleName!];\n            if (!scale || !showGrid) {\n              return null;\n            }\n            const { width, height } = layouts.pane;\n            const { ticks, sides: [dx, dy] } = getTickCoordinates({\n              callback: gridCoordinatesGetter,\n              scaleName: scaleName!,\n              scale,\n              paneSize: [width, height],\n              rotated,\n            });\n            return ((\n              <React.Fragment>\n                {(ticks as Grid[]).map(({\n                  key, x1, y1,\n                }) => (\n                  <GridComponent\n                    key={key}\n                    x1={x1}\n                    x2={x1 + dy * width}\n                    y1={y1}\n                    y2={y1 + dx * height}\n                  />\n                ))}\n              </React.Fragment>\n            ));\n          }}\n        </TemplateConnector>\n      </Template>\n    );\n  }\n\n  render() {\n    const { position } = this.props;\n    const rotatedPosition = getRotatedPosition(position!);\n    // We have to occupy two placeholders (one for default case and one for rotated case) because\n    // by now it is unknown if Chart is rotated or not.\n    // Only one of templates is rendered then, the other is discarded.\n    return (\n      <Plugin name=\"Axis\">\n        <Getter name=\"axesExist\" value />\n        {this.renderAxis(position!)}\n        {this.renderAxis(rotatedPosition)}\n        {this.renderGrid()}\n      </Plugin>\n    );\n  }\n}\n/** @internal */\nexport const Axis: React.ComponentType<RawAxisProps> = withComponents({\n  Label,\n  Line,\n  Root,\n  Tick: Line,\n  Grid: Line,\n})(RawAxis);\n\n// TODO: It is not axis who defines that argument is HORIZONTAL and value is VERTICAL.\n\n// TODO: *position* should not be *orientation* dependent -\n// if HORIZONTAL then TOP or BOTTOM, otherwise LEFT of RIGHT.\n// It should be domain dependent - something like AT_DOMAIN_START or AT_DOMAIN_END.\n\nexport const ArgumentAxis: React.ComponentType<RawAxisProps> = withPatchedProps(props => ({\n  position: BOTTOM,\n  showGrid: false,\n  showTicks: true,\n  showLine: true,\n  showLabels: true,\n  ...props,\n  scaleName: ARGUMENT_DOMAIN,\n}))(Axis);\n\nexport const ValueAxis: React.ComponentType<RawAxisProps> = withPatchedProps(props => ({\n  position: LEFT,\n  showGrid: true,\n  showTicks: false,\n  showLine: false,\n  showLabels: true,\n  ...props,\n  scaleName: getValueDomainName((props as RawAxisProps).scaleName),\n}))(Axis);\n", "import * as React from 'react';\nimport {\n  Plugin,\n  Getter,\n  TemplateConnector,\n  Template,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { getParameters, processHandleTooltip, createReference } from '@devexpress/dx-chart-core';\nimport { TooltipProps, TooltipState, GetPointerMoveHandlersFn } from '../types';\n\nconst dependencies = [{ name: 'EventTracker', optional: true }];\n\nclass TooltipBase extends React.PureComponent<TooltipProps, TooltipState> {\n  static components: PluginComponents = {\n    overlayComponent: 'Overlay',\n    contentComponent: 'Content',\n    arrowComponent: 'Arrow',\n    sheetComponent: 'Sheet',\n  };\n  getPointerMoveHandlers: GetPointerMoveHandlersFn;\n\n  constructor(props: TooltipProps) {\n    super(props);\n    this.state = {\n      target: props.targetItem || props.defaultTargetItem,\n    };\n    const handlePointerMove = this.handlePointerMove.bind(this);\n    this.getPointerMoveHandlers = ({ pointerMoveHandlers = [] }) => [\n      ...pointerMoveHandlers, handlePointerMove,\n    ];\n  }\n\n  static getDerivedStateFromProps(props: TooltipProps, state: TooltipState): TooltipState {\n    return { target: props.targetItem !== undefined ? props.targetItem : state.target };\n  }\n\n  handlePointerMove({ targets }) {\n    this.setState((\n      { target: currentTarget },\n      { onTargetItemChange },\n    ) => {\n      const target = processHandleTooltip(targets, currentTarget!, onTargetItemChange);\n      if (target === undefined) {\n        return null;\n      }\n      return { target: target! };\n    });\n  }\n\n  render() {\n    const {\n      overlayComponent: OverlayComponent,\n      contentComponent: ContentComponent,\n      sheetComponent: SheetComponent,\n      arrowComponent,\n    } = this.props;\n    const { target } = this.state;\n    return (\n      <Plugin name=\"Tooltip\" dependencies={dependencies}>\n        <Getter name=\"pointerMoveHandlers\" computed={this.getPointerMoveHandlers} />\n        <Template name=\"series\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ series, rootRef, rotated }) => {\n              if (!target) {\n                return null;\n              }\n              const { text, element } = getParameters(series, target);\n              return (\n                <OverlayComponent\n                  key={`${target.series}${target.point}`}\n                  target={createReference(element, rootRef)}\n                  rotated={rotated}\n                  arrowComponent={arrowComponent}\n                >\n                  <SheetComponent>\n                    <ContentComponent text={text} targetItem={target} />\n                  </SheetComponent>\n                </OverlayComponent>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const Tooltip: React.ComponentType<TooltipProps> = TooltipBase;\n", "import * as React from 'react';\n\nimport { ZoomAndPan } from '../types';\n\nexport class DragBox extends React.PureComponent<ZoomAndPan.DragBoxProps> {\n  render() {\n    const {\n      rect, ...restProps\n    } = this.props;\n    return (\n      <rect\n        x={rect.x}\n        y={rect.y}\n        width={rect.width}\n        height={rect.height}\n        {...restProps}\n      />\n    );\n  }\n}\n", "import * as React from 'react';\nimport {\n  Plugin,\n  TemplatePlaceholder,\n  Template,\n  TemplateConnector,\n  Getters,\n  Getter,\n  PluginComponents,\n  withComponents,\n  Size,\n  clearSelection,\n} from '@devexpress/dx-react-core';\nimport { DragBox } from '../templates/drag-box';\nimport {\n  adjustLayout, getViewport, isKeyPressed, getOffset, getDeltaForTouches, getRect,\n  ScalesCache, getWheelDelta, getEventCoords, isMultiTouch, attachEvents, detachEvents,\n  setCursorType,\n} from '@devexpress/dx-chart-core';\nimport {\n  ZoomAndPanProps, ZoomAndPanState, Location, NumberArray, ZoomPanProviderProps, EventHandlers,\n} from '../types';\n\nconst events = {\n  wheel: { func: 'onWheel' },\n  mousedown: {\n    func: 'onStart',\n    extraEvents: ['mousemove', 'mouseup'],\n  },\n  touchstart: {\n    func: 'onStart',\n    extraEvents: ['touchmove', 'touchend'],\n  },\n};\n\nclass ZoomPanProvider extends React.PureComponent<ZoomPanProviderProps> {\n  handlers!: EventHandlers;\n  svgElement!: SVGElement;\n  windowHandlers!: { [key: string]: EventHandlers};\n\n  componentDidMount() {\n    this.svgElement = this.props.rootRef.current!;\n    setCursorType(this.svgElement);\n\n    this.windowHandlers = Object.keys(events).reduce((prev, key) => {\n      const extraEvents = events[key].extraEvents;\n      if (extraEvents) {\n        return {\n          ...prev,\n          [key]: {\n            [extraEvents[0]]: (event: any) => {\n              this.props.onMove(event);\n            },\n            [extraEvents[1]]: (event: any) => {\n              this.props.onEnd(event);\n              setCursorType(this.svgElement);\n              detachEvents(window, this.windowHandlers[key]);\n            },\n          },\n        };\n      }\n      return prev;\n    }, {});\n\n    this.handlers = Object.keys(events).reduce((prev, key) => {\n      return {\n        ...prev,\n        [key]: (e: any) => {\n          this.props[events[key].func](e);\n          if (events[key].extraEvents) {\n            attachEvents(window, this.windowHandlers[key]);\n          }\n        },\n      };\n    }, {});\n    attachEvents(this.svgElement, this.handlers);\n  }\n\n  componentWillUnmount() {\n    detachEvents(this.svgElement, this.handlers);\n    Object.keys(this.windowHandlers).forEach((el) => {\n      detachEvents(window, this.windowHandlers[el]);\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nclass ZoomAndPanBase extends React.PureComponent<ZoomAndPanProps, ZoomAndPanState> {\n  static components: PluginComponents = {\n    dragBoxComponent: 'DragBox',\n  };\n  static defaultProps: Partial<ZoomAndPanProps> = {\n    interactionWithValues: 'none',\n    interactionWithArguments: 'both',\n    zoomRegionKey: 'shift',\n  };\n\n  multiTouchDelta: number | null = null;\n  lastCoordinates: Location | null = null;\n  rectOrigin: Location | null = null;\n  offset: NumberArray = [0, 0];\n\n  constructor(props: ZoomAndPanProps) {\n    super(props);\n\n    this.state = {\n      viewport: props.viewport || props.defaultViewport,\n      rectBox: null,\n    };\n  }\n\n  static getDerivedStateFromProps(props: ZoomAndPanProps, state: ZoomAndPanState): ZoomAndPanState {\n    return {\n      viewport: props.viewport !== undefined ? props.viewport : state.viewport,\n    };\n  }\n\n  handleStart(zoomRegionKey: string, e: any) {\n    // Default browser behavior is prevented in \"move\" handler. It is not enough for IPad.\n    // Calling \"preventDefault\" here (on \"start\") works for IPad.\n    // Going further, since we have to call \"preventDefault\" on \"start\" we may try to get rid of\n    // \"preventDefault\" on move.\n    // TODO: Try to remove \"preventDefault\" from \"move\" handler.\n    e.preventDefault();\n    this.offset = getOffset(e.currentTarget);\n    const coords = getEventCoords(e, this.offset);\n      // Rectangle mode should be canceled if \"zoomRegionKey\" is released during mouse movevent or\n      // not pressed when mouse is up. To do it access to \"event\" object is required in\n      // \"handleMove\" and \"handleEnd\".\n      // TODO: Provide rectangle mode canceling.\n    if (isKeyPressed(e, zoomRegionKey)) {\n      this.rectOrigin = coords;\n    } else {\n      setCursorType(e.currentTarget, 'grabbing');\n    }\n    if (isMultiTouch(e)) {\n      this.multiTouchDelta = getDeltaForTouches(e.touches).delta;\n    }\n    this.lastCoordinates = coords;\n  }\n\n  handleMove(scales: ScalesCache, rotated: boolean, e: any, pane: Size) {\n    e.preventDefault();\n    clearSelection();\n    if (isMultiTouch(e)) {\n      const current = getDeltaForTouches(e.touches);\n      this.zoom(scales, rotated, current.delta - this.multiTouchDelta!, current.center);\n      this.multiTouchDelta = current.delta;\n    } else {\n      this.scroll(scales, rotated, e, pane);\n    }\n  }\n\n  scroll(scales: ScalesCache, rotated: boolean, e: any, pane: Size) {\n    const coords = getEventCoords(e, this.offset);\n    const deltaX = coords[0] - this.lastCoordinates![0];\n    const deltaY = coords[1] - this.lastCoordinates![1];\n    this.lastCoordinates = coords;\n    this.setState((\n      { viewport }, { onViewportChange, interactionWithArguments, interactionWithValues },\n    ) => {\n      if (this.rectOrigin) {\n        return {\n          rectBox: getRect(\n            rotated,\n            interactionWithArguments!,\n            interactionWithValues!,\n            this.rectOrigin,\n            coords,\n            pane,\n          ),\n        };\n      }\n      return getViewport(\n        scales, rotated, [interactionWithArguments!, interactionWithValues!], 'pan',\n        [-deltaX, -deltaY], null, null, viewport, onViewportChange,\n      );\n    });\n  }\n\n  handleEnd(scales: ScalesCache, rotated: boolean) {\n    this.lastCoordinates = null;\n    this.multiTouchDelta = null;\n    if (this.rectOrigin) {\n      this.setState((\n        { viewport, rectBox },\n        { onViewportChange, interactionWithArguments, interactionWithValues },\n      ) => {\n        if (rectBox === null) return {};\n\n        this.rectOrigin = null;\n        return {\n          rectBox: null,\n          ...getViewport(\n            scales, rotated, [interactionWithArguments!, interactionWithValues!], 'zoom',\n            null,\n            null,\n            [\n              [rectBox!.x, rectBox!.x + rectBox!.width],\n              [rectBox!.y, rectBox!.y + rectBox!.height],\n            ],\n            viewport, onViewportChange,\n          ),\n        };\n      });\n    }\n  }\n\n  zoom(scales: ScalesCache, rotated: boolean, delta: number, anchors: Location) {\n    this.setState((\n      { viewport }, { onViewportChange, interactionWithArguments, interactionWithValues },\n    ) => {\n      return getViewport(\n        scales, rotated, [interactionWithArguments!, interactionWithValues!], 'zoom',\n        [delta, delta], anchors, null, viewport, onViewportChange,\n      );\n    });\n  }\n\n  handleZoom(scales: ScalesCache, rotated: boolean, e: any) {\n    e.preventDefault();\n    const center = getEventCoords(e, getOffset(e.currentTarget));\n    this.zoom(scales, rotated, getWheelDelta(e), center);\n  }\n\n  render() {\n    const { viewport, rectBox } = this.state;\n    const {\n      dragBoxComponent: DragBoxComponent,\n      zoomRegionKey,\n     } = this.props;\n    const getAdjustedLayout = ({\n      domains,\n      ranges,\n    }: Getters) => adjustLayout(domains, ranges, viewport);\n    return (\n      <Plugin name=\"zoomAndPan\">\n      <Getter name=\"ranges\" computed={getAdjustedLayout} />\n        <Template name=\"root\">\n        <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ scales, rotated, rootRef, layouts }) => (\n                <ZoomPanProvider\n                  rootRef={rootRef}\n                  onWheel={e => this.handleZoom(scales, rotated, e)}\n                  onStart={e => this.handleStart(zoomRegionKey!, e)}\n                  onMove={e => this.handleMove(scales, rotated, e, layouts.pane)}\n                  onEnd={e => this.handleEnd(scales, rotated)}\n                />\n              )}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"series\">\n          <TemplatePlaceholder />\n          {rectBox ? (\n              <DragBoxComponent\n                rect={rectBox!}\n              />\n          ) : null}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const ZoomAndPan: React.ComponentType<\n  ZoomAndPanProps\n> =  withComponents({ DragBox })(ZoomAndPanBase);\n", "import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  Getter,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { buildEventHandlers } from '@devexpress/dx-chart-core';\nimport { EventTrackerProps, HandlerFn, EventHandlers } from '../types';\n\nconst wrapToList = (arg?: HandlerFn) => (arg ? [arg] : []);\n\nconst EVENT_NAME_TO_REACT_MAP = {\n  click: 'onClick',\n  mousemove: 'onMouseMove',\n  mouseleave: 'onMouseLeave',\n  touchstart: 'onTouchStart',\n};\n\n// Translates event names from common space to React.\n// https://developer.mozilla.org/en-US/docs/Web/Events\nconst translateEventNames = (handlers: EventHandlers) => {\n  const result = {};\n  Object.entries(handlers).forEach(([name, handler]) => {\n    result[EVENT_NAME_TO_REACT_MAP[name]] = handler;\n  });\n  return result;\n};\n\nclass EventTrackerBase extends React.PureComponent<EventTrackerProps> {\n  render() {\n    const { onClick, onPointerMove } = this.props;\n    return (\n      <Plugin name=\"EventTracker\">\n        <Getter name=\"clickHandlers\" value={wrapToList(onClick)} />\n        <Getter name=\"pointerMoveHandlers\" value={wrapToList(onPointerMove)} />\n        <Template name=\"canvas\">\n          {params => (\n            <TemplateConnector>\n              {({ series, clickHandlers, pointerMoveHandlers }) => {\n                const handlers = buildEventHandlers(series, { clickHandlers, pointerMoveHandlers });\n                // TODO: Conflicts are still possible. Improve this code.\n                return (\n                  <TemplatePlaceholder params={{ ...params, ...translateEventNames(handlers) }} />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const EventTracker: React.ComponentType<EventTrackerProps> = EventTrackerBase;\n", "import * as React from 'react';\nimport {\n  Plugin,\n  Getter,\n  Getters,\n} from '@devexpress/dx-react-core';\nimport {\n  changeSeriesState, processPointerMove, HOVERED, TargetData,\n} from '@devexpress/dx-chart-core';\nimport { HoverStateProps, HoverStateState, GetPointerMoveHandlersFn } from '../types';\n\nconst dependencies = [{ name: 'EventTracker', optional: true }];\n\nclass HoverStateBase extends React.PureComponent<HoverStateProps, HoverStateState> {\n  getPointerMoveHandlers: GetPointerMoveHandlersFn;\n\n  constructor(props: HoverStateProps) {\n    super(props);\n    this.state = {\n      hover: props.hover || props.defaultHover,\n    };\n    const handlePointerMove = this.handlePointerMove.bind(this);\n    this.getPointerMoveHandlers = ({ pointerMoveHandlers = [] }) => [\n      ...pointerMoveHandlers, handlePointerMove,\n    ];\n  }\n\n  static getDerivedStateFromProps(props: HoverStateProps, state: HoverStateState): HoverStateState {\n    return { hover: props.hover !== undefined ? props.hover : state.hover };\n  }\n\n  handlePointerMove({ targets }: TargetData) {\n    this.setState(({ hover: currentTarget }, { onHoverChange }) => {\n      const hover = processPointerMove(targets, currentTarget!, onHoverChange);\n      return hover !== undefined ? { hover: hover! } : null;\n    });\n  }\n\n  render() {\n    const { hover } = this.state;\n    // Function has to be recreated every time as there is no other way\n    // to notify that \"series\" is updated.\n    const targets = hover ? [hover] : [];\n    const getSeries = ({ series }: Getters) => changeSeriesState(series, targets, HOVERED);\n    return (\n      <Plugin name=\"HoverState\" dependencies={dependencies}>\n        <Getter name=\"pointerMoveHandlers\" computed={this.getPointerMoveHandlers} />\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n\nexport const HoverState: React.ComponentType<HoverStateProps> = HoverStateBase;\n", "import * as React from 'react';\nimport {\n  Plugin,\n  Getter,\n  Getters,\n} from '@devexpress/dx-react-core';\nimport { changeSeriesState, SELECTED } from '@devexpress/dx-chart-core';\nimport { SelectionStateProps } from '../types';\n\nclass SelectionStateBase extends React.PureComponent<SelectionStateProps> {\n  render() {\n    const { selection } = this.props;\n    const targets = selection || [];\n    const getSeries = ({ series }: Getters) => changeSeriesState(series, targets, SELECTED);\n    return (\n      <Plugin name=\"SelectionState\">\n        <Getter name=\"series\" computed={getSeries} />\n      </Plugin>\n    );\n  }\n}\n\nexport const SelectionState: React.ComponentType<SelectionStateProps> = SelectionStateBase;\n"],
  "mappings": "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",
  "names": ["x", "y", "x", "epsilon", "pi", "tau", "x", "epsilon", "tau", "pi", "a", "x", "y", "x", "y", "k", "a", "tau", "k", "sum", "i", "j", "a", "pi", "tau", "pi", "tau", "x", "y", "x", "y", "x", "y", "x", "y", "beta", "point", "x", "y", "custom", "tension", "x", "y", "point", "custom", "tension", "x", "y", "point", "custom", "tension", "point", "x", "y", "x2", "y2", "epsilon", "a", "custom", "alpha", "x", "y", "point", "custom", "alpha", "x", "y", "point", "custom", "alpha", "x", "y", "x", "point", "y", "x", "y", "a", "x", "y", "series", "none_default", "series", "none_default", "series", "d3ScaleLinear", "d3ScaleBand", "linear", "band", "a", "_a", "sign", "point", "series", "_b", "x", "y", "scaleBand", "getStartVal", "getRect", "path", "_a", "React.createElement", "series", "ChartCore", "React.PureComponent", "AxesLayout", "React.createRef", "SpaceFillingRects", "placeholders", "ControllerComponent", "ClipPath", "UpdatableSizer", "__assign", "PaneLayout", "_b", "LayoutManager", "Root", "__rest", "PaletteBase", "scheme", "Label", "RawChart", "Marker", "RawLegend", "TitleBase", "Component", "getSeries", "getDomains", "Path", "Scale", "StackBase", "none_default", "AnimationBase", "ComponentWithStates", "React.isValidElement", "Pattern", "React.Fragment", "isValuesChanged", "getDelay", "ComponentWithAnimation", "RawArea", "path", "PointCollection", "Point", "point", "RawBar", "_a$1", "RawPath", "Line", "RawSlice", "RawPoint", "x", "y", "Spline", "getOffset", "SVG_STYLE", "RawAxis", "__read", "TooltipBase", "__spreadArray", "DragBox", "ZoomPanProvider", "ZoomAndPanBase", "EventTrackerBase", "dependencies", "HoverStateBase", "SelectionStateBase"]
}
