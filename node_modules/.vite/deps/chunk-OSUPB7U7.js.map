{
  "version": 3,
  "sources": ["../../@devexpress/dx-core/src/utils.ts", "../../@devexpress/dx-core/src/plugin-host.ts", "../../@devexpress/dx-core/src/event-emitter.ts", "../../@devexpress/dx-core/src/shallow-equal.ts", "../../@devexpress/dx-core/src/memoize.ts", "../../@devexpress/dx-core/src/easings.ts", "../../@devexpress/dx-core/src/messages-formatter.ts", "../../@devexpress/dx-react-core/src/plugin-based/contexts.ts", "../../@devexpress/dx-react-core/src/plugin-based/plugin-indexer.tsx", "../../@devexpress/dx-react-core/src/plugin-based/constants.ts", "../../@devexpress/dx-react-core/src/utils/with-props-from-context.tsx", "../../@devexpress/dx-react-core/src/plugin-based/plugin.tsx", "../../@devexpress/dx-react-core/src/plugin-based/template-placeholder.tsx", "../../@devexpress/dx-react-core/src/plugin-based/plugin-host.tsx", "../../@devexpress/dx-react-core/src/plugin-based/helpers.ts", "../../@devexpress/dx-react-core/src/plugin-based/action.tsx", "../../@devexpress/dx-react-core/src/plugin-based/getter.tsx", "../../@devexpress/dx-react-core/src/plugin-based/template.tsx", "../../@devexpress/dx-react-core/src/plugin-based/template-connector.tsx", "../../@devexpress/dx-react-core/src/draggable/touch-strategy.ts", "../../@devexpress/dx-react-core/src/draggable/gesture-cover.ts", "../../@devexpress/dx-react-core/src/draggable/selection-utils.ts", "../../@devexpress/dx-react-core/src/draggable/mouse-strategy.ts", "../../@devexpress/dx-react-core/src/draggable/shared-events.ts", "../../@devexpress/dx-react-core/src/ref-holder.tsx", "../../@devexpress/dx-react-core/src/draggable.tsx", "../../@devexpress/dx-react-core/src/drag-drop/context.ts", "../../@devexpress/dx-react-core/src/drag-drop/provider.tsx", "../../@devexpress/dx-react-core/src/drag-drop/source.tsx", "../../@devexpress/dx-react-core/src/drag-drop/target.tsx", "../../@devexpress/dx-react-core/src/sizer.tsx", "../../@devexpress/dx-react-core/src/utils/connect-props.tsx", "../../@devexpress/dx-react-core/src/utils/state-helper.ts", "../../@devexpress/dx-react-core/src/utils/with-components.tsx", "../../@devexpress/dx-react-core/src/utils/ref-type.ts"],
  "sourcesContent": ["const DELAY = 200;\n\nconst compare = (a, b) => {\n  const aPosition = a.position();\n  const bPosition = b.position();\n  for (let i = 0; i < Math.min(aPosition.length, bPosition.length); i += 1) {\n    if (aPosition[i] < bPosition[i]) return -1;\n    if (aPosition[i] > bPosition[i]) return 1;\n  }\n  return aPosition.length - bPosition.length;\n};\n\n/** @internal */\nexport const insertPlugin = (array, newItem) => {\n  const result = array.slice();\n  const nextItemIndex = array.findIndex(item => compare(newItem, item) <= 0);\n  const targetIndex = nextItemIndex < 0 ? array.length : nextItemIndex;\n  const alreadyExists = (targetIndex >= 0 && targetIndex < array.length)\n    && compare(newItem, array[targetIndex]) === 0;\n  let deletedItems = 0;\n  if (alreadyExists) {\n    deletedItems = 1;\n    const targetItemPosition = result[targetIndex].position();\n    if (targetItemPosition.length > 1) {\n      for (let i = targetIndex + 1; i < result.length; i += 1) {\n        const itemPosition = result[i].position();\n        if (targetItemPosition.length === itemPosition.length &&\n          targetItemPosition[targetItemPosition.length - 2] ===\n          itemPosition[itemPosition.length - 2]) {\n          deletedItems += 1;\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  result.splice(targetIndex, deletedItems, newItem);\n  return result;\n};\n\n/** @internal */\nexport const removePlugin = (array, item) => {\n  const itemIndex = array.indexOf(item);\n  return itemIndex >= 0 ? [...array.slice(0, itemIndex), ...array.slice(itemIndex + 1)] : array;\n};\n\n/** @internal */\nexport const createClickHandlers = (click?, dblClick?) => {\n  let timeoutId;\n  const events: any = {};\n  if (click) {\n    events.onClick = (e) => {\n      if (!timeoutId) {\n        timeoutId = setTimeout(() => {\n          clearTimeout(timeoutId);\n          click(e);\n        }, DELAY);\n      }\n    };\n  }\n  if (dblClick) {\n    events.onDoubleClick = (e) => {\n      clearTimeout(timeoutId);\n      dblClick(e);\n    };\n  }\n  return events;\n};\n\n/** @internal */\nexport const slice = arr => Array.prototype.slice.call(arr); // slice can be renamed to copy as well\n\n/** @internal */\nexport const hasWindow = () => typeof window !== 'undefined';\n", "import { insertPlugin, removePlugin } from './utils';\nimport { Getters } from '@devexpress/dx-react-core';\n\nconst getDependencyError = (\n  pluginName, dependencyName,\n  ) => new Error(\n    `The '${pluginName}' plugin requires '${dependencyName}' to be defined before it.`,\n  );\n\n/** @internal */\nexport type PluginPositionFn = () => number[];\n\nexport interface IDependency { name: string; optional?: boolean; }\n\n/** @internal */\nexport type InnerPlugin = {\n  position: PluginPositionFn;\n  name?: string;\n  dependencies?: IDependency[];\n} & Getters;\n\n/** @internal */\nexport class PluginHost {\n  private plugins: InnerPlugin[];\n  private subscriptions: Set<any>;\n  private gettersCache: object = {};\n  private knownKeysCache: object = {};\n  private validationRequired: boolean = true;\n\n  constructor() {\n    this.plugins = [];\n    this.subscriptions = new Set();\n  }\n\n  ensureDependencies() {\n    const defined: Set<string> = new Set();\n    const knownOptionals: Map<string, string> = new Map();\n    this.plugins\n      .filter(plugin => plugin.container)\n      .forEach((plugin) => {\n        const pluginName = plugin.name || '';\n        if (knownOptionals.has(pluginName)) {\n          throw (getDependencyError(knownOptionals.get(pluginName), pluginName));\n        }\n\n        (plugin.dependencies || [])\n          .forEach((dependency) => {\n            if (defined.has(dependency.name)) return;\n            if (dependency.optional) {\n              if (!knownOptionals.has(dependency.name)) {\n                knownOptionals.set(dependency.name, pluginName);\n              }\n              return;\n            }\n            throw (getDependencyError(pluginName, dependency.name));\n          });\n\n        defined.add(pluginName);\n      });\n  }\n\n  registerPlugin(plugin) {\n    this.plugins = insertPlugin(this.plugins, plugin);\n    this.cleanPluginsCache();\n  }\n\n  unregisterPlugin(plugin) {\n    this.plugins = removePlugin(this.plugins, plugin);\n    this.cleanPluginsCache();\n  }\n\n  knownKeys(postfix) {\n    if (!this.knownKeysCache[postfix]) {\n      this.knownKeysCache[postfix] = Array.from(this.plugins\n        .map(plugin => Object.keys(plugin))\n        .map(keys => keys.filter(key => key.endsWith(postfix))[0])\n        .filter(key => !!key)\n        .reduce((acc, key) => acc.add(key), new Set<string>()))\n        .map(key => key.replace(postfix, ''));\n    }\n    return this.knownKeysCache[postfix];\n  }\n\n  collect(key, upTo?) {\n    if (this.validationRequired) {\n      this.ensureDependencies();\n      this.validationRequired = false;\n    }\n\n    let res = this.gettersCache[key];\n    if (!res) {\n      // Add cache for original plugin indexes\n      const indexCache = this.plugins\n        .map((plugin, index) => ({ key: plugin[key], index }))\n        .filter(plugin => !!plugin.key);\n      this.gettersCache[`${key}_i`] = indexCache;\n      res = indexCache.map(item => item.key);\n      this.gettersCache[key] = res;\n    }\n\n    if (!upTo) return res;\n\n    const upToIndex = this.plugins.indexOf(upTo);\n\n    // Try to get a result from upToIndex cache first.\n    const upToIndexKey = key + upToIndex;\n    let upToRes = this.gettersCache[upToIndexKey];\n\n    if (!upToRes) {\n      const indexCache = this.gettersCache[`${key}_i`];\n      upToRes = this.gettersCache[key]\n        .filter((getter, index) => indexCache[index].index < upToIndex);\n      this.gettersCache[upToIndexKey] = upToRes;\n    }\n\n    return upToRes;\n  }\n\n  get(key, upTo) {\n    const plugins = this.collect(key, upTo);\n\n    if (!plugins.length) return undefined;\n\n    let result;\n    // slice creates shallow copy, when do it many times, it costs about 5%\n    plugins.forEach((plugin) => {\n      result = plugin(result);\n    });\n    return result;\n  }\n\n  registerSubscription(subscription) {\n    this.subscriptions.add(subscription);\n  }\n\n  unregisterSubscription(subscription) {\n    this.subscriptions.delete(subscription);\n  }\n\n  broadcast(event, message?: any) {\n    this.subscriptions.forEach(subscription => subscription[event] && subscription[event](message));\n  }\n\n  private cleanPluginsCache() {\n    this.validationRequired = true;\n    this.gettersCache = {};\n    this.knownKeysCache = {};\n  }\n}\n", "type Handler = (e: object) => void;\n\n/** @internal */\nexport class EventEmitter {\n  private handlers: Handler[];\n\n  constructor() {\n    this.handlers = [];\n  }\n\n  emit(e) {\n    this.handlers.forEach(handler => handler(e));\n  }\n\n  subscribe(handler) {\n    this.handlers.push(handler);\n  }\n\n  unsubscribe(handler) {\n    this.handlers.splice(this.handlers.indexOf(handler), 1);\n  }\n}\n", "/** @internal */\nexport const shallowEqual = (objA, objB) => {\n  if (objA === objB) {\n    return true;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  const hasOwn = Object.prototype.hasOwnProperty;\n  // tslint:disable-next-line: prefer-for-of\n  for (let i = 0; i < keysA.length; i += 1) {\n    if (!hasOwn.call(objB, keysA[i])\n        || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n\n    const valA = objA[keysA[i]];\n    const valB = objB[keysA[i]];\n\n    if (valA !== valB) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/** @internal */\nexport const argumentsShallowEqual = (prev, next) => {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  for (let i = 0; i < prev.length; i += 1) {\n    if (prev[i] !== next[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n", "import { argumentsShallowEqual } from './shallow-equal';\n\n/** @internal */\nexport const memoize = (func) => {\n  let lastArgs: any = null;\n  let lastResult: ReturnType<typeof func> = null;\n  return (...args) => {\n    if (lastArgs === null || !argumentsShallowEqual(lastArgs, args)) {\n      lastResult = func(...args);\n    }\n    lastArgs = args;\n    return lastResult;\n  };\n};\n", "/** @internal */\nexport const easeInQuad = t => t * t;\n/** @internal */\nexport const easeOutQuad = t => t * (2 - t);\n/** @internal */\nexport const easeInOutQuad = t => (t < 0.5\n  ? 2 * t * t\n  : -1 + ((4 - (2 * t)) * t));\n\n/** @internal */\nexport const easeInCubic = t => t * t * t;\n/** @internal */\nexport const easeOutCubic = t => ((t - 1) * (t - 1) * (t - 1)) + 1;\n/** @internal */\nexport const easeInOutCubic = t => (t < 0.5\n  ? 4 * t * t * t\n  : ((t - 1) * ((2 * t) - 2) * ((2 * t) - 2)) + 1);\n\n/** @internal */\nexport const easeInQuart = t => t * t * t * t;\n/** @internal */\nexport const easeOutQuart = t => 1 - ((t - 1) * (t - 1) * (t - 1) * (t - 1));\n/** @internal */\nexport const easeInOutQuart = t => (t < 0.5\n  ? 8 * t * t * t * t\n  : 1 - (8 * (t - 1) * (t - 1) * (t - 1) * (t - 1)));\n\n/** @internal */\nexport const easeInQuint = t => t * t * t * t * t;\n/** @internal */\nexport const easeOutQuint = t => 1 + ((t - 1) * (t - 1) * (t - 1) * (t - 1) * (t - 1));\n/** @internal */\nexport const easeInOutQuint = t => (t < 0.5\n  ? 16 * t * t * t * t * t\n  : 1 + (16 * (t - 1) * (t - 1) * (t - 1) * (t - 1) * (t - 1)));\n", "import { GetMessagesFormatterFn } from './types';\n\nconst processPattern = (pattern, params) => Object.keys(params).reduce(\n  (msg, key) => msg.replace(`{${key}}`, params[key]),\n  pattern,\n);\n\n/** @internal */\nexport const getMessagesFormatter: GetMessagesFormatterFn = messages => (key, params?) => {\n  const message = messages[key];\n\n  if (typeof message === 'function') {\n    return message(params);\n  }\n  if (params) {\n    return processPattern(message, params);\n  }\n  return message ?? '';\n};\n", "import * as React from 'react';\nimport { PluginHost, PluginPositionFn } from '@devexpress/dx-core';\n\n/** @internal */\nexport interface TemplateHostInterface {\n  params(...args): any;\n  templates(...args): any;\n}\n\n/** @internal */\nexport const PluginHostContext = React.createContext<PluginHost | null>(null);\n/** @internal */\nexport const PositionContext = React.createContext<PluginPositionFn>(() => []);\n/** @internal */\nexport const TemplateHostContext = React.createContext<TemplateHostInterface | null>(null);\n", "import * as React from 'react';\nimport { PluginPositionFn } from '@devexpress/dx-core';\nimport { PositionContext } from './contexts';\n\ntype MemoizedPluginPositionFn =\n  (index: number, positionContext: PluginPositionFn) => PluginPositionFn;\n\ntype PluginIndexerProps = {\n  children: React.ReactNode;\n};\n\n/** @internal */\nexport class PluginIndexer extends React.PureComponent<PluginIndexerProps> {\n  indexes: { [index: number]: PluginPositionFn } = {};\n  memoize: MemoizedPluginPositionFn = (index, positionContext) => {\n    if (this.indexes[index]) return this.indexes[index];\n\n    const fn: PluginPositionFn = () => {\n      const calculatedPosition = positionContext();\n      return [...calculatedPosition, index];\n    };\n    this.indexes[index] = fn;\n\n    return fn;\n  }\n  render() {\n    const { children } = this.props;\n    return (\n      <PositionContext.Consumer>\n        {positionContext => (\n          React.Children.map(children, (child: any, index: number) => {\n            if (!child || !child.type) return child;\n            const childPosition = this.memoize(index, positionContext);\n\n            return (\n              <PositionContext.Provider key={String(index)} value={childPosition}>\n                {child}\n              </PositionContext.Provider>\n            );\n          })\n        )}\n      </PositionContext.Consumer>\n    );\n  }\n}\n", "/** @internal */\nexport const PLUGIN_HOST_CONTEXT = 'dxcore_pluginHost_context';\n/** @internal */\nexport const POSITION_CONTEXT = 'dxcore_position_context';\n/** @internal */\nexport const TEMPLATE_HOST_CONTEXT = 'dxcore_templateHost_context';\n\n/** @internal */\nexport const RERENDER_TEMPLATE_EVENT = Symbol('rerenderTemplate');\n/** @internal */\nexport const RERENDER_TEMPLATE_SCOPE_EVENT = Symbol('rerenderTemplateScope');\n/** @internal */\nexport const UPDATE_CONNECTION_EVENT = Symbol('updateConnection');\n", "import * as React from 'react';\nimport { PluginHostContext, PositionContext } from '../plugin-based/contexts';\nimport { PLUGIN_HOST_CONTEXT, POSITION_CONTEXT } from '../plugin-based/constants';\n\n/** @internal */\nexport const withContext = (Context, name) => Component => props => (\n  <Context.Consumer>\n    {context => (\n      <Component {...props} {...{ [name]: context }} />\n    )}\n  </Context.Consumer>\n);\n\n/** @internal */\nexport const withHostAndPosition = Component => withContext(\n  PluginHostContext,\n  PLUGIN_HOST_CONTEXT,\n)(withContext(PositionContext, POSITION_CONTEXT)(Component));\n", "import * as React from 'react';\nimport { InnerPlugin, IDependency } from '@devexpress/dx-core';\nimport { PluginIndexer } from './plugin-indexer';\nimport { PLUGIN_HOST_CONTEXT, POSITION_CONTEXT } from './constants';\nimport { withHostAndPosition } from '../utils/with-props-from-context';\nimport { PluginContextProps } from './plugin-context-prop-types';\n\nexport interface PluginProps {\n  /** React elements that expose the plugin's state and actions and render the plugin's UI. */\n  children: React.ReactNode;\n  name?: string;\n  dependencies?: IDependency[];\n}\n\n/** @internal */\nexport class PluginBase extends React.PureComponent<PluginProps & PluginContextProps> {\n  plugin!: InnerPlugin;\n\n  componentDidMount() {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost, [POSITION_CONTEXT]: position } = this.props;\n    const { name, dependencies } = this.props;\n    this.plugin = {\n      position,\n      name,\n      dependencies,\n      container: true,\n    };\n    pluginHost.registerPlugin(this.plugin);\n    pluginHost.ensureDependencies();\n  }\n\n  componentDidUpdate() {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n    pluginHost.ensureDependencies();\n  }\n\n  componentWillUnmount() {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n    pluginHost.unregisterPlugin(this.plugin);\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <PluginIndexer>\n        {children}\n      </PluginIndexer>\n    );\n  }\n}\n\nexport const Plugin: React.ComponentType<PluginProps> = withHostAndPosition(PluginBase);\n", "import * as React from 'react';\nimport { shallowEqual } from '@devexpress/dx-core';\nimport {\n  PLUGIN_HOST_CONTEXT, RERENDER_TEMPLATE_EVENT,\n  TEMPLATE_HOST_CONTEXT, RERENDER_TEMPLATE_SCOPE_EVENT,\n} from './constants';\nimport { withContext } from '../utils/with-props-from-context';\nimport { PluginHostContext, TemplateHostContext, TemplateHostInterface } from './contexts';\nimport { PluginContextProps } from './plugin-context-prop-types';\nimport { TemplateBase } from './template';\n\nexport interface TemplatePlaceholderProps {\n  /** The name of a template to be rendered. */\n  name?: string;\n  /** An object passed to the related template. */\n  params?: object;\n  children?: (content) => any;\n}\ninterface TemplateHostContextProps {\n  [TEMPLATE_HOST_CONTEXT: string]: TemplateHostInterface;\n}\n\ntype Props = TemplatePlaceholderProps & PluginContextProps & TemplateHostContextProps;\n\nconst getRenderingData = (props: Props): { params?: object, templates: TemplateBase[] } => {\n  const { name, params } = props;\n  if (name) {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = props;\n    return {\n      params,\n      templates: pluginHost.collect(`${name}Template`)\n        .filter(template => template.predicate(params))\n        .reverse(),\n    };\n  }\n  const { [TEMPLATE_HOST_CONTEXT]: templateHost } = props;\n  return {\n    params: params || templateHost.params(),\n    templates: templateHost.templates(),\n  };\n};\n\nclass TemplatePlaceholderBase extends React.Component<Props> {\n  subscription = {\n    [RERENDER_TEMPLATE_EVENT]: (id: number) => {\n      if (this.template && this.template.id === id) {\n        this.forceUpdate();\n      }\n    },\n    [RERENDER_TEMPLATE_SCOPE_EVENT]: (name: string) => {\n      const { name: propsName } = this.props;\n      if (propsName === name) {\n        this.forceUpdate();\n      }\n    },\n  };\n  template: TemplateBase | null = null;\n  params?: object = {};\n\n  componentDidMount() {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n    pluginHost.registerSubscription(this.subscription);\n  }\n\n  shouldComponentUpdate(nextProps: Props) {\n    const { params, templates } = getRenderingData(nextProps);\n    const [template] = templates;\n    const { children } = this.props;\n\n    return children !== nextProps.children\n      || templates.length !== getRenderingData(this.props).templates.length\n      || this.template !== template\n      || !shallowEqual(this.params, params);\n  }\n\n  componentWillUnmount() {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n    pluginHost.unregisterSubscription(this.subscription);\n  }\n\n  render() {\n    const { params, templates } = getRenderingData(this.props);\n\n    this.params = params;\n    [this.template] = templates;\n    const restTemplates = templates.slice(1);\n\n    let content: ((...args) => any) | null = null;\n    if (this.template) {\n      const { children: templateContent } = this.template;\n\n      content = templateContent() || null;\n      if (content && typeof content === 'function') {\n        content = content(params);\n      }\n    }\n\n    const { children: templatePlaceholder } = this.props;\n    return (\n      <TemplateHostContext.Provider\n        value={{\n          templates: () => restTemplates,\n          params: () => this.params,\n        }}\n      >\n        {templatePlaceholder ? templatePlaceholder(content) : content}\n      </TemplateHostContext.Provider>\n    );\n  }\n}\n\n/** A React component to which a related Template is rendered. */\nexport const TemplatePlaceholder: React.ComponentType<TemplatePlaceholderProps> = withContext(\n  PluginHostContext, PLUGIN_HOST_CONTEXT,\n)(\n  withContext(TemplateHostContext, TEMPLATE_HOST_CONTEXT)(TemplatePlaceholderBase),\n);\n\nexport const PlaceholderWithRef: React.ComponentType<TemplatePlaceholderProps & {\n  forwardedRef?: any;\n}> = ({ params, forwardedRef }) => (\n  <TemplatePlaceholder\n    params={{\n      ...params,\n      forwardedRef,\n    }}\n  />\n);\n", "import * as React from 'react';\nimport { PluginHost as PluginHostCore } from '@devexpress/dx-core';\nimport { PluginIndexer } from './plugin-indexer';\nimport { TemplatePlaceholder } from './template-placeholder';\nimport { PluginHostContext } from './contexts';\n\nexport interface PluginHostProps {\n  /** Plugin React elements. */\n  children: React.ReactNode;\n}\n\n/** @internal */\nclass PluginHostBase extends React.PureComponent<PluginHostProps> {\n  host: PluginHostCore;\n\n  constructor(props: PluginHostProps) {\n    super(props);\n\n    this.host = new PluginHostCore();\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <PluginHostContext.Provider value={this.host}>\n        <PluginIndexer>\n          {children}\n        </PluginIndexer>\n        <TemplatePlaceholder name=\"root\" />\n      </PluginHostContext.Provider>\n    );\n  }\n}\n\nexport const PluginHost: React.ComponentType<PluginHostProps> = PluginHostBase;\n", "import { shallowEqual } from '@devexpress/dx-core';\n\n/** @internal */\nexport const getAvailableGetters = (\n  pluginHost,\n  getGetterValue = getterName => pluginHost.get(`${getterName}Getter`),\n) => {\n  const trackedDependencies = {};\n\n  let getters;\n  if (typeof Proxy !== 'undefined') {\n    getters = new Proxy({}, {\n      get(target, prop) {\n        if (typeof prop !== 'string') return undefined;\n        const result = getGetterValue(prop);\n        trackedDependencies[prop] = result;\n        return result;\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        return {\n          configurable: true,\n          enumerable: true,\n          value: this.get!(target as any, prop, undefined),\n        };\n      },\n      ownKeys() {\n        return pluginHost.knownKeys('Getter');\n      },\n    });\n  } else {\n    getters = pluginHost.knownKeys('Getter')\n      .reduce((acc, getterName) => {\n        Object.defineProperty(acc, getterName, {\n          get: () => {\n            const result = getGetterValue(getterName);\n            trackedDependencies[getterName] = result;\n            return result;\n          },\n        });\n        return acc;\n      }, {});\n  }\n\n  return { getters, trackedDependencies };\n};\n\n/** @internal */\nexport const isTrackedDependenciesChanged = (\n  pluginHost,\n  prevTrackedDependencies,\n  getGetterValue = getterName => pluginHost.get(`${getterName}Getter`),\n) => {\n  const trackedDependencies = Object.keys(prevTrackedDependencies)\n    // tslint:disable-next-line: prefer-object-spread\n    .reduce((acc, getterName) => Object.assign(acc, {\n      [getterName]: getGetterValue(getterName),\n    }), {});\n\n  return !shallowEqual(prevTrackedDependencies, trackedDependencies);\n};\n\n/** @internal */\nexport const getAvailableActions = (\n  pluginHost,\n  getAction = actionName => pluginHost.collect(`${actionName}Action`).slice().reverse()[0],\n) => {\n  let actions;\n  if (typeof Proxy !== 'undefined') {\n    actions = new Proxy({}, {\n      get(target, prop) {\n        if (typeof prop !== 'string') return undefined;\n        return getAction(prop);\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        return {\n          configurable: true,\n          enumerable: true,\n          value: this.get!(target as any, prop, undefined),\n        };\n      },\n      ownKeys() {\n        return pluginHost.knownKeys('Action');\n      },\n    });\n  } else {\n    actions = pluginHost.knownKeys('Action')\n      .reduce((acc, actionName) => {\n        Object.defineProperty(acc, actionName, {\n          get: () => getAction(actionName),\n        });\n        return acc;\n      }, {});\n  }\n  return actions;\n};\n", "import * as React from 'react';\nimport { InnerPlugin } from '@devexpress/dx-core';\nimport {\n  getAvailableGetters,\n  getAvailableActions,\n} from './helpers';\nimport { PLUGIN_HOST_CONTEXT, POSITION_CONTEXT } from './constants';\nimport { withHostAndPosition } from '../utils/with-props-from-context';\nimport { PluginContextProps } from './plugin-context-prop-types';\nimport { Getters, Actions } from '../types';\n\nexport interface ActionProps {\n  /** The action name. */\n  name: string;\n  /** A function that is called when the action is executed. */\n  action: (payload: any, getters: Getters, actions: Actions) => void;\n}\n\n/** @internal */\nexport class ActionBase extends React.PureComponent<ActionProps & PluginContextProps> {\n  plugin: InnerPlugin;\n  pluginRegistered: boolean;\n\n  constructor(props) {\n    super(props);\n\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost, [POSITION_CONTEXT]: positionContext } = props;\n    const { name } = props;\n\n    this.plugin = {\n      position: () => positionContext(),\n      [`${name}Action`]: (params) => {\n        const { action } = this.props;\n        const { getters } = getAvailableGetters(\n          pluginHost,\n          getterName => pluginHost.get(`${getterName}Getter`, this.plugin),\n        );\n        let nextParams = params;\n        const actions = getAvailableActions(\n          pluginHost,\n          actionName => (actionName === name\n            ? (newParams) => { nextParams = newParams; }\n            : pluginHost.collect(`${actionName}Action`, this.plugin).slice().reverse()[0]),\n        );\n        action(params, getters, actions);\n        const nextAction = pluginHost.collect(`${name}Action`, this.plugin).slice().reverse()[0];\n        if (nextAction) {\n          nextAction(nextParams);\n        }\n      },\n    };\n\n    pluginHost.registerPlugin(this.plugin);\n\n    this.pluginRegistered = true;\n  }\n\n  componentDidMount() {\n    if (this.pluginRegistered) {\n      return;\n    }\n\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n\n    pluginHost.registerPlugin(this.plugin);\n    this.pluginRegistered = true;\n  }\n\n  componentWillUnmount() {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n\n    pluginHost.unregisterPlugin(this.plugin);\n    this.pluginRegistered = false;\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport const Action: React.ComponentType<ActionProps> = withHostAndPosition(ActionBase);\n", "import * as React from 'react';\nimport {\n  isTrackedDependenciesChanged,\n  getAvailableGetters,\n  getAvailableActions,\n} from './helpers';\nimport { UPDATE_CONNECTION_EVENT, PLUGIN_HOST_CONTEXT, POSITION_CONTEXT } from './constants';\nimport { withHostAndPosition } from '../utils/with-props-from-context';\nimport { InnerPlugin } from '@devexpress/dx-core';\nimport { PluginContextProps } from './plugin-context-prop-types';\nimport { ComputedFn } from '../types';\n\nexport interface GetterProps {\n  /** The Getter's name. */\n  name: string;\n  /** The shared value. */\n  value?: any;\n  /*** A function that calculates a value depending on the values other Getters expose.\n   * The value is computed each time a related Getter's value changes.\n   * Applies only if `value` is not defined.\n   */\n  computed?: ComputedFn;\n}\n\n/** @internal */\nexport class GetterBase extends React.PureComponent<GetterProps & PluginContextProps> {\n  plugin: InnerPlugin;\n  pluginRegistered: boolean;\n\n  constructor(props) {\n    super(props);\n\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost, [POSITION_CONTEXT]: positionContext } = props;\n    const { name } = props;\n\n    let lastComputed;\n    let lastTrackedDependencies = {};\n    let lastResult;\n\n    this.plugin = {\n      position: () => positionContext(),\n      [`${name}Getter`]: (original) => {\n        const { value, computed } = this.props;\n        if (computed === undefined) return value;\n\n        const getGetterValue = getterName => ((getterName === name)\n          ? original\n          : pluginHost.get(`${getterName}Getter`, this.plugin));\n\n        if (computed === lastComputed\n          && !isTrackedDependenciesChanged(pluginHost, lastTrackedDependencies, getGetterValue)) {\n          return lastResult;\n        }\n\n        const { getters, trackedDependencies } = getAvailableGetters(pluginHost, getGetterValue);\n        const actions = getAvailableActions(pluginHost);\n\n        lastComputed = computed;\n        lastTrackedDependencies = trackedDependencies;\n        lastResult = computed(getters, actions);\n        return lastResult;\n      },\n    };\n\n    pluginHost.registerPlugin(this.plugin);\n\n    this.pluginRegistered = true;\n  }\n\n  componentDidMount() {\n    if (this.pluginRegistered) {\n      return;\n    }\n\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n\n    pluginHost.registerPlugin(this.plugin);\n    this.pluginRegistered = true;\n  }\n\n  componentDidUpdate() {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n\n    pluginHost.broadcast(UPDATE_CONNECTION_EVENT);\n  }\n\n  componentWillUnmount() {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n\n    pluginHost.unregisterPlugin(this.plugin);\n    this.pluginRegistered = false;\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport const Getter: React.ComponentType<GetterProps> = withHostAndPosition(GetterBase);\n", "import * as React from 'react';\nimport { InnerPlugin } from '@devexpress/dx-core';\nimport {\n  PLUGIN_HOST_CONTEXT, POSITION_CONTEXT,\n  RERENDER_TEMPLATE_EVENT, RERENDER_TEMPLATE_SCOPE_EVENT,\n} from './constants';\nimport { withHostAndPosition } from '../utils/with-props-from-context';\nimport { PluginContextProps } from './plugin-context-prop-types';\n\nexport interface TemplateProps {\n  // tslint:disable-next-line:max-line-length\n  /** The template name. The `root` name is reserved. A template called `root` is rendered as the plugin based component's root. */\n  name: string;\n  // tslint:disable-next-line:max-line-length\n  /** A predicate function that returns a Boolean value that specifies whether the template should be rendered. */\n  predicate?: (params: object) => boolean;\n  /** A markup or function that returns a markup based on the specified parameters. */\n  children: React.ReactNode | ((params: object) => React.ReactNode);\n}\n\nlet globalTemplateId = 0;\n/** @internal */\nexport class TemplateBase extends React.PureComponent<TemplateProps & PluginContextProps> {\n  id: number;\n  plugin: InnerPlugin;\n  children: () => any;\n  pluginRegistered: boolean;\n\n  constructor(props) {\n    super(props);\n\n    this.children = () => void 0;\n\n    globalTemplateId += 1;\n    this.id = globalTemplateId;\n\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost, [POSITION_CONTEXT]: positionContext } = props;\n    const { name, predicate } = props;\n\n    this.plugin = {\n      position: () => positionContext(),\n      [`${name}Template`]: {\n        id: this.id,\n        predicate: params => (predicate ? predicate(params) : true),\n        children: () => {\n          const { children } = this.props;\n          return children;\n        },\n      },\n    };\n\n    pluginHost.registerPlugin(this.plugin);\n    pluginHost.broadcast(RERENDER_TEMPLATE_SCOPE_EVENT, name);\n\n    this.pluginRegistered = true;\n  }\n\n  componentDidMount() {\n    if (this.pluginRegistered) {\n      return;\n    }\n\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n    const { name } = this.props;\n\n    pluginHost.registerPlugin(this.plugin);\n    pluginHost.broadcast(RERENDER_TEMPLATE_SCOPE_EVENT, name);\n    this.pluginRegistered = true;\n  }\n\n  componentDidUpdate() {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n    pluginHost.broadcast(RERENDER_TEMPLATE_EVENT, this.id);\n  }\n\n  componentWillUnmount() {\n    const { [PLUGIN_HOST_CONTEXT]: pluginHost } = this.props;\n    const { name } = this.props;\n    pluginHost.unregisterPlugin(this.plugin);\n    pluginHost.broadcast(RERENDER_TEMPLATE_SCOPE_EVENT, name);\n    this.pluginRegistered = false;\n  }\n\n  render() {\n    return null;\n  }\n}\n\n/*** A React component that defines a markup that is rendered\n * as the corresponding TemplatePlaceholder.\n */\nexport const Template: React.ComponentType<TemplateProps> = withHostAndPosition(TemplateBase);\n", "import * as React from 'react';\nimport { UPDATE_CONNECTION_EVENT } from './constants';\nimport {\n  isTrackedDependenciesChanged,\n  getAvailableGetters,\n  getAvailableActions,\n} from './helpers';\nimport { PluginHostContext } from './contexts';\nimport { Getters, Actions } from '../types';\n\nexport interface TemplateConnectorProps {\n  /** A function that renders a markup using Getters and Actions passed as arguments. */\n  children: (\n    getters: Getters,\n    actions: Actions,\n  ) => React.ReactNode;\n}\n\n/** @internal */\nclass TemplateConnectorBase extends React.Component<TemplateConnectorProps> {\n  trackedDependencies: { [key: string]: { get: (args) => any }};\n  subscription: { [UPDATE_CONNECTION_EVENT: string]: (args) => void };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.trackedDependencies = {};\n    this.subscription = {\n      [UPDATE_CONNECTION_EVENT]: () => this.updateConnection(),\n    };\n  }\n\n  componentDidMount() {\n    const pluginHost = this.context;\n    pluginHost.registerSubscription(this.subscription);\n  }\n\n  componentWillUnmount() {\n    const pluginHost = this.context;\n    pluginHost.unregisterSubscription(this.subscription);\n  }\n\n  updateConnection() {\n    const pluginHost = this.context;\n\n    if (isTrackedDependenciesChanged(pluginHost, this.trackedDependencies)) {\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    const pluginHost = this.context;\n    const { children } = this.props;\n\n    const { getters, trackedDependencies } = getAvailableGetters(pluginHost);\n    this.trackedDependencies = trackedDependencies;\n    const actions = getAvailableActions(pluginHost);\n\n    return children(getters, actions);\n  }\n}\n\nTemplateConnectorBase.contextType = PluginHostContext;\n\n/** A React component that provides access to Getters and Actions within a Template. */\nexport const TemplateConnector: React.ComponentType<TemplateConnectorProps> = TemplateConnectorBase;\n", "const TIMEOUT = 180;\n\n/** @internal */\nexport class TouchStrategy {\n  delegate: any;\n  touchStartTimeout: any;\n  dragging: boolean;\n\n  constructor(delegate) {\n    this.delegate = delegate;\n    this.touchStartTimeout = null;\n    this.dragging = false;\n  }\n\n  isDragging() {\n    return this.dragging;\n  }\n\n  isWaiting() {\n    return !!this.touchStartTimeout;\n  }\n\n  cancelWaiting() {\n    clearTimeout(this.touchStartTimeout);\n    this.touchStartTimeout = undefined;\n  }\n\n  start(e) {\n    const { clientX: x, clientY: y } = e.touches[0];\n    this.touchStartTimeout = setTimeout(() => {\n      this.delegate.onStart({ x, y });\n      this.dragging = true;\n    }, TIMEOUT);\n  }\n\n  move(e) {\n    this.cancelWaiting();\n    if (this.dragging) {\n      const { clientX, clientY } = e.touches[0];\n      e.preventDefault();\n      this.delegate.onMove({ x: clientX, y: clientY });\n    }\n  }\n\n  end(e) {\n    this.cancelWaiting();\n    if (this.dragging) {\n      const { clientX, clientY } = e.changedTouches[0];\n      this.delegate.onEnd({ x: clientX, y: clientY });\n    }\n    this.dragging = false;\n  }\n}\n", "/* globals document:true */\n\nlet gestureCover: HTMLElement;\n/** @internal */\nexport const toggleGestureCover = (toggle, cursor?) => {\n  let style: React.CSSProperties = {\n    pointerEvents: toggle ? 'all' : 'none',\n  };\n  if (toggle && cursor) {\n    style = {\n      ...style,\n      cursor,\n    };\n  }\n  if (!gestureCover) {\n    style = {\n      ...style,\n      position: 'fixed',\n      top: 0,\n      right: 0,\n      left: 0,\n      bottom: 0,\n      opacity: 0,\n      zIndex: 2147483647,\n    };\n\n    gestureCover = document.createElement('div');\n    document.body.appendChild(gestureCover);\n  }\n  Object.keys(style).forEach((key) => { gestureCover.style[key] = style[key]; });\n};\n", "/* globals document:true window:true */\n\n/** @internal */\nexport const clear = () => {\n  const selection = window.getSelection && window.getSelection();\n\n  if (selection) {\n    if (selection.empty) {\n      selection.empty();\n    } else if (selection.removeAllRanges) {\n      selection.removeAllRanges();\n    }\n  }\n};\n", "/* globals window:true document:true */\n\nimport { toggleGestureCover } from './gesture-cover';\nimport { clear } from './selection-utils';\n\nconst BOUNDARY = 10;\nconst clamp = (value, min, max) => Math.max(Math.min(value, max), min);\nconst isBoundExceeded = (\n  { x: initialX, y: initialY }, { x, y },\n) => clamp(x, initialX - BOUNDARY, initialX + BOUNDARY) !== x\n  || clamp(y, initialY - BOUNDARY, initialY + BOUNDARY) !== y;\n\n/** @internal */\nexport class MouseStrategy {\n  delegate: any;\n  mouseInitialOffset: any;\n  dragging: boolean;\n  e: any;\n\n  constructor(delegate) {\n    this.delegate = delegate;\n    this.mouseInitialOffset = null;\n    this.dragging = false;\n  }\n\n  isDragging() {\n    return this.dragging;\n  }\n\n  start(e) {\n    const { clientX: x, clientY: y } = e;\n    this.e = e;\n    this.mouseInitialOffset = { x, y };\n  }\n\n  move(e) {\n    const { clientX: x, clientY: y } = e;\n    let dragStarted = false;\n    if (!this.dragging && this.mouseInitialOffset) {\n      if (isBoundExceeded(this.mouseInitialOffset, { x, y })) {\n        this.delegate.onStart(this.mouseInitialOffset);\n        clear();\n        dragStarted = true;\n        this.dragging = true;\n      }\n    }\n    if (this.dragging) {\n      e.preventDefault();\n      this.delegate.onMove({ x, y });\n    }\n    if (dragStarted) {\n      const element = document.elementFromPoint(x, y);\n      const cursor = element ? window.getComputedStyle(element).cursor : null;\n      toggleGestureCover(true, cursor);\n    }\n  }\n\n  end(e) {\n    if (this.dragging) {\n      const { clientX: x, clientY: y } = e;\n      toggleGestureCover(false);\n      this.delegate.onEnd({ x, y });\n    }\n    this.mouseInitialOffset = null;\n    this.dragging = false;\n  }\n}\n", "/* globals window:true */\n\nimport { EventEmitter } from '@devexpress/dx-core';\n\nlet eventEmitter;\n/** @internal */\nexport const getSharedEventEmitter = () => {\n  if (!eventEmitter) {\n    eventEmitter = new EventEmitter();\n\n    ['mousemove', 'mouseup', 'touchmove', 'touchend', 'touchcancel']\n      .forEach(name => window.addEventListener(\n        name, e => eventEmitter.emit([name, e]), { passive: false },\n      ));\n  }\n  return eventEmitter;\n};\n", "import * as React from 'react';\n\n/** @internal */\nexport const RefHolder = React.forwardRef((\n  { children }: { children: React.ReactNode },\n  ref: React.MutableRefObject<any> | React.RefCallback<any> | null,\n) => {\n  return React.isValidElement<any>(children) ?\n    typeof children.type === 'string'\n      ? React.cloneElement(children, { ref })\n      : React.cloneElement(children, {\n        forwardedRef: children.props?.forwardedRef ? (node) => {\n          children.props.forwardedRef(node);\n          if (typeof ref === 'function') {\n            ref(node);\n          } else if (ref) {\n            ref.current = node;\n          }\n        } : ref }) :\n    React.createElement(\n      'div',\n      { ref, style: { display: 'contents' } },\n      children,\n    );\n});\n", "import * as React from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { TouchStrategy } from './draggable/touch-strategy';\nimport { MouseStrategy } from './draggable/mouse-strategy';\nimport { getSharedEventEmitter } from './draggable/shared-events';\nimport { clear } from './draggable/selection-utils';\nimport { RefHolder } from './ref-holder';\n\nconst draggingHandled = Symbol('draggingHandled');\n\ntype DraggableProps = {\n  onStart?: (args) => void;\n  onUpdate?: (args) => void;\n  onEnd?: (args) => void;\n  dragItem?: React.MutableRefObject<any> | React.RefCallback<any> | null;\n};\n\n/** @internal */\nexport class Draggable extends React.PureComponent<DraggableProps> {\n  mouseStrategy: MouseStrategy;\n  touchStrategy: TouchStrategy;\n  elementRef: React.MutableRefObject<Element | null>;\n  eventParams: { e: any, isMouseEvent: boolean } | null = null;\n  detachNodeEvents: any = null;\n\n  constructor(props) {\n    super(props);\n    const delegate = {\n      onStart: ({ x, y }) => {\n        const { onStart } = this.props;\n        if (!onStart) return;\n        unstable_batchedUpdates(() => {\n          onStart({ x, y });\n        });\n      },\n      onMove: ({ x, y }) => {\n        const { onUpdate } = this.props;\n        if (!onUpdate) return;\n        unstable_batchedUpdates(() => {\n          onUpdate({ x, y });\n        });\n      },\n      onEnd: ({ x, y }) => {\n        const { onEnd } = this.props;\n        if (!onEnd) return;\n        unstable_batchedUpdates(() => {\n          onEnd({ x, y });\n        });\n      },\n    };\n\n    this.mouseStrategy = new MouseStrategy(delegate);\n    this.touchStrategy = new TouchStrategy(delegate);\n    this.elementRef = React.createRef();\n\n    this.mouseDownListener = this.mouseDownListener.bind(this);\n    this.touchStartListener = this.touchStartListener.bind(this);\n    this.globalListener = this.globalListener.bind(this);\n  }\n\n  componentDidMount() {\n    getSharedEventEmitter().subscribe(this.globalListener);\n    this.setupNodeSubscription();\n  }\n\n  componentDidUpdate() {\n    this.setupNodeSubscription();\n  }\n\n  componentWillUnmount() {\n    if (this.eventParams) {\n      const { isMouseEvent, e } = this.eventParams;\n      if (isMouseEvent) {\n        this.mouseStrategy.end(e);\n      } else {\n        this.touchStrategy.end(e);\n      }\n      this.eventParams = null;\n    }\n    this.detachNodeEvents?.();\n    getSharedEventEmitter().unsubscribe(this.globalListener);\n  }\n\n  setupNodeSubscription() {\n    const node = this.elementRef.current;\n    if (!node) return;\n    this.detachNodeEvents?.();\n    node.addEventListener('mousedown', this.mouseDownListener);\n    node.addEventListener('touchstart', this.touchStartListener, { passive: true });\n    this.detachNodeEvents = () => {\n      node.removeEventListener('mousedown', this.mouseDownListener);\n      node.removeEventListener('touchstart', this.touchStartListener);\n    };\n  }\n\n  mouseDownListener(e) {\n    if (this.touchStrategy.isWaiting() || e[draggingHandled]) return;\n    e.preventDefault();\n    this.mouseStrategy.start(e);\n    e[draggingHandled] = true;\n  }\n\n  touchStartListener(e) {\n    if (e[draggingHandled]) return;\n    this.touchStrategy.start(e);\n    e[draggingHandled] = true;\n  }\n\n  saveEvent(e, isMouseEvent) {\n    this.eventParams = {\n      e,\n      isMouseEvent,\n    };\n  }\n\n  globalListener([name, e]) {\n    switch (name) {\n      case 'mousemove':\n        this.saveEvent(e, true);\n        this.mouseStrategy.move(e);\n        break;\n      case 'mouseup':\n        this.eventParams = null;\n        this.mouseStrategy.end(e);\n        break;\n      case 'touchmove': {\n        this.saveEvent(e, false);\n        this.touchStrategy.move(e);\n        break;\n      }\n      case 'touchend':\n      case 'touchcancel': {\n        this.eventParams = null;\n        this.touchStrategy.end(e);\n        break;\n      }\n      default:\n        break;\n    }\n    if (this.mouseStrategy.isDragging() || this.touchStrategy.isDragging()) {\n      clear();\n    }\n  }\n\n  render() {\n    const { children, dragItem } = this.props;\n    return <RefHolder\n      ref={(node: Element | null) => {\n        this.elementRef.current = node;\n        if (typeof dragItem === 'function') {\n          dragItem(node);\n        } else if (dragItem) {\n          dragItem.current = node;\n        }\n      }}\n    >\n      {children}\n    </RefHolder>;\n  }\n}\n", "import * as React from 'react';\nimport { DragDropProviderCore } from './provider';\n\n/** @internal */\nexport const DragDropContext = React.createContext<DragDropProviderCore | null>(null);\n", "import * as React from 'react';\n\nimport { EventEmitter } from '@devexpress/dx-core';\nimport { DragDropContext } from './context';\n\n/** @internal */\nexport class DragDropProviderCore {\n  payload: null;\n  dragEmitter: EventEmitter;\n\n  constructor() {\n    this.payload = null;\n    this.dragEmitter = new EventEmitter();\n  }\n\n  start(payload, clientOffset) {\n    this.payload = payload;\n    this.dragEmitter.emit({ clientOffset, payload: this.payload });\n  }\n\n  update(clientOffset) {\n    this.dragEmitter.emit({ clientOffset, payload: this.payload });\n  }\n\n  end(clientOffset) {\n    this.dragEmitter.emit({ clientOffset, payload: this.payload, end: true });\n    this.payload = null;\n  }\n}\n\nconst defaultProps = {\n  onChange: ({ payload, clientOffset }) => {},\n};\ntype DragDropProviderDefaultProps = Readonly<typeof defaultProps>;\ntype DragDropProviderProps = Partial<DragDropProviderDefaultProps>;\n\n/** @internal */\n// tslint:disable-next-line: max-classes-per-file\nexport class DragDropProvider extends React.Component<\n  DragDropProviderProps & DragDropProviderDefaultProps\n> {\n  static defaultProps = defaultProps;\n  dragDropProvider: DragDropProviderCore;\n\n  constructor(props) {\n    super(props);\n    const { onChange } = this.props;\n\n    this.dragDropProvider = new DragDropProviderCore();\n\n    this.dragDropProvider.dragEmitter.subscribe(({ payload, clientOffset, end }) => {\n      onChange({\n        payload: end ? null : payload,\n        clientOffset: end ? null : clientOffset,\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { children } = this.props;\n    return nextProps.children !== children;\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <DragDropContext.Provider value={this.dragDropProvider}>\n        {children}\n      </DragDropContext.Provider>\n    );\n  }\n}\n", "import * as React from 'react';\nimport { DragDropContext } from './context';\nimport { Draggable } from '../draggable';\n\nconst defaultProps = {\n  onStart: ({ clientOffset }) => {},\n  onUpdate: ({ clientOffset }) => {},\n  onEnd: ({ clientOffset }) => {},\n};\ntype DragSourceDefaultProps = Readonly<typeof defaultProps>;\ntype DragSourceProps = {\n  payload: any;\n  ref?: React.Ref<Element>;\n} & Partial<DragSourceDefaultProps>;\n\n/** @internal */\nexport const DragSource: React.FC<DragSourceProps> = React.forwardRef(({\n  onStart, onUpdate, onEnd, payload, children,\n}, ref) => {\n  const context = React.useContext(DragDropContext);\n  const dragDropProvider = context;\n\n  return (\n    <Draggable\n      onStart={({ x, y }) => {\n        dragDropProvider?.start(payload, { x, y });\n        onStart?.({ clientOffset: { x, y } });\n      }}\n      onUpdate={({ x, y }) => {\n        dragDropProvider?.update({ x, y });\n        onUpdate?.({ clientOffset: { x, y } });\n      }}\n      onEnd={({ x, y }) => {\n        dragDropProvider?.end({ x, y });\n        onEnd?.({ clientOffset: { x, y } });\n      }}\n      dragItem={ref}\n    >\n      {children}\n    </Draggable>\n  );\n});\nDragSource.defaultProps = defaultProps;\n", "import * as React from 'react';\nimport { RefHolder } from '../ref-holder';\nimport { DragDropContext } from './context';\n\nconst clamp = (value, min, max) => Math.max(Math.min(value, max), min);\n\nconst defaultProps = {\n  onEnter: (args) => {},\n  onOver: (args) => {},\n  onLeave: (args) => {},\n  onDrop: (args) => {},\n};\ntype DropTargetDefaultProps = Readonly<typeof defaultProps>;\n\n/** @internal */\nexport class DropTarget extends React.Component<DropTargetDefaultProps> {\n  static defaultProps = defaultProps;\n  isOver: boolean;\n  elementRef: React.RefObject<Element>;\n\n  constructor(props) {\n    super(props);\n\n    this.isOver = false;\n\n    this.handleDrag = this.handleDrag.bind(this);\n\n    this.elementRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { dragEmitter } = this.context;\n    dragEmitter.subscribe(this.handleDrag);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { children } = this.props;\n    return nextProps.children !== children;\n  }\n\n  componentWillUnmount() {\n    const { dragEmitter } = this.context;\n    dragEmitter.unsubscribe(this.handleDrag);\n  }\n\n  handleDrag({ payload, clientOffset, end }) {\n    const {\n      left,\n      top,\n      right,\n      bottom,\n    } = this.elementRef.current!.getBoundingClientRect();\n    const {\n      onDrop, onEnter, onLeave, onOver,\n    } = this.props;\n    const isOver = clientOffset\n      && clamp(clientOffset.x, left, right) === clientOffset.x\n      && clamp(clientOffset.y, top, bottom) === clientOffset.y;\n\n    if (!this.isOver && isOver) onEnter({ payload, clientOffset });\n    if (this.isOver && isOver) onOver({ payload, clientOffset });\n    if (this.isOver && !isOver) onLeave({ payload, clientOffset });\n    if (isOver && end) onDrop({ payload, clientOffset });\n\n    this.isOver = isOver && !end;\n  }\n\n  render() {\n    const { children } = this.props;\n    return <RefHolder ref={this.elementRef}>{React.Children.only(children)}</RefHolder>;\n  }\n}\n\nDropTarget.contextType = DragDropContext;\n", "/* globals document:true */\n\nimport * as React from 'react';\nimport { SizerProps, Size } from './types';\nimport { shallowEqual } from '@devexpress/dx-core';\n\nconst SCROLL_OFFSET = 2;\nconst styles: Record<string, React.CSSProperties> = {\n  root: {\n    position: 'relative',\n  },\n  triggersRoot: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    overflow: 'hidden',\n    zIndex: -1,\n    visibility: 'hidden',\n    opacity: 0,\n  },\n  expandTrigger: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    overflow: 'auto',\n  },\n  contractTrigger: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    overflow: 'auto',\n    minHeight: '1px',\n    minWidth: '1px',\n  },\n  contractNotifier: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '200%',\n    height: '200%',\n    minHeight: '2px',\n    minWidth: '2px',\n  },\n};\n\n/** @internal */\nexport class Sizer extends React.Component<SizerProps> {\n  static defaultProps = {\n    containerComponent: 'div',\n  };\n\n  rootRef: React.RefObject<HTMLElement>;\n\n  rootNode!: HTMLElement;\n  triggersRoot!: HTMLDivElement;\n  expandTrigger!: HTMLDivElement;\n  expandNotifier!: HTMLDivElement;\n  contractTrigger!: HTMLDivElement;\n  contractNotifier!: HTMLDivElement;\n\n  constructor(props) {\n    super(props);\n\n    this.setupListeners = this.setupListeners.bind(this);\n    this.updateScrolling = this.updateScrolling.bind(this);\n    this.rootRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.rootNode = this.rootRef.current!;\n    this.createListeners();\n\n    this.expandTrigger.addEventListener('scroll', this.setupListeners);\n    this.contractTrigger.addEventListener('scroll', this.setupListeners);\n    this.setupListeners();\n  }\n\n  shouldComponentUpdate(prevProps) {\n    if (prevProps.scrollTop !== this.props.scrollTop ||\n      prevProps.scrollLeft !== this.props.scrollLeft ||\n      (prevProps.style && this.props.style &&\n        !shallowEqual(prevProps.style, this.props.style)) ||\n        (prevProps.style && !this.props.style) ||\n        prevProps.children !== this.props.children) {\n      return true;\n    }\n    return false;\n  }\n\n  componentDidUpdate() {\n    // We can scroll the VirtualTable manually only by changing\n    // containter's (rootNode) scrollTop property.\n    // Viewport changes its own properties automatically.\n    const { scrollTop, scrollLeft } = this.props;\n    if (scrollTop !== undefined && scrollTop > -1) {\n      this.rootNode.scrollTop = scrollTop;\n    }\n    if (scrollLeft !== undefined && scrollLeft > -1) {\n      this.rootNode.scrollLeft = scrollLeft;\n    }\n    this.updateScrolling(this.getSize());\n  }\n\n  // There is no need to remove listeners as divs are removed from DOM when component is unmount.\n  // But there is a little chance that component unmounting and 'scroll' event happen roughly\n  // at the same time so that `setupListeners` is called after component is unmount.\n  componentWillUnmount() {\n    this.expandTrigger.removeEventListener('scroll', this.setupListeners);\n    this.contractTrigger.removeEventListener('scroll', this.setupListeners);\n  }\n\n  getSize = (): Size => ({\n    height: this.rootNode.clientHeight,\n    width: this.rootNode.clientWidth,\n  })\n\n  setupListeners() {\n    const size = this.getSize();\n    const { width, height } = size;\n\n    this.expandNotifier.style.width = `${width + SCROLL_OFFSET}px`;\n    this.expandNotifier.style.height = `${height + SCROLL_OFFSET}px`;\n\n    this.updateScrolling(size);\n\n    const { onSizeChange } = this.props;\n    onSizeChange(size);\n  }\n\n  createListeners() {\n    this.triggersRoot = document.createElement('div');\n    Object.assign(this.triggersRoot.style, styles.triggersRoot);\n    this.rootNode!.appendChild(this.triggersRoot);\n\n    this.expandTrigger = document.createElement('div');\n    Object.assign(this.expandTrigger.style, styles.expandTrigger);\n    this.expandTrigger.addEventListener('scroll', this.setupListeners);\n    this.triggersRoot.appendChild(this.expandTrigger);\n\n    this.expandNotifier = document.createElement('div');\n    this.expandTrigger.appendChild(this.expandNotifier);\n\n    this.contractTrigger = document.createElement('div');\n    Object.assign(this.contractTrigger.style, styles.contractTrigger);\n    this.contractTrigger.addEventListener('scroll', this.setupListeners);\n    this.triggersRoot.appendChild(this.contractTrigger);\n\n    this.contractNotifier = document.createElement('div');\n    Object.assign(this.contractNotifier.style, styles.contractNotifier);\n    this.contractTrigger.appendChild(this.contractNotifier);\n  }\n\n  updateScrolling(size) {\n    const { width, height } = size;\n    this.contractTrigger.scrollTop = height;\n    this.contractTrigger.scrollLeft = width;\n    this.expandTrigger.scrollTop = SCROLL_OFFSET;\n    this.expandTrigger.scrollLeft = SCROLL_OFFSET;\n  }\n\n  render() {\n    const {\n      onSizeChange,\n      containerComponent: Container,\n      style,\n      scrollTop,\n      scrollLeft,\n      ...restProps\n    } = this.props;\n\n    return (\n      <Container // NOTE: should have `position: relative`\n        forwardedRef={this.rootRef}\n        style={style ? { ...styles.root, ...style } : styles.root}\n        {...restProps}\n      />\n    );\n  }\n}\n", "import * as React from 'react';\n\ntype RenderComponentProps = {\n  update: () => void;\n};\n\n/*** A function that creates a new component that allows you to pass additional properties\n * to the wrapped component.\n */\nexport const connectProps = (\n  WrappedComponent: React.ComponentType<any>, getAdditionalProps: () => object,\n): React.ComponentType<any> & { update(): void } => {\n  let storedAdditionalProps = getAdditionalProps();\n  const components = new Set<React.Component>();\n  class RenderComponent extends React.PureComponent<RenderComponentProps> {\n    static update: () => void;\n\n    componentDidMount() {\n      components.add(this);\n    }\n\n    componentWillUnmount() {\n      components.delete(this);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} {...storedAdditionalProps} />;\n    }\n  }\n  RenderComponent.update = () => {\n    storedAdditionalProps = getAdditionalProps();\n    Array.from(components.values()).forEach(component => component.forceUpdate());\n  };\n  return RenderComponent;\n};\n", "import { CreateStateHelperFn } from '../types';\n\n/** @internal */\nexport const createStateHelper: CreateStateHelperFn = (\n  component, controlledStateProperties = {},\n) => {\n  const notifyStateChange = (nextState, state) => {\n    Object.keys(controlledStateProperties).forEach((propertyName) => {\n      const changeEvent = controlledStateProperties[propertyName]();\n      if (changeEvent && nextState[propertyName] !== state[propertyName]) {\n        changeEvent(nextState[propertyName]);\n      }\n    });\n  };\n\n  let lastStateUpdater: (state) => void;\n  let initialState = null;\n  let lastInitialState = null;\n  let newState = null;\n  let shouldNotify = false;\n\n  const applyReducer = (reduce, payload?, callback?) => {\n    const stateUpdater = (prevState) => {\n      if (initialState === null) {\n        initialState = prevState;\n      }\n      const stateChange = reduce({ ...prevState }, payload);\n      const state = { ...prevState, ...stateChange };\n\n      if (typeof callback === 'function') {\n        callback(state, prevState);\n      }\n      if (stateUpdater === lastStateUpdater) {\n        if (lastInitialState !== initialState) {\n          newState = state;\n          if (!shouldNotify) {\n            lastInitialState = initialState;\n            shouldNotify = true;\n          }\n        }\n        initialState = null;\n      }\n\n      return stateChange;\n    };\n    lastStateUpdater = stateUpdater;\n\n    component.setState(stateUpdater, () => {\n      if (shouldNotify) {\n        notifyStateChange(newState, lastInitialState);\n        shouldNotify = false;\n      }\n    });\n  };\n  const applyFieldReducer = (field, reduce, payload) => {\n    applyReducer(state => ({\n      [field]: reduce(state[field], payload),\n    }));\n  };\n\n  return {\n    applyReducer,\n    applyFieldReducer,\n  };\n};\n", "import * as React from 'react';\n\nconst makeBoundComponent = (Target, components, exposed: object) => {\n  class Component extends React.PureComponent {\n    static components: PluginComponents;\n\n    render() {\n      return <Target {...components} {...this.props} />;\n    }\n  }\n  Component.components = Target.components;\n  Object.assign(Component, exposed);\n  return Component;\n};\n\nexport type PluginComponents = { [key: string]: string };\nexport interface ITargetComponent {\n  components: PluginComponents;\n}\n// type ITargetComponentStatic = new() => ITargetComponent;\n\n/** @internal */\nexport const withComponents = components => (Target) => {\n  const props = {};\n  const exposed = {};\n  const targetComponents = (Target as ITargetComponent).components;\n\n  Object.entries(targetComponents).forEach(([fieldName, componentName]: [string, string]) => {\n    const component = components[componentName];\n    if (component && component !== Target[componentName]) {\n      props[fieldName] = component;\n    }\n    exposed[componentName] = component || Target[componentName];\n  });\n\n  return Object.keys(props).length > 0\n    ? makeBoundComponent(Target, props, exposed) : Target;\n};\n", "/* globals Element */\n// tslint:disable-next-line\nimport PropTypes from 'prop-types';\n\n/** @internal */\nexport const RefType = PropTypes.shape({\n  current: PropTypes.instanceOf((typeof Element !== 'undefined') ? Element : Object),\n});\n"],
  "mappings": "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",
  "names": ["PluginHost", "EventEmitter", "React.createContext", "PluginIndexer", "__spreadArray", "__read", "React.createElement", "React.Children", "React.PureComponent", "Component", "PluginBase", "TemplatePlaceholderBase", "React.Component", "PluginHostBase", "PluginHostCore", "PluginHost", "ActionBase", "GetterBase", "_a", "_b", "TemplateBase", "TemplateConnectorBase", "TouchStrategy", "MouseStrategy", "React.forwardRef", "React.isValidElement", "React.cloneElement", "Draggable", "React.createRef", "DragDropProviderCore", "DragDropProvider", "defaultProps", "React.useContext", "clamp", "DropTarget", "Sizer", "RenderComponent", "PropTypes"]
}
